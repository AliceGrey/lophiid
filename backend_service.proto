syntax = "proto3";

option go_package = "/backend_service";

service BackendService {
    rpc HandleProbe(HandleProbeRequest) returns (HandleProbeResponse) {}
}

// Stores 1:N
message KeyValues {
  string key = 1;
  repeated string value = 2;
}
// Stores 1:1
message KeyValue {
  string key = 1;
  string value = 2;
}

// Parsed URL values. Based on golang url.URL
message ParsedURL {
  string scheme = 1;
  string user = 2;
  string password = 3;
  string host = 4;
  int64 port = 5;
  string path = 6;
  repeated KeyValues query = 7;
  string raw_path = 8;
  string raw_query = 9;
  string fragment = 10;
}

// HttpRequest represents the HTTP request that is received from client.
message HttpRequest {
    int64 time_received = 1;
    string proto = 2;
    string method = 3;
    int64 content_length = 4;
    ParsedURL parsed_url = 5;
    repeated KeyValue header = 6;
    // TODO: Add cookies, parsed form data
    string body = 7;
    string remote_address = 8;
    string honeypot_ip = 9;
    string raw = 10;
}

// Contains all information needed to send an HTTP reply.
message HttpResponse {
    int64 code = 1;
    string body = 2;
    repeated KeyValue header = 3;
    repeated KeyValue cookie = 4;
}

message HandleProbeRequest {
  string request_uri = 1;
  HttpRequest request = 2;
}

message HandleProbeResponse {
    HttpResponse response = 1;
}

