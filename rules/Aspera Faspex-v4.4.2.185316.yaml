app:
    id: 137
    name: Aspera Faspex
    version: v4.4.2.185316
    vendor: IBM
    os: ""
    link: https://www.ibm.com/docs/en/aspera-faspex/5.0?topic=welcome-faspex
    created_at: 2024-11-01T15:05:51.617986Z
    updated_at: 2024-11-01T19:05:51.617839Z
    ext_version: 0
    ext_uuid: 8c65506d-45df-4509-93a3-aaf58e542141
    cves: []
rules:
    - id: 440
      uri: /aspera/faspex/javascripts/third-party/underscore-min.js
      body: ""
      method: GET
      port: 0
      uri_matching: prefix
      body_matching: none
      content_id: 447
      app_id: 137
      app_uuid: 8c65506d-45df-4509-93a3-aaf58e542141
      content_uuid: ce7a3fef-8a38-4c8c-8c56-444eed5b5bdc
      created_at: 2024-11-01T19:07:09.688298Z
      updated_at: 2024-11-01T19:11:43.499749Z
      alert: false
      enabled: true
      ext_version: 0
      ext_uuid: 74455028-ff53-4531-add9-abfd45a9b7da
      request_purpose: UNKNOWN
      responder: NONE
      responder_regex: ""
      responder_decoder: NONE
    - id: 442
      uri: /aspera/faspex/javascripts/utils/dialog.js
      body: ""
      method: GET
      port: 0
      uri_matching: prefix
      body_matching: none
      content_id: 449
      app_id: 137
      app_uuid: 8c65506d-45df-4509-93a3-aaf58e542141
      content_uuid: 122dbc26-90e4-4379-bdc8-0139bea54718
      created_at: 2024-11-01T19:07:10.193132Z
      updated_at: 2024-11-01T19:11:30.793265Z
      alert: false
      enabled: true
      ext_version: 0
      ext_uuid: 62fef1c0-4896-47f5-9ca7-2cace989a541
      request_purpose: UNKNOWN
      responder: NONE
      responder_regex: ""
      responder_decoder: NONE
    - id: 441
      uri: /aspera/faspex/javascripts/application.js
      body: ""
      method: GET
      port: 0
      uri_matching: prefix
      body_matching: none
      content_id: 448
      app_id: 137
      app_uuid: 8c65506d-45df-4509-93a3-aaf58e542141
      content_uuid: f21c8f05-2f8d-4db0-9c68-d06d4599709a
      created_at: 2024-11-01T19:07:09.94079Z
      updated_at: 2024-11-01T19:11:12.659062Z
      alert: false
      enabled: true
      ext_version: 0
      ext_uuid: cbff6392-ab07-4108-aeee-b6900e6e5c1d
      request_purpose: UNKNOWN
      responder: NONE
      responder_regex: ""
      responder_decoder: NONE
    - id: 439
      uri: /aspera/faspex/stylesheets/login/new.css
      body: ""
      method: GET
      port: 0
      uri_matching: prefix
      body_matching: none
      content_id: 446
      app_id: 137
      app_uuid: 8c65506d-45df-4509-93a3-aaf58e542141
      content_uuid: db0bfa6b-9df6-4967-9dee-19e72d70cd64
      created_at: 2024-11-01T19:07:09.43572Z
      updated_at: 2024-11-01T19:10:44.263624Z
      alert: false
      enabled: true
      ext_version: 0
      ext_uuid: 3c1339fa-32d0-42d0-b87c-c50da6f836d5
      request_purpose: UNKNOWN
      responder: NONE
      responder_regex: ""
      responder_decoder: NONE
    - id: 443
      uri: /aspera/faspex/javascripts/third-party/ICanHaz.min.js
      body: ""
      method: GET
      port: 0
      uri_matching: prefix
      body_matching: none
      content_id: 450
      app_id: 137
      app_uuid: 8c65506d-45df-4509-93a3-aaf58e542141
      content_uuid: 5174c56c-62c4-40a5-87f2-4c0babbd07ab
      created_at: 2024-11-01T19:07:10.44273Z
      updated_at: 2024-11-01T19:09:58.836021Z
      alert: false
      enabled: true
      ext_version: 0
      ext_uuid: 7a8781a4-fbe4-4717-b32a-2f592288c4b4
      request_purpose: UNKNOWN
      responder: NONE
      responder_regex: ""
      responder_decoder: NONE
    - id: 444
      uri: /aspera/faspex/javascripts/third-party/bootstrap/bootstrap-dropdown.js
      body: ""
      method: GET
      port: 0
      uri_matching: prefix
      body_matching: none
      content_id: 451
      app_id: 137
      app_uuid: 8c65506d-45df-4509-93a3-aaf58e542141
      content_uuid: 0b4183c5-e76a-4d59-bab4-44d12ed8265f
      created_at: 2024-11-01T19:07:10.693137Z
      updated_at: 2024-11-01T19:09:54.409624Z
      alert: false
      enabled: true
      ext_version: 0
      ext_uuid: f4ceb06c-ea8f-4f4b-86b3-84b98f535b26
      request_purpose: UNKNOWN
      responder: NONE
      responder_regex: ""
      responder_decoder: NONE
    - id: 445
      uri: /aspera/faspex/javascripts/third-party/bootstrap/bootstrap-collapse.js
      body: ""
      method: GET
      port: 0
      uri_matching: prefix
      body_matching: none
      content_id: 452
      app_id: 137
      app_uuid: 8c65506d-45df-4509-93a3-aaf58e542141
      content_uuid: 3ce44ee0-aa66-4ade-8d52-c79fc434daa5
      created_at: 2024-11-01T19:07:10.947363Z
      updated_at: 2024-11-01T19:09:50.309631Z
      alert: false
      enabled: true
      ext_version: 0
      ext_uuid: 1d5a9b6e-dcc3-4e64-a0c9-021e06dcb616
      request_purpose: UNKNOWN
      responder: NONE
      responder_regex: ""
      responder_decoder: NONE
    - id: 446
      uri: /aspera/faspex/javascripts/third-party/jquery-ui-overrides.js
      body: ""
      method: GET
      port: 0
      uri_matching: prefix
      body_matching: none
      content_id: 453
      app_id: 137
      app_uuid: 8c65506d-45df-4509-93a3-aaf58e542141
      content_uuid: 0b6dadff-927e-4d5f-8c99-8964ebc8afd1
      created_at: 2024-11-01T19:07:11.200461Z
      updated_at: 2024-11-01T19:09:45.837015Z
      alert: false
      enabled: true
      ext_version: 0
      ext_uuid: 979e38bf-e551-455e-80d7-3b0e509dd91f
      request_purpose: UNKNOWN
      responder: NONE
      responder_regex: ""
      responder_decoder: NONE
    - id: 447
      uri: /aspera/faspex/javascripts/frame_bust.js
      body: ""
      method: GET
      port: 0
      uri_matching: prefix
      body_matching: none
      content_id: 454
      app_id: 137
      app_uuid: 8c65506d-45df-4509-93a3-aaf58e542141
      content_uuid: aee5fa70-efff-4a7c-beeb-b83bd897a6b7
      created_at: 2024-11-01T19:07:11.449556Z
      updated_at: 2024-11-01T19:09:41.22991Z
      alert: false
      enabled: true
      ext_version: 0
      ext_uuid: 0f8a5fcb-216c-4cce-9098-6f5f586e3bca
      request_purpose: UNKNOWN
      responder: NONE
      responder_regex: ""
      responder_decoder: NONE
    - id: 448
      uri: /aspera/faspex/stylesheets/faspex.css
      body: ""
      method: GET
      port: 0
      uri_matching: prefix
      body_matching: none
      content_id: 455
      app_id: 137
      app_uuid: 8c65506d-45df-4509-93a3-aaf58e542141
      content_uuid: d166ee81-26ff-4340-a2d3-df8d3de88a2d
      created_at: 2024-11-01T19:07:11.950612Z
      updated_at: 2024-11-01T19:09:36.503986Z
      alert: false
      enabled: true
      ext_version: 0
      ext_uuid: 2078ff75-72dd-41aa-b8dd-156d99cb179f
      request_purpose: UNKNOWN
      responder: NONE
      responder_regex: ""
      responder_decoder: NONE
    - id: 449
      uri: /aspera/faspex/javascripts/prototype.js
      body: ""
      method: GET
      port: 0
      uri_matching: prefix
      body_matching: none
      content_id: 456
      app_id: 137
      app_uuid: 8c65506d-45df-4509-93a3-aaf58e542141
      content_uuid: 350d3a81-3aae-491b-a330-8f0d1b7c3065
      created_at: 2024-11-01T19:07:12.93784Z
      updated_at: 2024-11-01T19:09:30.942475Z
      alert: false
      enabled: true
      ext_version: 0
      ext_uuid: 6bbadfe8-a46d-4337-8518-4686f38f8ea8
      request_purpose: UNKNOWN
      responder: NONE
      responder_regex: ""
      responder_decoder: NONE
    - id: 450
      uri: /aspera/faspex/javascripts/utils.js
      body: ""
      method: GET
      port: 0
      uri_matching: prefix
      body_matching: none
      content_id: 457
      app_id: 137
      app_uuid: 8c65506d-45df-4509-93a3-aaf58e542141
      content_uuid: 373fafc2-e857-451b-b535-6df5d622102d
      created_at: 2024-11-01T19:07:13.185778Z
      updated_at: 2024-11-01T19:09:26.070051Z
      alert: false
      enabled: true
      ext_version: 0
      ext_uuid: 840c5ad2-99d8-4b08-a497-0dd32e8840a9
      request_purpose: UNKNOWN
      responder: NONE
      responder_regex: ""
      responder_decoder: NONE
    - id: 451
      uri: /aspera/faspex/javascripts/shared/highlight_text.js
      body: ""
      method: GET
      port: 0
      uri_matching: prefix
      body_matching: none
      content_id: 458
      app_id: 137
      app_uuid: 8c65506d-45df-4509-93a3-aaf58e542141
      content_uuid: a15304f5-033d-47d5-8d76-c7a5e5ddca43
      created_at: 2024-11-01T19:07:13.437911Z
      updated_at: 2024-11-01T19:09:17.107883Z
      alert: false
      enabled: true
      ext_version: 0
      ext_uuid: 34e88317-0e83-4bb9-af8c-fba564d3ff1b
      request_purpose: UNKNOWN
      responder: NONE
      responder_regex: ""
      responder_decoder: NONE
    - id: 452
      uri: /aspera/faspex/javascripts/third-party/jquery-3.5.0.min.js
      body: ""
      method: GET
      port: 0
      uri_matching: prefix
      body_matching: none
      content_id: 459
      app_id: 137
      app_uuid: 8c65506d-45df-4509-93a3-aaf58e542141
      content_uuid: 5224a535-a2fb-49fb-890e-527da42dd78e
      created_at: 2024-11-01T19:07:13.706483Z
      updated_at: 2024-11-01T19:09:11.788874Z
      alert: false
      enabled: true
      ext_version: 0
      ext_uuid: ac4f3fce-adb2-49ee-bdfe-3bd2eee52098
      request_purpose: UNKNOWN
      responder: NONE
      responder_regex: ""
      responder_decoder: NONE
    - id: 453
      uri: /aspera/faspex/javascripts/third-party/bootstrap/bootstrap-modal.js
      body: ""
      method: GET
      port: 0
      uri_matching: prefix
      body_matching: none
      content_id: 460
      app_id: 137
      app_uuid: 8c65506d-45df-4509-93a3-aaf58e542141
      content_uuid: dbf0ca5e-d460-4881-9556-b516120914e4
      created_at: 2024-11-01T19:07:13.958162Z
      updated_at: 2024-11-01T19:09:07.103825Z
      alert: false
      enabled: true
      ext_version: 0
      ext_uuid: af6a7887-cf2a-45ab-a1be-2f1b28b73507
      request_purpose: UNKNOWN
      responder: NONE
      responder_regex: ""
      responder_decoder: NONE
    - id: 454
      uri: /aspera/faspex/javascripts/third-party/split.js
      body: ""
      method: GET
      port: 0
      uri_matching: prefix
      body_matching: none
      content_id: 461
      app_id: 137
      app_uuid: 8c65506d-45df-4509-93a3-aaf58e542141
      content_uuid: 4558605e-ecf9-4cfb-ba84-afef4afd8110
      created_at: 2024-11-01T19:07:14.212149Z
      updated_at: 2024-11-01T19:08:59.517957Z
      alert: false
      enabled: true
      ext_version: 0
      ext_uuid: 23a78024-0f0c-49b1-95b5-9b8efd3235fc
      request_purpose: UNKNOWN
      responder: NONE
      responder_regex: ""
      responder_decoder: NONE
    - id: 455
      uri: /aspera/faspex/javascripts/login/new.js
      body: ""
      method: GET
      port: 0
      uri_matching: prefix
      body_matching: none
      content_id: 462
      app_id: 137
      app_uuid: 8c65506d-45df-4509-93a3-aaf58e542141
      content_uuid: efe43428-eaf8-4d8c-a5e5-1b12fccb2a87
      created_at: 2024-11-01T19:07:14.46438Z
      updated_at: 2024-11-01T19:08:54.509978Z
      alert: false
      enabled: true
      ext_version: 0
      ext_uuid: 19909ad9-d904-4c91-a1f5-572d2646d6d5
      request_purpose: UNKNOWN
      responder: NONE
      responder_regex: ""
      responder_decoder: NONE
    - id: 456
      uri: /aspera/faspex/javascripts/third-party/jQuery-UI-Date-Range-Picker/date.js
      body: ""
      method: GET
      port: 0
      uri_matching: prefix
      body_matching: none
      content_id: 463
      app_id: 137
      app_uuid: 8c65506d-45df-4509-93a3-aaf58e542141
      content_uuid: 7974a46b-6274-4425-8666-acc5551c3614
      created_at: 2024-11-01T19:07:14.724443Z
      updated_at: 2024-11-01T19:08:49.811219Z
      alert: false
      enabled: true
      ext_version: 0
      ext_uuid: 8968b38f-75cf-4abf-9c1b-d766f9a2ba39
      request_purpose: UNKNOWN
      responder: NONE
      responder_regex: ""
      responder_decoder: NONE
    - id: 457
      uri: /aspera/faspex/javascripts/third-party/jQuery-UI-Date-Range-Picker/daterangepicker.jQuery.js
      body: ""
      method: GET
      port: 0
      uri_matching: prefix
      body_matching: none
      content_id: 464
      app_id: 137
      app_uuid: 8c65506d-45df-4509-93a3-aaf58e542141
      content_uuid: f7ecb3cb-74bc-4893-a4f3-83ed8a6fe66b
      created_at: 2024-11-01T19:07:14.979209Z
      updated_at: 2024-11-01T19:08:40.055702Z
      alert: false
      enabled: true
      ext_version: 0
      ext_uuid: 608dbf59-5615-4ca0-abdb-69c406d9ac27
      request_purpose: UNKNOWN
      responder: NONE
      responder_regex: ""
      responder_decoder: NONE
    - id: 458
      uri: /aspera/faspex/javascripts/third-party/jquery.placeholder.min.js
      body: ""
      method: GET
      port: 0
      uri_matching: prefix
      body_matching: none
      content_id: 465
      app_id: 137
      app_uuid: 8c65506d-45df-4509-93a3-aaf58e542141
      content_uuid: e20ebc53-0f5a-4fa7-8180-c73bacb00c1c
      created_at: 2024-11-01T19:07:15.231676Z
      updated_at: 2024-11-01T19:08:35.594985Z
      alert: false
      enabled: true
      ext_version: 0
      ext_uuid: a7ce795e-347d-4018-9741-711df258e989
      request_purpose: UNKNOWN
      responder: NONE
      responder_regex: ""
      responder_decoder: NONE
    - id: 459
      uri: /aspera/faspex/images/logo_faspex.svg
      body: ""
      method: GET
      port: 0
      uri_matching: prefix
      body_matching: none
      content_id: 466
      app_id: 137
      app_uuid: 8c65506d-45df-4509-93a3-aaf58e542141
      content_uuid: 9158dd6f-e6c0-44df-88fb-7eebd0fc438f
      created_at: 2024-11-01T19:07:15.485748Z
      updated_at: 2024-11-01T19:08:31.563502Z
      alert: false
      enabled: true
      ext_version: 0
      ext_uuid: aa79f38e-dfc0-44fc-ac0a-73012176d0bd
      request_purpose: UNKNOWN
      responder: NONE
      responder_regex: ""
      responder_decoder: NONE
    - id: 460
      uri: /aspera/faspex/images/favicon.ico
      body: ""
      method: GET
      port: 0
      uri_matching: prefix
      body_matching: none
      content_id: 467
      app_id: 137
      app_uuid: 8c65506d-45df-4509-93a3-aaf58e542141
      content_uuid: 10916f76-2ca9-4ee2-bddb-b1e871f069f2
      created_at: 2024-11-01T19:07:15.73772Z
      updated_at: 2024-11-01T19:08:27.333209Z
      alert: false
      enabled: true
      ext_version: 0
      ext_uuid: b358cbce-ae4d-4e24-8f11-d195cd266f2c
      request_purpose: UNKNOWN
      responder: NONE
      responder_regex: ""
      responder_decoder: NONE
    - id: 461
      uri: /aspera/faspex/stylesheets/third-party/bootstrap/bootstrap.css
      body: ""
      method: GET
      port: 0
      uri_matching: prefix
      body_matching: none
      content_id: 468
      app_id: 137
      app_uuid: 8c65506d-45df-4509-93a3-aaf58e542141
      content_uuid: f4069107-12da-440e-b4b4-732b46e8d5fa
      created_at: 2024-11-01T19:07:15.990626Z
      updated_at: 2024-11-01T19:08:19.916913Z
      alert: false
      enabled: true
      ext_version: 0
      ext_uuid: 284919fd-f728-477e-adbb-4db7746d6fce
      request_purpose: UNKNOWN
      responder: NONE
      responder_regex: ""
      responder_decoder: NONE
    - id: 462
      uri: /aspera/faspex/stylesheets/connect_auto_install.css
      body: ""
      method: GET
      port: 0
      uri_matching: prefix
      body_matching: none
      content_id: 469
      app_id: 137
      app_uuid: 8c65506d-45df-4509-93a3-aaf58e542141
      content_uuid: 02b8c6ef-25b5-4638-87ac-70965e05b0e4
      created_at: 2024-11-01T19:07:16.241002Z
      updated_at: 2024-11-01T19:08:12.380289Z
      alert: false
      enabled: true
      ext_version: 0
      ext_uuid: c46c8939-8edd-4a23-93cf-9c3b86564c38
      request_purpose: UNKNOWN
      responder: NONE
      responder_regex: ""
      responder_decoder: NONE
    - id: 463
      uri: /aspera/faspex/javascripts/third-party/jquery-ui.min.js
      body: ""
      method: GET
      port: 0
      uri_matching: prefix
      body_matching: none
      content_id: 470
      app_id: 137
      app_uuid: 8c65506d-45df-4509-93a3-aaf58e542141
      content_uuid: 5464ca0a-263e-4db7-9720-38480113f4a0
      created_at: 2024-11-01T19:07:16.503267Z
      updated_at: 2024-11-01T19:08:07.020052Z
      alert: false
      enabled: true
      ext_version: 0
      ext_uuid: 1c7fa88a-c180-4798-abb2-1198b659a441
      request_purpose: UNKNOWN
      responder: NONE
      responder_regex: ""
      responder_decoder: NONE
    - id: 464
      uri: /aspera/faspex/javascripts/third-party/mustache-2.3.0.min.js
      body: ""
      method: GET
      port: 0
      uri_matching: prefix
      body_matching: none
      content_id: 471
      app_id: 137
      app_uuid: 8c65506d-45df-4509-93a3-aaf58e542141
      content_uuid: 57b09e0c-e523-4fd7-9366-3831abd139a2
      created_at: 2024-11-01T19:07:16.75301Z
      updated_at: 2024-11-01T19:08:01.276017Z
      alert: false
      enabled: true
      ext_version: 0
      ext_uuid: b8b6da2a-7253-47cd-918c-be8c34dd87ae
      request_purpose: UNKNOWN
      responder: NONE
      responder_regex: ""
      responder_decoder: NONE
    - id: 465
      uri: /aspera/faspex/javascripts/third-party/bootstrap/bootstrap-transition.js
      body: ""
      method: GET
      port: 0
      uri_matching: prefix
      body_matching: none
      content_id: 472
      app_id: 137
      app_uuid: 8c65506d-45df-4509-93a3-aaf58e542141
      content_uuid: db2072ad-70e0-4dad-ad19-0b25c2ee5792
      created_at: 2024-11-01T19:07:17.003425Z
      updated_at: 2024-11-01T19:07:54.426238Z
      alert: false
      enabled: true
      ext_version: 0
      ext_uuid: 0ba7a12e-cffa-466c-a856-e64708e21972
      request_purpose: UNKNOWN
      responder: NONE
      responder_regex: ""
      responder_decoder: NONE
    - id: 466
      uri: /aspera/faspex/javascripts/scriptaculous.js
      body: ""
      method: GET
      port: 0
      uri_matching: prefix
      body_matching: none
      content_id: 473
      app_id: 137
      app_uuid: 8c65506d-45df-4509-93a3-aaf58e542141
      content_uuid: e5eb4c76-d73d-447e-8d1f-6ec22c5205d9
      created_at: 2024-11-01T19:07:17.252634Z
      updated_at: 2024-11-01T19:07:49.675336Z
      alert: false
      enabled: true
      ext_version: 0
      ext_uuid: d8e5b817-b1ba-41e2-aaf3-c3cda51de9ba
      request_purpose: UNKNOWN
      responder: NONE
      responder_regex: ""
      responder_decoder: NONE
    - id: 438
      uri: /aspera/faspex/login/new
      body: ""
      method: GET
      port: 0
      uri_matching: exact
      body_matching: none
      content_id: 445
      app_id: 137
      app_uuid: 8c65506d-45df-4509-93a3-aaf58e542141
      content_uuid: 07253abe-3580-480a-ba14-3d5c46d912af
      created_at: 2024-11-01T19:07:09.182444Z
      updated_at: 2024-11-01T19:07:09.182353Z
      alert: false
      enabled: true
      ext_version: 0
      ext_uuid: d1b8a148-e795-4b01-967e-32f26ef5144e
      request_purpose: UNKNOWN
      responder: NONE
      responder_regex: ""
      responder_decoder: NONE
    - id: 437
      uri: /aspera/faspex/reset_passwords/new
      body: ""
      method: GET
      port: 0
      uri_matching: exact
      body_matching: none
      content_id: 444
      app_id: 137
      app_uuid: 8c65506d-45df-4509-93a3-aaf58e542141
      content_uuid: 4c0a1eb2-83c6-4e10-9d12-052d364569b1
      created_at: 2024-11-01T19:07:08.813255Z
      updated_at: 2024-11-01T19:07:08.813234Z
      alert: false
      enabled: true
      ext_version: 0
      ext_uuid: fcb55cbf-6534-40df-9841-a62fc8058a42
      request_purpose: UNKNOWN
      responder: NONE
      responder_regex: ""
      responder_decoder: NONE
    - id: 436
      uri: /aspera/
      body: ""
      method: GET
      port: 0
      uri_matching: exact
      body_matching: none
      content_id: 443
      app_id: 137
      app_uuid: 8c65506d-45df-4509-93a3-aaf58e542141
      content_uuid: 31c4e95a-1a07-43d9-a06f-265962192a5d
      created_at: 2024-11-01T19:07:08.535972Z
      updated_at: 2024-11-01T19:07:08.535814Z
      alert: false
      enabled: true
      ext_version: 0
      ext_uuid: 9d3715eb-b986-4291-92ff-699688f27365
      request_purpose: UNKNOWN
      responder: NONE
      responder_regex: ""
      responder_decoder: NONE
    - id: 435
      uri: /aspera/faspex
      body: ""
      method: GET
      port: 0
      uri_matching: exact
      body_matching: none
      content_id: 442
      app_id: 137
      app_uuid: 8c65506d-45df-4509-93a3-aaf58e542141
      content_uuid: 5844dfef-d2ce-4b96-bf64-7c12cc79e070
      created_at: 2024-11-01T19:07:08.284482Z
      updated_at: 2024-11-01T19:07:08.284411Z
      alert: false
      enabled: true
      ext_version: 0
      ext_uuid: 0546451e-5b5e-4f23-9ace-e52ee1a6e3ee
      request_purpose: UNKNOWN
      responder: NONE
      responder_regex: ""
      responder_decoder: NONE
    - id: 434
      uri: /
      body: ""
      method: GET
      port: 0
      uri_matching: exact
      body_matching: none
      content_id: 441
      app_id: 137
      app_uuid: 8c65506d-45df-4509-93a3-aaf58e542141
      content_uuid: fbba207b-24f5-4017-9d39-b49590df8b86
      created_at: 2024-11-01T19:07:07.63668Z
      updated_at: 2024-11-01T19:07:07.636517Z
      alert: false
      enabled: true
      ext_version: 0
      ext_uuid: f8d2cd3e-4c23-4741-8928-67c604851563
      request_purpose: UNKNOWN
      responder: NONE
      responder_regex: ""
      responder_decoder: NONE
contents:
    - id: 464
      data: KGZ1bmN0aW9uICgkKSB7CgovKioKICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KICogalF1ZXJ5LVBsdWdpbiAiZGF0ZXJhbmdlcGlja2VyLmpRdWVyeS5qcyIKICogYnkgU2NvdHQgSmVobCwgc2NvdHRAZmlsYW1lbnRncm91cC5jb20KICogcmVmZXJlbmNlIGFydGljbGU6IGh0dHA6Ly93d3cuZmlsYW1lbnRncm91cC5jb20vbGFiL3VwZGF0ZV9kYXRlX3JhbmdlX3BpY2tlcl93aXRoX2pxdWVyeV91aS8KICogZGVtbyBwYWdlOiBodHRwOi8vd3d3LmZpbGFtZW50Z3JvdXAuY29tL2V4YW1wbGVzL2RhdGVyYW5nZXBpY2tlci8KICogCiAqIENvcHlyaWdodCAoYykgMjAxMCBGaWxhbWVudCBHcm91cCwgSW5jCiAqIER1YWwgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCAoZmlsYW1lbnRncm91cC5jb20vZXhhbXBsZXMvbWl0LWxpY2Vuc2UudHh0KSBhbmQgR1BMIChmaWxhbWVudGdyb3VwLmNvbS9leGFtcGxlcy9ncGwtbGljZW5zZS50eHQpIGxpY2Vuc2VzLgogKgogKiBEZXBlbmRlbmNpZXM6IGpxdWVyeSwganF1ZXJ5IFVJIGRhdGVwaWNrZXIsIGRhdGUuanMsIGpRdWVyeSBVSSBDU1MgRnJhbWV3b3JrCiAKICogIDEyLjE1LjIwMTAgTWFkZSBzb21lIGZpeGVzIHRvIHJlc29sdmUgYnJlYWtpbmcgY2hhbmdlcyBpbnRyb2R1Y2VkIGJ5IGpRdWVyeSBVSSAxLjguNwogKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogKi8KalF1ZXJ5LmZuLmRhdGVyYW5nZXBpY2tlciA9IGZ1bmN0aW9uKHNldHRpbmdzKXsKCXZhciByYW5nZUlucHV0ID0gJCh0aGlzKTsKCQoJLy9kZWZhdWx0cwoJdmFyIG9wdGlvbnMgPSBqUXVlcnkuZXh0ZW5kKHsKCQlwcmVzZXRSYW5nZXM6IFsKCQkJe3RleHQ6ICdUb2RheScsIGRhdGVTdGFydDogJ3RvZGF5JywgZGF0ZUVuZDogJ3RvZGF5JyB9LAoJCQl7dGV4dDogJ0xhc3QgNyBkYXlzJywgZGF0ZVN0YXJ0OiAndG9kYXktN2RheXMnLCBkYXRlRW5kOiAndG9kYXknIH0sCgkJCXt0ZXh0OiAnTW9udGggdG8gZGF0ZScsIGRhdGVTdGFydDogZnVuY3Rpb24oKXsgcmV0dXJuIERhdGUucGFyc2UoJ3RvZGF5JykubW92ZVRvRmlyc3REYXlPZk1vbnRoKCk7ICB9LCBkYXRlRW5kOiAndG9kYXknIH0sCgkJCXt0ZXh0OiAnWWVhciB0byBkYXRlJywgZGF0ZVN0YXJ0OiBmdW5jdGlvbigpeyB2YXIgeD0gRGF0ZS5wYXJzZSgndG9kYXknKTsgeC5zZXRNb250aCgwKTsgeC5zZXREYXRlKDEpOyByZXR1cm4geDsgfSwgZGF0ZUVuZDogJ3RvZGF5JyB9LAoJCQkvL2V4dHJhczoKCQkJe3RleHQ6ICdUaGUgcHJldmlvdXMgTW9udGgnLCBkYXRlU3RhcnQ6IGZ1bmN0aW9uKCl7IHJldHVybiBEYXRlLnBhcnNlKCcxIG1vbnRoIGFnbycpLm1vdmVUb0ZpcnN0RGF5T2ZNb250aCgpOyAgfSwgZGF0ZUVuZDogZnVuY3Rpb24oKXsgcmV0dXJuIERhdGUucGFyc2UoJzEgbW9udGggYWdvJykubW92ZVRvTGFzdERheU9mTW9udGgoKTsgIH0gfQoJCQkvL3t0ZXh0OiAnVG9tb3Jyb3cnLCBkYXRlU3RhcnQ6ICdUb21vcnJvdycsIGRhdGVFbmQ6ICdUb21vcnJvdycgfSwKCQkJLy97dGV4dDogJ0FkIENhbXBhaWduJywgZGF0ZVN0YXJ0OiAnMDMvMDcvMDgnLCBkYXRlRW5kOiAnVG9kYXknIH0sCgkJCS8ve3RleHQ6ICdMYXN0IDMwIERheXMnLCBkYXRlU3RhcnQ6ICdUb2RheS0zMCcsIGRhdGVFbmQ6ICdUb2RheScgfSwKCQkJLy97dGV4dDogJ05leHQgMzAgRGF5cycsIGRhdGVTdGFydDogJ1RvZGF5JywgZGF0ZUVuZDogJ1RvZGF5KzMwJyB9LAoJCQkvL3t0ZXh0OiAnT3VyIEFkIENhbXBhaWduJywgZGF0ZVN0YXJ0OiAnMDMvMDcvMDgnLCBkYXRlRW5kOiAnMDcvMDgvMDgnIH0KCQldLCAKCQkvL3ByZXNldFJhbmdlczogYXJyYXkgb2Ygb2JqZWN0cyBmb3IgZWFjaCBtZW51IHByZXNldC4gCgkJLy9FYWNoIG9iaiBtdXN0IGhhdmUgdGV4dCwgZGF0ZVN0YXJ0LCBkYXRlRW5kLiBkYXRlU3RhcnQsIGRhdGVFbmQgYWNjZXB0IGRhdGUuanMgc3RyaW5nIG9yIGEgZnVuY3Rpb24gd2hpY2ggcmV0dXJucyBhIGRhdGUgb2JqZWN0CgkJcHJlc2V0czogewoJCQlzcGVjaWZpY0RhdGU6ICdTcGVjaWZpYyBEYXRlJywgCgkJCWFsbERhdGVzQmVmb3JlOiAnQWxsIERhdGVzIEJlZm9yZScsIAoJCQlhbGxEYXRlc0FmdGVyOiAnQWxsIERhdGVzIEFmdGVyJywgCgkJCWRhdGVSYW5nZTogJ0RhdGUgUmFuZ2UnCgkJfSwKCQlyYW5nZVN0YXJ0VGl0bGU6ICdTdGFydCBkYXRlJywKCQlyYW5nZUVuZFRpdGxlOiAnRW5kIGRhdGUnLAoJCW5leHRMaW5rVGV4dDogJ05leHQnLAoJCXByZXZMaW5rVGV4dDogJ1ByZXYnLAoJCWRvbmVCdXR0b25UZXh0OiAnRG9uZScsCgkJZWFybGllc3REYXRlOiBEYXRlLnBhcnNlKCctMTV5ZWFycycpLCAvL2VhcmxpZXN0IGRhdGUgYWxsb3dlZCAKCQlsYXRlc3REYXRlOiBEYXRlLnBhcnNlKCcrMTV5ZWFycycpLCAvL2xhdGVzdCBkYXRlIGFsbG93ZWQgCgkJY29uc3RyYWluRGF0ZXM6IGZhbHNlLAoJCXJhbmdlU3BsaXR0ZXI6ICctJywgLy9zdHJpbmcgdG8gdXNlIGJldHdlZW4gZGF0ZXMgaW4gc2luZ2xlIGlucHV0CgkJZGF0ZUZvcm1hdDogJ20vZC95eScsIC8vIGRhdGUgZm9ybWF0dGluZy4gQXZhaWxhYmxlIGZvcm1hdHM6IGh0dHA6Ly9kb2NzLmpxdWVyeS5jb20vVUkvRGF0ZXBpY2tlci8lMjQuZGF0ZXBpY2tlci5mb3JtYXREYXRlCgkJY2xvc2VPblNlbGVjdDogdHJ1ZSwgLy9pZiBhIGNvbXBsZXRlIHNlbGVjdGlvbiBpcyBtYWRlLCBjbG9zZSB0aGUgbWVudQoJCWFycm93czogZmFsc2UsCgkJYXBwZW5kVG86ICdib2R5JywKCQlvbkNsb3NlOiBmdW5jdGlvbigpe30sCgkJb25PcGVuOiBmdW5jdGlvbigpe30sCgkJb25DaGFuZ2U6IGZ1bmN0aW9uKCl7fSwKCQlkYXRlcGlja2VyT3B0aW9uczogbnVsbCAvL29iamVjdCBjb250YWluaW5nIG5hdGl2ZSBVSSBkYXRlcGlja2VyIEFQSSBvcHRpb25zCgl9LCBzZXR0aW5ncyk7CgkKCQoKCS8vY3VzdG9tIGRhdGVwaWNrZXIgb3B0aW9ucywgZXh0ZW5kZWQgYnkgb3B0aW9ucwoJdmFyIGRhdGVwaWNrZXJPcHRpb25zID0gewoJCW9uU2VsZWN0OiBmdW5jdGlvbihkYXRlVGV4dCwgaW5zdCkgeyAKCQkJCWlmKHJwLmZpbmQoJy51aS1kYXRlcmFuZ2VwaWNrZXItc3BlY2lmaWNEYXRlJykuaXMoJy51aS1zdGF0ZS1hY3RpdmUnKSl7CgkJCQkJcnAuZmluZCgnLnJhbmdlLWVuZCcpLmRhdGVwaWNrZXIoJ3NldERhdGUnLCBycC5maW5kKCcucmFuZ2Utc3RhcnQnKS5kYXRlcGlja2VyKCdnZXREYXRlJykgKTsgCgkJCQl9CgkJCQkKCQkJCSQodGhpcykudHJpZ2dlcignY29uc3RyYWluT3RoZXJQaWNrZXInKTsKCQkJCQoJCQkJdmFyIHJhbmdlQSA9IGZEYXRlKCBycC5maW5kKCcucmFuZ2Utc3RhcnQnKS5kYXRlcGlja2VyKCdnZXREYXRlJykgKTsKCQkJCXZhciByYW5nZUIgPSBmRGF0ZSggcnAuZmluZCgnLnJhbmdlLWVuZCcpLmRhdGVwaWNrZXIoJ2dldERhdGUnKSApOwoJCQkJCgkJCQkvL3NlbmQgYmFjayB0byBpbnB1dCBvciBpbnB1dHMKCQkJCWlmKHJhbmdlSW5wdXQubGVuZ3RoID09IDIpewoJCQkJCXJhbmdlSW5wdXQuZXEoMCkudmFsKHJhbmdlQSk7CgkJCQkJcmFuZ2VJbnB1dC5lcSgxKS52YWwocmFuZ2VCKTsKCQkJCX0KCQkJCWVsc2V7CgkJCQkJcmFuZ2VJbnB1dC52YWwoKHJhbmdlQSAhPSByYW5nZUIpID8gcmFuZ2VBKycgJysgb3B0aW9ucy5yYW5nZVNwbGl0dGVyICsnICcrcmFuZ2VCIDogcmFuZ2VBKTsKCQkJCX0KCQkJCS8vaWYgY2xvc2VPblNlbGVjdCBpcyB0cnVlCgkJCQlpZihvcHRpb25zLmNsb3NlT25TZWxlY3QpewoJCQkJCWlmKCFycC5maW5kKCdsaS51aS1zdGF0ZS1hY3RpdmUnKS5pcygnLnVpLWRhdGVyYW5nZXBpY2tlci1kYXRlUmFuZ2UnKSAmJiAhcnAuaXMoJzphbmltYXRlZCcpICl7CgkJCQkJCWhpZGVSUCgpOwoJCQkJCX0KCQkJCX0JCgkJCQlvcHRpb25zLm9uQ2hhbmdlKCk7CQkJCgkJCX0sCgkJCWRlZmF1bHREYXRlOiArMAoJfTsKCQoJLy9jaGFuZ2UgZXZlbnQgZmlyZXMgYm90aCB3aGVuIGEgY2FsZW5kYXIgaXMgdXBkYXRlZCBvciBhIGNoYW5nZSBldmVudCBvbiB0aGUgaW5wdXQgaXMgdHJpZ2dlcmVkCglyYW5nZUlucHV0LmJpbmQoJ2NoYW5nZScsIG9wdGlvbnMub25DaGFuZ2UpOwoJCgkvL2RhdGVwaWNrZXIgb3B0aW9ucyBmcm9tIG9wdGlvbnMKCW9wdGlvbnMuZGF0ZXBpY2tlck9wdGlvbnMgPSAoc2V0dGluZ3MpID8galF1ZXJ5LmV4dGVuZChkYXRlcGlja2VyT3B0aW9ucywgc2V0dGluZ3MuZGF0ZXBpY2tlck9wdGlvbnMpIDogZGF0ZXBpY2tlck9wdGlvbnM7CgkKCS8vQ2FwdHVyZSBEYXRlcyBmcm9tIGlucHV0KHMpCgl2YXIgaW5wdXREYXRlQSwgaW5wdXREYXRlQiA9IERhdGUucGFyc2UoJ3RvZGF5Jyk7Cgl2YXIgaW5wdXREYXRlQXRlbXAsIGlucHV0RGF0ZUJ0ZW1wOwoJaWYocmFuZ2VJbnB1dC5sZW5ndGggPT0gMil7CgkJaW5wdXREYXRlQXRlbXAgPSBEYXRlLnBhcnNlKCByYW5nZUlucHV0LmVxKDApLnZhbCgpICk7CgkJaW5wdXREYXRlQnRlbXAgPSBEYXRlLnBhcnNlKCByYW5nZUlucHV0LmVxKDEpLnZhbCgpICk7CgkJaWYoaW5wdXREYXRlQXRlbXAgPT0gbnVsbCl7aW5wdXREYXRlQXRlbXAgPSBpbnB1dERhdGVCdGVtcDt9IAoJCWlmKGlucHV0RGF0ZUJ0ZW1wID09IG51bGwpe2lucHV0RGF0ZUJ0ZW1wID0gaW5wdXREYXRlQXRlbXA7fSAKCX0KCWVsc2UgewoJCWlucHV0RGF0ZUF0ZW1wID0gRGF0ZS5wYXJzZSggcmFuZ2VJbnB1dC52YWwoKS5zcGxpdChvcHRpb25zLnJhbmdlU3BsaXR0ZXIpWzBdICk7CgkJaW5wdXREYXRlQnRlbXAgPSBEYXRlLnBhcnNlKCByYW5nZUlucHV0LnZhbCgpLnNwbGl0KG9wdGlvbnMucmFuZ2VTcGxpdHRlcilbMV0gKTsKCQlpZihpbnB1dERhdGVCdGVtcCA9PSBudWxsKXtpbnB1dERhdGVCdGVtcCA9IGlucHV0RGF0ZUF0ZW1wO30gLy9pZiBvbmUgZGF0ZSwgc2V0IGJvdGgKCX0KCWlmKGlucHV0RGF0ZUF0ZW1wICE9IG51bGwpe2lucHV0RGF0ZUEgPSBpbnB1dERhdGVBdGVtcDt9CglpZihpbnB1dERhdGVCdGVtcCAhPSBudWxsKXtpbnB1dERhdGVCID0gaW5wdXREYXRlQnRlbXA7fQoKCQkKCS8vYnVpbGQgcGlja2VyIGFuZCAKCXZhciBycCA9ICQoJzxkaXYgY2xhc3M9InVpLWRhdGVyYW5nZXBpY2tlciB1aS13aWRnZXQgdWktaGVscGVyLWNsZWFyZml4IHVpLXdpZGdldC1jb250ZW50IHVpLWNvcm5lci1hbGwiPjwvZGl2PicpOwoJdmFyIHJwUHJlc2V0cyA9IChmdW5jdGlvbigpewoJCXZhciB1bCA9ICQoJzx1bCBjbGFzcz0idWktd2lkZ2V0LWNvbnRlbnQiPjwvdWw+JykuYXBwZW5kVG8ocnApOwoJCWpRdWVyeS5lYWNoKG9wdGlvbnMucHJlc2V0UmFuZ2VzLGZ1bmN0aW9uKCl7CgkJCSQoJzxsaSBjbGFzcz0idWktZGF0ZXJhbmdlcGlja2VyLScrIHRoaXMudGV4dC5yZXBsYWNlKC8gL2csICcnKSArJyB1aS1jb3JuZXItYWxsIj48YSBocmVmPSIjIj4nKyB0aGlzLnRleHQgKyc8L2E+PC9saT4nKQoJCQkuZGF0YSgnZGF0ZVN0YXJ0JywgdGhpcy5kYXRlU3RhcnQpCgkJCS5kYXRhKCdkYXRlRW5kJywgdGhpcy5kYXRlRW5kKQoJCQkuYXBwZW5kVG8odWwpOwoJCX0pOwoJCXZhciB4PTA7CgkJalF1ZXJ5LmVhY2gob3B0aW9ucy5wcmVzZXRzLCBmdW5jdGlvbihrZXksIHZhbHVlKSB7CgkJCSQoJzxsaSBjbGFzcz0idWktZGF0ZXJhbmdlcGlja2VyLScrIGtleSArJyBwcmVzZXRfJysgeCArJyB1aS1oZWxwZXItY2xlYXJmaXggdWktY29ybmVyLWFsbCI+PHNwYW4gY2xhc3M9InVpLWljb24gdWktaWNvbi10cmlhbmdsZS0xLWUiPjwvc3Bhbj48YSBocmVmPSIjIj4nKyB2YWx1ZSArJzwvYT48L2xpPicpCgkJCS5hcHBlbmRUbyh1bCk7CgkJCXgrKzsKCQl9KTsKCQkKCQl1bC5maW5kKCdsaScpLmhvdmVyKAoJCQkJZnVuY3Rpb24oKXsKCQkJCQkkKHRoaXMpLmFkZENsYXNzKCd1aS1zdGF0ZS1ob3ZlcicpOwoJCQkJfSwKCQkJCWZ1bmN0aW9uKCl7CgkJCQkJJCh0aGlzKS5yZW1vdmVDbGFzcygndWktc3RhdGUtaG92ZXInKTsKCQkJCX0pCgkJCS5jbGljayhmdW5jdGlvbigpewoJCQkJcnAuZmluZCgnLnVpLXN0YXRlLWFjdGl2ZScpLnJlbW92ZUNsYXNzKCd1aS1zdGF0ZS1hY3RpdmUnKTsKCQkJCSQodGhpcykuYWRkQ2xhc3MoJ3VpLXN0YXRlLWFjdGl2ZScpOwoJCQkJY2xpY2tBY3Rpb25zKCQodGhpcykscnAsIHJwUGlja2VycywgZG9uZUJ0bik7CgkJCQlyZXR1cm4gZmFsc2U7CgkJCX0pOwoJCXJldHVybiB1bDsKCX0pKCk7CgkJCQkKCS8vZnVuY3Rpb24gdG8gZm9ybWF0IGEgZGF0ZSBzdHJpbmcgICAgICAgIAoJZnVuY3Rpb24gZkRhdGUoZGF0ZSl7CgkgICBpZighZGF0ZS5nZXREYXRlKCkpe3JldHVybiAnJzt9CgkgICB2YXIgZGF5ID0gZGF0ZS5nZXREYXRlKCk7CgkgICB2YXIgbW9udGggPSBkYXRlLmdldE1vbnRoKCk7CgkgICB2YXIgeWVhciA9IGRhdGUuZ2V0RnVsbFllYXIoKTsKCSAgIG1vbnRoKys7IC8vIGFkanVzdCBqYXZhc2NyaXB0IG1vbnRoCgkgICB2YXIgZGF0ZUZvcm1hdCA9IG9wdGlvbnMuZGF0ZUZvcm1hdDsKCSAgIHJldHVybiBqUXVlcnkuZGF0ZXBpY2tlci5mb3JtYXREYXRlKCBkYXRlRm9ybWF0LCBkYXRlICk7IAoJfQoJCgkKCWpRdWVyeS5mbi5yZXN0b3JlRGF0ZUZyb21EYXRhID0gZnVuY3Rpb24oKXsKCQlpZigkKHRoaXMpLmRhdGEoJ3NhdmVEYXRlJykpewoJCQkkKHRoaXMpLmRhdGVwaWNrZXIoJ3NldERhdGUnLCAkKHRoaXMpLmRhdGEoJ3NhdmVEYXRlJykpLnJlbW92ZURhdGEoJ3NhdmVEYXRlJyk7IAoJCX0KCQlyZXR1cm4gdGhpczsKCX0KCWpRdWVyeS5mbi5zYXZlRGF0ZVRvRGF0YSA9IGZ1bmN0aW9uKCl7CgkJaWYoISQodGhpcykuZGF0YSgnc2F2ZURhdGUnKSl7CgkJCSQodGhpcykuZGF0YSgnc2F2ZURhdGUnLCAkKHRoaXMpLmRhdGVwaWNrZXIoJ2dldERhdGUnKSApOwoJCX0KCQlyZXR1cm4gdGhpczsKCX0KCQoJLy9zaG93LCBoaWRlLCBvciB0b2dnbGUgcmFuZ2VwaWNrZXIKCWZ1bmN0aW9uIHNob3dSUCgpewoJCWlmKHJwLmRhdGEoJ3N0YXRlJykgPT0gJ2Nsb3NlZCcpeyAKCQkJcG9zaXRpb25SUCgpOwoJCQlycC5mYWRlSW4oMzAwKS5kYXRhKCdzdGF0ZScsICdvcGVuJyk7CgkJCW9wdGlvbnMub25PcGVuKCk7IAoJCX0KCX0KCWZ1bmN0aW9uIGhpZGVSUCgpewoJCWlmKHJwLmRhdGEoJ3N0YXRlJykgPT0gJ29wZW4nKXsgCgkJCXJwLmZhZGVPdXQoMzAwKS5kYXRhKCdzdGF0ZScsICdjbG9zZWQnKTsKCQkJb3B0aW9ucy5vbkNsb3NlKCk7IAoJCX0KCX0KCWZ1bmN0aW9uIHRvZ2dsZVJQKCl7CgkJaWYoIHJwLmRhdGEoJ3N0YXRlJykgPT0gJ29wZW4nICl7IGhpZGVSUCgpOyB9CgkJZWxzZSB7IHNob3dSUCgpOyB9Cgl9CglmdW5jdGlvbiBwb3NpdGlvblJQKCl7CgkJdmFyIHJlbEVsID0gcmlDb250YWluIHx8IHJhbmdlSW5wdXQ7IC8vaWYgYXJyb3dzLCB1c2UgcGFyZW50IGZvciBvZmZzZXRzCgkJdmFyIHJpT2Zmc2V0ID0gcmVsRWwub2Zmc2V0KCksCgkJCXNpZGUgPSAnbGVmdCcsCgkJCXZhbCA9IHJpT2Zmc2V0LmxlZnQsCgkJCW9mZlJpZ2h0ID0gJCh3aW5kb3cpLndpZHRoKCkgLSB2YWwgLSByZWxFbC5vdXRlcldpZHRoKCk7CgoJCWlmKHZhbCA+IG9mZlJpZ2h0KXsKCQkJc2lkZSA9ICdyaWdodCcsIHZhbCA9ICBvZmZSaWdodDsKCQl9CgkJCgkJcnAucGFyZW50KCkuY3NzKHNpZGUsIHZhbCkuY3NzKCd0b3AnLCByaU9mZnNldC50b3AgKyByZWxFbC5vdXRlckhlaWdodCgpKTsKCX0KCQoJCgkJCQkJCgkvL3ByZXNldCBtZW51IGNsaWNrIGV2ZW50cwkKCWZ1bmN0aW9uIGNsaWNrQWN0aW9ucyhlbCwgcnAsIHJwUGlja2VycywgZG9uZUJ0bil7CgkJCgkJaWYoZWwuaXMoJy51aS1kYXRlcmFuZ2VwaWNrZXItc3BlY2lmaWNEYXRlJykpewoJCQkvL1NwZWNpZmljIERhdGUgKHNob3cgdGhlICJzdGFydCIgY2FsZW5kYXIpCgkJCWRvbmVCdG4uaGlkZSgpOwoJCQlycFBpY2tlcnMuc2hvdygpOwoJCQlycC5maW5kKCcudGl0bGUtc3RhcnQnKS50ZXh0KCBvcHRpb25zLnByZXNldHMuc3BlY2lmaWNEYXRlICk7CgkJCXJwLmZpbmQoJy5yYW5nZS1zdGFydCcpLnJlc3RvcmVEYXRlRnJvbURhdGEoKS5jc3MoJ29wYWNpdHknLDEpLnNob3coNDAwKTsKCQkJcnAuZmluZCgnLnJhbmdlLWVuZCcpLnJlc3RvcmVEYXRlRnJvbURhdGEoKS5jc3MoJ29wYWNpdHknLDApLmhpZGUoNDAwKTsKCQkJc2V0VGltZW91dChmdW5jdGlvbigpe2RvbmVCdG4uZmFkZUluKCk7fSwgNDAwKTsKCQl9CgkJZWxzZSBpZihlbC5pcygnLnVpLWRhdGVyYW5nZXBpY2tlci1hbGxEYXRlc0JlZm9yZScpKXsKCQkJLy9BbGwgZGF0ZXMgYmVmb3JlIHNwZWNpZmljIGRhdGUgKHNob3cgdGhlICJlbmQiIGNhbGVuZGFyIGFuZCBzZXQgdGhlICJzdGFydCIgY2FsZW5kYXIgdG8gdGhlIGVhcmxpZXN0IGRhdGUpCgkJCWRvbmVCdG4uaGlkZSgpOwoJCQlycFBpY2tlcnMuc2hvdygpOwoJCQlycC5maW5kKCcudGl0bGUtZW5kJykudGV4dCggb3B0aW9ucy5wcmVzZXRzLmFsbERhdGVzQmVmb3JlICk7CgkJCXJwLmZpbmQoJy5yYW5nZS1zdGFydCcpLnNhdmVEYXRlVG9EYXRhKCkuZGF0ZXBpY2tlcignc2V0RGF0ZScsIG9wdGlvbnMuZWFybGllc3REYXRlKS5jc3MoJ29wYWNpdHknLDApLmhpZGUoNDAwKTsKCQkJcnAuZmluZCgnLnJhbmdlLWVuZCcpLnJlc3RvcmVEYXRlRnJvbURhdGEoKS5jc3MoJ29wYWNpdHknLDEpLnNob3coNDAwKTsKCQkJc2V0VGltZW91dChmdW5jdGlvbigpe2RvbmVCdG4uZmFkZUluKCk7fSwgNDAwKTsKCQl9CgkJZWxzZSBpZihlbC5pcygnLnVpLWRhdGVyYW5nZXBpY2tlci1hbGxEYXRlc0FmdGVyJykpewoJCQkvL0FsbCBkYXRlcyBhZnRlciBzcGVjaWZpYyBkYXRlIChzaG93IHRoZSAic3RhcnQiIGNhbGVuZGFyIGFuZCBzZXQgdGhlICJlbmQiIGNhbGVuZGFyIHRvIHRoZSBsYXRlc3QgZGF0ZSkKCQkJZG9uZUJ0bi5oaWRlKCk7CgkJCXJwUGlja2Vycy5zaG93KCk7CgkJCXJwLmZpbmQoJy50aXRsZS1zdGFydCcpLnRleHQoIG9wdGlvbnMucHJlc2V0cy5hbGxEYXRlc0FmdGVyICk7CgkJCXJwLmZpbmQoJy5yYW5nZS1zdGFydCcpLnJlc3RvcmVEYXRlRnJvbURhdGEoKS5jc3MoJ29wYWNpdHknLDEpLnNob3coNDAwKTsKCQkJcnAuZmluZCgnLnJhbmdlLWVuZCcpLnNhdmVEYXRlVG9EYXRhKCkuZGF0ZXBpY2tlcignc2V0RGF0ZScsIG9wdGlvbnMubGF0ZXN0RGF0ZSkuY3NzKCdvcGFjaXR5JywwKS5oaWRlKDQwMCk7CgkJCXNldFRpbWVvdXQoZnVuY3Rpb24oKXtkb25lQnRuLmZhZGVJbigpO30sIDQwMCk7CgkJfQoJCWVsc2UgaWYoZWwuaXMoJy51aS1kYXRlcmFuZ2VwaWNrZXItZGF0ZVJhbmdlJykpewoJCQkvL1NwZWNpZmljIERhdGUgcmFuZ2UgKHNob3cgYm90aCBjYWxlbmRhcnMpCgkJCWRvbmVCdG4uaGlkZSgpOwoJCQlycFBpY2tlcnMuc2hvdygpOwoJCQlycC5maW5kKCcudGl0bGUtc3RhcnQnKS50ZXh0KG9wdGlvbnMucmFuZ2VTdGFydFRpdGxlKTsKCQkJcnAuZmluZCgnLnRpdGxlLWVuZCcpLnRleHQob3B0aW9ucy5yYW5nZUVuZFRpdGxlKTsKCQkJcnAuZmluZCgnLnJhbmdlLXN0YXJ0JykucmVzdG9yZURhdGVGcm9tRGF0YSgpLmNzcygnb3BhY2l0eScsMSkuc2hvdyg0MDApOwoJCQlycC5maW5kKCcucmFuZ2UtZW5kJykucmVzdG9yZURhdGVGcm9tRGF0YSgpLmNzcygnb3BhY2l0eScsMSkuc2hvdyg0MDApOwoJCQlzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7ZG9uZUJ0bi5mYWRlSW4oKTt9LCA0MDApOwoJCX0KCQllbHNlIHsKCQkJLy9jdXN0b20gZGF0ZSByYW5nZSBzcGVjaWZpZWQgaW4gdGhlIG9wdGlvbnMgKG5vIGNhbGVuZGFycyBzaG93bikKCQkJZG9uZUJ0bi5oaWRlKCk7CgkJCXJwLmZpbmQoJy5yYW5nZS1zdGFydCwgLnJhbmdlLWVuZCcpLmNzcygnb3BhY2l0eScsMCkuaGlkZSg0MDAsIGZ1bmN0aW9uKCl7CgkJCQlycFBpY2tlcnMuaGlkZSgpOwoJCQl9KTsKCQkJdmFyIGRhdGVTdGFydCA9ICh0eXBlb2YgZWwuZGF0YSgnZGF0ZVN0YXJ0JykgPT0gJ3N0cmluZycpID8gRGF0ZS5wYXJzZShlbC5kYXRhKCdkYXRlU3RhcnQnKSkgOiBlbC5kYXRhKCdkYXRlU3RhcnQnKSgpOwoJCQl2YXIgZGF0ZUVuZCA9ICh0eXBlb2YgZWwuZGF0YSgnZGF0ZUVuZCcpID09ICdzdHJpbmcnKSA/IERhdGUucGFyc2UoZWwuZGF0YSgnZGF0ZUVuZCcpKSA6IGVsLmRhdGEoJ2RhdGVFbmQnKSgpOwoJCQlycC5maW5kKCcucmFuZ2Utc3RhcnQnKS5kYXRlcGlja2VyKCdzZXREYXRlJywgZGF0ZVN0YXJ0KS5maW5kKCcudWktZGF0ZXBpY2tlci1jdXJyZW50LWRheScpLnRyaWdnZXIoJ2NsaWNrJyk7CgkJCXJwLmZpbmQoJy5yYW5nZS1lbmQnKS5kYXRlcGlja2VyKCdzZXREYXRlJywgZGF0ZUVuZCkuZmluZCgnLnVpLWRhdGVwaWNrZXItY3VycmVudC1kYXknKS50cmlnZ2VyKCdjbGljaycpOwoJCX0KCQkKCQlyZXR1cm4gZmFsc2U7Cgl9CQoJCgoJLy9waWNrZXIgZGl2cwoJdmFyIHJwUGlja2VycyA9ICQoJzxkaXYgY2xhc3M9InJhbmdlcyB1aS13aWRnZXQtaGVhZGVyIHVpLWNvcm5lci1hbGwgdWktaGVscGVyLWNsZWFyZml4Ij48ZGl2IGNsYXNzPSJyYW5nZS1zdGFydCI+PHNwYW4gY2xhc3M9InRpdGxlLXN0YXJ0Ij5TdGFydCBEYXRlPC9zcGFuPjwvZGl2PjxkaXYgY2xhc3M9InJhbmdlLWVuZCI+PHNwYW4gY2xhc3M9InRpdGxlLWVuZCI+RW5kIERhdGU8L3NwYW4+PC9kaXY+PC9kaXY+JykuYXBwZW5kVG8ocnApOwoJcnBQaWNrZXJzLmZpbmQoJy5yYW5nZS1zdGFydCwgLnJhbmdlLWVuZCcpCgkJLmRhdGVwaWNrZXIob3B0aW9ucy5kYXRlcGlja2VyT3B0aW9ucyk7CgkKCQoJcnBQaWNrZXJzLmZpbmQoJy5yYW5nZS1zdGFydCcpLmRhdGVwaWNrZXIoJ3NldERhdGUnLCBpbnB1dERhdGVBKTsKCXJwUGlja2Vycy5maW5kKCcucmFuZ2UtZW5kJykuZGF0ZXBpY2tlcignc2V0RGF0ZScsIGlucHV0RGF0ZUIpOwoJCglycFBpY2tlcnMuZmluZCgnLnJhbmdlLXN0YXJ0LCAucmFuZ2UtZW5kJykJCgkJLmJpbmQoJ2NvbnN0cmFpbk90aGVyUGlja2VyJywgZnVuY3Rpb24oKXsKCQkJaWYob3B0aW9ucy5jb25zdHJhaW5EYXRlcyl7CgkJCQkvL2NvbnN0cmFpbiBkYXRlcwoJCQkJaWYoJCh0aGlzKS5pcygnLnJhbmdlLXN0YXJ0JykpewoJCQkJCXJwLmZpbmQoJy5yYW5nZS1lbmQnKS5kYXRlcGlja2VyKCAib3B0aW9uIiwgIm1pbkRhdGUiLCAkKHRoaXMpLmRhdGVwaWNrZXIoJ2dldERhdGUnKSk7CgkJCQl9CgkJCQllbHNlewoJCQkJCXJwLmZpbmQoJy5yYW5nZS1zdGFydCcpLmRhdGVwaWNrZXIoICJvcHRpb24iLCAibWF4RGF0ZSIsICQodGhpcykuZGF0ZXBpY2tlcignZ2V0RGF0ZScpKTsKCQkJCX0JCQkKCQkJfQoJCX0pCgkJLnRyaWdnZXIoJ2NvbnN0cmFpbk90aGVyUGlja2VyJyk7CgkKCXZhciBkb25lQnRuID0gJCgnPGJ1dHRvbiBjbGFzcz0iYnRuRG9uZSB1aS1zdGF0ZS1kZWZhdWx0IHVpLWNvcm5lci1hbGwiPicrIG9wdGlvbnMuZG9uZUJ1dHRvblRleHQgKyc8L2J1dHRvbj4nKQoJLmNsaWNrKGZ1bmN0aW9uKCl7CgkJcnAuZmluZCgnLnVpLWRhdGVwaWNrZXItY3VycmVudC1kYXknKS50cmlnZ2VyKCdjbGljaycpOwoJCWhpZGVSUCgpOwoJfSkKCS5ob3ZlcigKCQkJZnVuY3Rpb24oKXsKCQkJCSQodGhpcykuYWRkQ2xhc3MoJ3VpLXN0YXRlLWhvdmVyJyk7CgkJCX0sCgkJCWZ1bmN0aW9uKCl7CgkJCQkkKHRoaXMpLnJlbW92ZUNsYXNzKCd1aS1zdGF0ZS1ob3ZlcicpOwoJCQl9CgkpCgkuYXBwZW5kVG8ocnBQaWNrZXJzKTsKCQoJCgkKCQoJLy9pbnB1dHMgdG9nZ2xlIHJhbmdlcGlja2VyIHZpc2liaWxpdHkKCSQodGhpcykuY2xpY2soZnVuY3Rpb24oKXsKCQl0b2dnbGVSUCgpOwoJCXJldHVybiBmYWxzZTsKCX0pOwoJLy9oaWRlIGVtIGFsbAoJcnBQaWNrZXJzLmhpZGUoKS5maW5kKCcucmFuZ2Utc3RhcnQsIC5yYW5nZS1lbmQsIC5idG5Eb25lJykuaGlkZSgpOwoJCglycC5kYXRhKCdzdGF0ZScsICdjbG9zZWQnKTsKCQoJLy9GaXhlZCBmb3IgalF1ZXJ5IFVJIDEuOC43IC0gQ2FsZW5kYXJzIGFyZSBoaWRkZW4gb3RoZXJ3aXNlIQoJcnBQaWNrZXJzLmZpbmQoJy51aS1kYXRlcGlja2VyJykuY3NzKCJkaXNwbGF5IiwiYmxvY2siKTsKCQoJLy9pbmplY3QgcnAKCSQob3B0aW9ucy5hcHBlbmRUbykuYXBwZW5kKHJwKTsKCQoJLy93cmFwIGFuZCBwb3NpdGlvbgoJcnAud3JhcCgnPGRpdiBjbGFzcz0idWktZGF0ZXJhbmdlcGlja2VyY29udGFpbiI+PC9kaXY+Jyk7CgoJLy9hZGQgYXJyb3dzIChvbmx5IGF2YWlsYWJsZSBvbiBvbmUgaW5wdXQpCglpZiAob3B0aW9ucy5hcnJvd3MgJiYgKHJhbmdlSW5wdXQubGVuZ3RoPT0xKSkgewoJCXZhciBwcmV2TGluayA9ICQoJzxhIGhyZWY9IiMiIGNsYXNzPSJ1aS1kYXRlcmFuZ2VwaWNrZXItcHJldiB1aS1jb3JuZXItYWxsIiB0aXRsZT0iJysgb3B0aW9ucy5wcmV2TGlua1RleHQgKyciPjxzcGFuIGNsYXNzPSJ1aS1pY29uIHVpLWljb24tY2lyY2xlLXRyaWFuZ2xlLXciPicrIG9wdGlvbnMucHJldkxpbmtUZXh0ICsnPC9zcGFuPjwvYT4nKTsKCQl2YXIgbmV4dExpbmsgPSAkKCc8YSBocmVmPSIjIiBjbGFzcz0idWktZGF0ZXJhbmdlcGlja2VyLW5leHQgdWktY29ybmVyLWFsbCIgdGl0bGU9IicrIG9wdGlvbnMubmV4dExpbmtUZXh0ICsnIj48c3BhbiBjbGFzcz0idWktaWNvbiB1aS1pY29uLWNpcmNsZS10cmlhbmdsZS1lIj4nKyBvcHRpb25zLm5leHRMaW5rVGV4dCArJzwvc3Bhbj48L2E+Jyk7CgkKCQkkKHRoaXMpCgkJLmFkZENsYXNzKCd1aS1yYW5nZXBpY2tlci1pbnB1dCB1aS13aWRnZXQtY29udGVudCcpCgkJLndyYXAoJzxkaXYgY2xhc3M9InVpLWRhdGVyYW5nZXBpY2tlci1hcnJvd3MgdWktd2lkZ2V0IHVpLXdpZGdldC1oZWFkZXIgdWktaGVscGVyLWNsZWFyZml4IHVpLWNvcm5lci1hbGwiPjwvZGl2PicpCgkJLmJlZm9yZSggcHJldkxpbmsgKQoJCS5iZWZvcmUoIG5leHRMaW5rICkKCQkucGFyZW50KCkuZmluZCgnYScpLmNsaWNrKGZ1bmN0aW9uKCl7CgkJCXZhciBkYXRlQSA9IHJwUGlja2Vycy5maW5kKCcucmFuZ2Utc3RhcnQnKS5kYXRlcGlja2VyKCdnZXREYXRlJyk7CgkJCXZhciBkYXRlQiA9IHJwUGlja2Vycy5maW5kKCcucmFuZ2UtZW5kJykuZGF0ZXBpY2tlcignZ2V0RGF0ZScpOwoJCQl2YXIgZGlmZiA9IE1hdGguYWJzKCBuZXcgVGltZVNwYW4oZGF0ZUEgLSBkYXRlQikuZ2V0VG90YWxNaWxsaXNlY29uZHMoKSApICsgODY0MDAwMDA7IC8vZGlmZmVyZW5jZSBwbHVzIG9uZSBkYXkKCQkJaWYoJCh0aGlzKS5pcygnLnVpLWRhdGVyYW5nZXBpY2tlci1wcmV2JykpeyBkaWZmID0gLWRpZmY7IH0KCQkJCgkJCXJwUGlja2Vycy5maW5kKCcucmFuZ2Utc3RhcnQsIC5yYW5nZS1lbmQgJykuZWFjaChmdW5jdGlvbigpewoJCQkJCXZhciB0aGlzRGF0ZSA9ICQodGhpcykuZGF0ZXBpY2tlciggImdldERhdGUiKTsKCQkJCQlpZih0aGlzRGF0ZSA9PSBudWxsKXtyZXR1cm4gZmFsc2U7fQoJCQkJCSQodGhpcykuZGF0ZXBpY2tlciggInNldERhdGUiLCB0aGlzRGF0ZS5hZGQoe21pbGxpc2Vjb25kczogZGlmZn0pICkuZmluZCgnLnVpLWRhdGVwaWNrZXItY3VycmVudC1kYXknKS50cmlnZ2VyKCdjbGljaycpOwoJCQl9KTsKCQkJcmV0dXJuIGZhbHNlOwoJCX0pCgkJLmhvdmVyKAoJCQlmdW5jdGlvbigpewoJCQkJJCh0aGlzKS5hZGRDbGFzcygndWktc3RhdGUtaG92ZXInKTsKCQkJfSwKCQkJZnVuY3Rpb24oKXsKCQkJCSQodGhpcykucmVtb3ZlQ2xhc3MoJ3VpLXN0YXRlLWhvdmVyJyk7CgkJCX0pOwoJCQoJCXZhciByaUNvbnRhaW4gPSByYW5nZUlucHV0LnBhcmVudCgpOwkKCX0KCQoJCgkkKGRvY3VtZW50KS5jbGljayhmdW5jdGlvbigpewoJCWlmIChycC5pcygnOnZpc2libGUnKSkgewoJCQloaWRlUlAoKTsKCQl9Cgl9KTsgCgoJcnAuY2xpY2soZnVuY3Rpb24oKXtyZXR1cm4gZmFsc2U7fSkuaGlkZSgpOwoJcmV0dXJuIHRoaXM7Cn0KCn0pKGpRdWVyeSk7Cg==
      name: Aspera Faspex - /aspera/faspex/javascripts/third-party/jQuery-UI-Date-Range-Picker/daterangepicker.jQuery.js
      description: 'Fetched from URL: https://69.46.153.12/aspera/faspex/javascripts/third-party/jQuery-UI-Date-Range-Picker/daterangepicker.jQuery.js'
      content_type: application/javascript
      server: Apache
      status_code: "200"
      headers:
        - 'X-Frame-Options: SAMEORIGIN'
        - 'Last-Modified: Thu, 26 May 2022 07:08:26 GMT'
        - 'Etag: "366a-5dfe4db292e80"'
        - 'Accept-Ranges: bytes'
        - 'Content-Length: 13930'
        - 'Content-Security-Policy: script-src ''self'' ''unsafe-inline'' ''unsafe-eval'' https://local.connectme.us https://d3gcli72yxqn2z.cloudfront.net; frame-ancestors ''none'''
        - 'Strict-Transport-Security: max-age=63072000; includeSubdomains; preload'
        - 'X-Content-Type-Options: nosniff'
        - 'X-Xss-Protection: 1; mode=block'
      created_at: 2024-11-01T19:07:14.970198Z
      updated_at: 2024-11-01T19:07:14.969941Z
      ext_version: 0
      ext_uuid: f7ecb3cb-74bc-4893-a4f3-83ed8a6fe66b
    - id: 466
      data: PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4KPCEtLSBHZW5lcmF0b3I6IEFkb2JlIElsbHVzdHJhdG9yIDIyLjAuMSwgU1ZHIEV4cG9ydCBQbHVnLUluIC4gU1ZHIFZlcnNpb246IDYuMDAgQnVpbGQgMCkgIC0tPgo8c3ZnIHZlcnNpb249IjEuMSIgaWQ9IkxheWVyXzEiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgeG1sbnM6eGxpbms9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsiIHg9IjBweCIgeT0iMHB4IgoJIHZpZXdCb3g9IjAgMCA5MTAuOSAxMDAiIHN0eWxlPSJlbmFibGUtYmFja2dyb3VuZDpuZXcgMCAwIDkxMC45IDEwMDsiIHhtbDpzcGFjZT0icHJlc2VydmUiPgo8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgoJLnN0MHtmaWxsOiMyMjFGMUY7fQoJLnN0MXtmaWxsOiNGRkZGRkY7fQoJLnN0MntmaWxsOiMyMzFGMjA7fQo8L3N0eWxlPgo8cGF0aCBpZD0iSUJNX3g1Rl9Bc3BlcmFfeDVGX29uX3g1Rl9DbG91ZF85XyIgY2xhc3M9InN0MSIgZD0iTTgsNzYuNHYtNy4yaDEwLjFWMTEuNkg4VjQuNGgyOC45djcuMkgyNi44djU3LjZoMTAuMXY3LjIKCUMzNi45LDc2LjQsOCw3Ni40LDgsNzYuNHogTTUyLjcsNC40aDI5LjZjMTEuOSwwLDE5LjIsNy4zLDE5LjIsMTguNmMwLDEwLjctNi45LDE0LjUtMTEuNywxNS4zdjAuNmM1LjIsMC4zLDE0LjEsNC43LDE0LjEsMTYuNwoJYzAsMTEuOS03LjksMjAuOC0xOC42LDIwLjhINTIuN1Y0LjR6IE02MS4zLDM1LjVoMTkuOWM2LjgsMCwxMC45LTMuNiwxMC45LTEwVjIyYzAtNi40LTQuMS0xMC0xMC45LTEwSDYxLjNWMzUuNXogTTYxLjMsNjguN2gyMS40CgljNy40LDAsMTItMy45LDEyLTExLjF2LTMuNWMwLTcuMi00LjUtMTEuMS0xMi0xMS4xSDYxLjNWNjguN3ogTTE3NiwxNS43aC0wLjVsLTYuMSwxMi4xbC0xNy4yLDMxLjRsLTE3LjEtMzEuNGwtNi4xLTEyaC0wLjV2NjAuNQoJSDEyMHYtNzJoMTEuM2wyMC42LDM4LjhoMC40TDE3Myw0LjNoMTEuM3Y3MmgtOC41VjE1LjdIMTc2eiBNMjY2LjYsNzYuNGwtNS4yLTE3LjFoLTI0bC01LjIsMTcuMWgtMTUuOUwyNDAsNC4zaDE5LjRsMjMuNCw3Mi4xCglIMjY2LjZ6IE0yNDkuNiwxOC42aC0wLjVsLTcuOSwyNy4zaDE2LjVMMjQ5LjYsMTguNnogTTI4Ny42LDY3LjlsOS05LjFjMy44LDQuMiw4LjUsNi45LDE0LjMsNi45YzYsMCw4LTIsOC01LjIKCWMwLTIuNy0xLjctNC01LjUtNC41bC01LjktMC43Yy0xMi4zLTEuNS0xOC4zLTYuOS0xOC4zLTE2LjdjMC0xMC40LDguMS0xNy42LDIxLTE3LjZjMTEuMywwLDE2LjYsMy4xLDIyLjEsOC41bC04LjgsOQoJYy0zLjQtMy40LTcuOS01LjYtMTIuNS01LjZjLTUuMiwwLTcuMiwxLjktNy4yLDQuNWMwLDIuOSwxLjIsNC40LDUuNyw1LjFsNi4xLDAuOGMxMS44LDEuNSwxNy44LDYuOSwxNy44LDE2LjMKCWMwLDEwLjQtOS4zLDE4LjEtMjMuMiwxOC4xQzMwMCw3Ny42LDI5My4yLDc0LjEsMjg3LjYsNjcuOXogTTM0NC4xLDIyLjJoMTUuMnY5LjFoMC41YzEuNS02LDcuNS0xMC4zLDE0LjUtMTAuMwoJYzEzLjcsMCwyMC44LDkuOSwyMC44LDI4LjNzLTcuMSwyOC40LTIwLjgsMjguNGMtNywwLTEzLTQuNC0xNC41LTEwLjNoLTAuNVY5N0gzNDRMMzQ0LjEsMjIuMkwzNDQuMSwyMi4yeiBNMzc5LjMsNTR2LTkuNAoJYzAtNi44LTQuMi0xMS4yLTEwLTExLjJzLTEwLDMtMTAsNy45djE2YzAsNSw0LjIsNy45LDEwLDcuOVMzNzkuMyw2MC44LDM3OS4zLDU0eiBNNDAzLjQsNDkuMmMwLTE3LjEsOS4xLTI4LjMsMjUuNC0yOC4zCgljMTcuOSwwLDI1LjIsMTMsMjUuMiwyNy42VjUzaC0zNC44djFjMCw3LjEsMy44LDExLjcsMTIsMTEuN2M2LjQsMCw5LjktMywxMy4zLTYuNWw3LjYsOS41Yy00LjgsNS42LTEyLjgsOS0yMi43LDkKCUM0MTIuOCw3Ny42LDQwMy40LDY2LjYsNDAzLjQsNDkuMnogTTQxOS4xLDQzLjR2MC44aDE5di0wLjljMC02LjYtMy0xMS05LjEtMTFTNDE5LjEsMzYuNiw0MTkuMSw0My40eiBNNDY0LjcsNzYuNFYyMi4ySDQ4MFYzNGgwLjUKCWMxLjItNiw1LjQtMTEuOCwxMy44LTExLjhoMi43djE0LjJoLTMuOGMtOC45LDAtMTMuMiwyLTEzLjIsOC4zdjMxLjdINDY0Ljd6IE01NDUsNzYuNGMtNS41LDAtOS40LTMuNy0xMC4zLTkuNWgtMC42CgljLTEuNyw3LTcuNiwxMC43LTE1LjksMTAuN2MtMTAuOCwwLTE2LjgtNi40LTE2LjgtMTUuOGMwLTExLjQsOC45LTE2LjksMjMuMi0xNi45aDguNnYtMy40YzAtNS4zLTIuNi04LjYtOS04LjYKCWMtNi4xLDAtOS4zLDMuMS0xMS43LDYuNGwtOS4xLThjNC40LTYuNCwxMC41LTEwLjMsMjEuOS0xMC4zYzE1LjMsMCwyMy4xLDcsMjMuMSwxOS44djIzLjdoNS4xdjExLjlINTQ1eiBNNTMzLjEsNjB2LTYuNGgtNy40CgljLTUuOSwwLTksMi4yLTksNi4xdjEuNWMwLDMuOSwyLjYsNS44LDcuMSw1LjhDNTI4LjksNjcsNTMzLjEsNjQuOSw1MzMuMSw2MHoiLz4KPGc+Cgk8cGF0aCBjbGFzcz0ic3QxIiBkPSJNNTg4LjYsNzguMXYtNzRoNDQuMXY3LjhoLTM1LjJ2MjMuN2gzMi4xdjcuOGgtMzIuMXYzNC42SDU4OC42eiIvPgoJPHBhdGggY2xhc3M9InN0MSIgZD0iTTY4MC40LDc4LjFjLTYuMywwLTguOC0zLjgtOS40LTguOWgtMC41Yy0yLjMsNi43LTguMiwxMC4yLTE1LjgsMTAuMmMtMTEuNiwwLTE4LjMtNi40LTE4LjMtMTYuNQoJCWMwLTEwLjMsNy40LTE2LDIzLjMtMTZoMTAuOHYtNS40YzAtNy43LTQuMi0xMi0xMi45LTEyYy02LjYsMC0xMC45LDMuMi0xMy45LDguMmwtNS4xLTQuOGMzLTUuOCw5LjUtMTAuNywxOS40LTEwLjcKCQljMTMuMSwwLDIxLDYuOSwyMSwxOC40djMwLjFoNi4zdjcuNEg2ODAuNHogTTY3MC40LDYyLjJ2LTloLTExLjJjLTkuNiwwLTE0LDMtMTQsOC4zdjIuMmMwLDUuNCw0LjIsOC41LDEwLjgsOC41CgkJQzY2NC40LDcyLjEsNjcwLjQsNjcuOCw2NzAuNCw2Mi4yeiIvPgoJPHBhdGggY2xhc3M9InN0MSIgZD0iTTY4OS45LDY4LjZsNi00LjljNC4yLDUuMyw5LjMsOC40LDE2LjIsOC40YzcuMiwwLDExLjQtMy4zLDExLjQtOC45YzAtNC4yLTIuMy03LjUtOS41LTguNmwtNC4zLTAuNgoJCWMtMTAuMS0xLjUtMTcuNi01LjYtMTcuNi0xNS44YzAtMTAuOCw4LjQtMTYuMSwxOS41LTE2LjFjOC44LDAsMTQuNiwzLjMsMTkuMSw4LjhsLTUuNiw1LjFjLTIuNC0zLjQtNy4xLTYuNy0xNC4xLTYuNwoJCWMtNywwLTEwLjcsMy4zLTEwLjcsOC41YzAsNS4zLDMuNyw3LjQsMTAuNSw4LjVsNC4yLDAuNmMxMi4xLDEuOCwxNi43LDcuMSwxNi43LDE1LjRjMCwxMC42LTcuNywxNy4xLTIwLjIsMTcuMQoJCUM3MDEuNSw3OS40LDY5NC44LDc1LjEsNjg5LjksNjguNnoiLz4KCTxwYXRoIGNsYXNzPSJzdDEiIGQ9Ik03NDQuNiwyMy40aDguNXY4LjloMC40YzIuOS02LjksOC41LTEwLjIsMTYtMTAuMmMxMy43LDAsMjIuMywxMS4xLDIyLjMsMjguNnMtOC42LDI4LjYtMjIuMywyOC42CgkJYy03LjUsMC0xMi43LTMuNC0xNi0xMC4yaC0wLjR2MzAuMWgtOC41VjIzLjR6IE03ODIuNyw1NS40di05LjNjMC05LjgtNS45LTE2LjMtMTUuNS0xNi4zYy03LjcsMC0xNC4xLDQuNS0xNC4xLDEwLjV2MjAuNAoJCWMwLDcuMSw2LjQsMTEuMSwxNC4xLDExLjFDNzc2LjcsNzEuNyw3ODIuNyw2NS4xLDc4Mi43LDU1LjR6Ii8+Cgk8cGF0aCBjbGFzcz0ic3QxIiBkPSJNNzk5LjksNTAuN2MwLTE3LjQsOS44LTI4LjYsMjQuNi0yOC42YzE0LjYsMCwyMy42LDExLjIsMjMuNiwyNi43djRoLTM5LjN2Mi41YzAsOS40LDYsMTYuNSwxNi4yLDE2LjUKCQljNi45LDAsMTIuMi0zLjQsMTUuMS05LjRsNiw0LjNjLTMuNSw3LjQtMTEuMywxMi41LTIxLjYsMTIuNUM4MDkuNyw3OS40LDc5OS45LDY4LjEsNzk5LjksNTAuN3ogTTgwOC44LDQ1Ljh2MC43SDgzOXYtMS4yCgkJYzAtOS42LTUuOC0xNi4xLTE0LjUtMTYuMUM4MTUuMywyOS4yLDgwOC44LDM2LjIsODA4LjgsNDUuOHoiLz4KCTxwYXRoIGNsYXNzPSJzdDEiIGQ9Ik04NTIsNzguMWwyMC4yLTI3LjZsLTE5LjQtMjcuMWgxMGwxMy45LDIwLjRoMC4zbDE0LjQtMjAuNGg5LjRsLTE5LjMsMjYuNWwxOS43LDI4LjJoLTkuNmwtMTQuNS0yMS45aC0wLjMKCQlsLTE1LjcsMjEuOUg4NTJ6Ii8+CjwvZz4KPC9zdmc+Cg==
      name: Aspera Faspex - /aspera/faspex/images/logo_faspex.svg
      description: 'Fetched from URL: https://69.46.153.12/aspera/faspex/images/logo_faspex.svg'
      content_type: image/svg+xml
      server: Apache
      status_code: "200"
      headers:
        - 'Accept-Ranges: bytes'
        - 'X-Frame-Options: SAMEORIGIN'
        - 'Strict-Transport-Security: max-age=63072000; includeSubdomains; preload'
        - 'Last-Modified: Thu, 26 May 2022 07:08:26 GMT'
        - 'Etag: "fdf-5dfe4db292e80"'
        - 'X-Content-Type-Options: nosniff'
        - 'Content-Length: 4063'
        - 'Content-Security-Policy: script-src ''self'' ''unsafe-inline'' ''unsafe-eval'' https://local.connectme.us https://d3gcli72yxqn2z.cloudfront.net; frame-ancestors ''none'''
        - 'X-Xss-Protection: 1; mode=block'
      created_at: 2024-11-01T19:07:15.476931Z
      updated_at: 2024-11-01T19:07:15.476721Z
      ext_version: 0
      ext_uuid: 9158dd6f-e6c0-44df-88fb-7eebd0fc438f
    - id: 468
      data: LyoKICogQm9vdHN0cmFwIHYyLjIuMQogKgogKiBDb3B5cmlnaHQgMjAxMiBUd2l0dGVyLCBJbmMKICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlIHYyLjAKICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wCiAqCiAqIERlc2lnbmVkIGFuZCBidWlsdCB3aXRoIGFsbCB0aGUgbG92ZSBpbiB0aGUgd29ybGQgQHR3aXR0ZXIgYnkgQG1kbyBhbmQgQGZhdC4KICovCmFydGljbGUsCmFzaWRlLApkZXRhaWxzLApmaWdjYXB0aW9uLApmaWd1cmUsCmZvb3RlciwKaGVhZGVyLApoZ3JvdXAsCm5hdiwKc2VjdGlvbiB7CiAgZGlzcGxheTogYmxvY2s7IH0KCmF1ZGlvLApjYW52YXMsCnZpZGVvIHsKICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CiAgKmRpc3BsYXk6IGlubGluZTsKICAqem9vbTogMTsgfQoKYXVkaW86bm90KFtjb250cm9sc10pIHsKICBkaXNwbGF5OiBub25lOyB9CgpodG1sIHsKICBmb250LXNpemU6IDEwMCU7CiAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlOwogIC1tcy10ZXh0LXNpemUtYWRqdXN0OiAxMDAlOyB9CgphOmZvY3VzIHsKICBvdXRsaW5lOiB0aGluIGRvdHRlZCAjMzMzOwogIG91dGxpbmU6IDVweCBhdXRvIC13ZWJraXQtZm9jdXMtcmluZy1jb2xvcjsKICBvdXRsaW5lLW9mZnNldDogLTJweDsgfQoKYTpob3ZlciwKYTphY3RpdmUgewogIG91dGxpbmU6IDA7IH0KCnN1YiwKc3VwIHsKICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgZm9udC1zaXplOiA3NSU7CiAgbGluZS1oZWlnaHQ6IDA7CiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lOyB9CgpzdXAgewogIHRvcDogLTAuNWVtOyB9CgpzdWIgewogIGJvdHRvbTogLTAuMjVlbTsgfQoKaW1nIHsKICAvKiBSZXNwb25zaXZlIGltYWdlcyAoZW5zdXJlIGltYWdlcyBkb24ndCBzY2FsZSBiZXlvbmQgdGhlaXIgcGFyZW50cykgKi8KICBtYXgtd2lkdGg6IDEwMCU7CiAgLyogUGFydCAxOiBTZXQgYSBtYXhpdW0gcmVsYXRpdmUgdG8gdGhlIHBhcmVudCAqLwogIHdpZHRoOiBhdXRvXDk7CiAgLyogSUU3LTggbmVlZCBoZWxwIGFkanVzdGluZyByZXNwb25zaXZlIGltYWdlcyAqLwogIGhlaWdodDogYXV0bzsKICAvKiBQYXJ0IDI6IFNjYWxlIHRoZSBoZWlnaHQgYWNjb3JkaW5nIHRvIHRoZSB3aWR0aCwgb3RoZXJ3aXNlIHlvdSBnZXQgc3RyZXRjaGluZyAqLwogIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7CiAgYm9yZGVyOiAwOwogIC1tcy1pbnRlcnBvbGF0aW9uLW1vZGU6IGJpY3ViaWM7IH0KCiNtYXBfY2FudmFzIGltZywKLmdvb2dsZS1tYXBzIGltZyB7CiAgbWF4LXdpZHRoOiBub25lOyB9CgpidXR0b24sCmlucHV0LApzZWxlY3QsCnRleHRhcmVhIHsKICBtYXJnaW46IDA7CiAgZm9udC1zaXplOiAxMDAlOwogIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7IH0KCmJ1dHRvbiwKaW5wdXQgewogICpvdmVyZmxvdzogdmlzaWJsZTsKICBsaW5lLWhlaWdodDogbm9ybWFsOyB9CgpidXR0b246Oi1tb3otZm9jdXMtaW5uZXIsCmlucHV0OjotbW96LWZvY3VzLWlubmVyIHsKICBwYWRkaW5nOiAwOwogIGJvcmRlcjogMDsgfQoKYnV0dG9uLApodG1sIGlucHV0W3R5cGU9ImJ1dHRvbiJdLAppbnB1dFt0eXBlPSJyZXNldCJdLAppbnB1dFt0eXBlPSJzdWJtaXQiXSB7CiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247CiAgY3Vyc29yOiBwb2ludGVyOyB9CgppbnB1dFt0eXBlPSJzZWFyY2giXSB7CiAgLXdlYmtpdC1ib3gtc2l6aW5nOiBjb250ZW50LWJveDsKICAtbW96LWJveC1zaXppbmc6IGNvbnRlbnQtYm94OwogIGJveC1zaXppbmc6IGNvbnRlbnQtYm94OwogIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkOyB9CgppbnB1dFt0eXBlPSJzZWFyY2giXTo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbiwKaW5wdXRbdHlwZT0ic2VhcmNoIl06Oi13ZWJraXQtc2VhcmNoLWNhbmNlbC1idXR0b24gewogIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTsgfQoKdGV4dGFyZWEgewogIG92ZXJmbG93OiBhdXRvOwogIHZlcnRpY2FsLWFsaWduOiB0b3A7IH0KCmJvZHkgewogIG1hcmdpbjogMDsKICBmb250LWZhbWlseTogVmVyZGFuYSwgaGVsdmV0aWNhLCBzYW5zLXNlcmlmOwogIGZvbnQtc2l6ZTogMTRweDsKICBsaW5lLWhlaWdodDogMjBweDsKICBjb2xvcjogIzMzMzMzMzsKICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTsgfQoKYSB7CiAgY29sb3I6ICMwMDAwZWU7CiAgdGV4dC1kZWNvcmF0aW9uOiBub25lOyB9CgphOmhvdmVyIHsKICBjb2xvcjogIzAwMDBlZTsKICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsgfQoKLmltZy1yb3VuZGVkIHsKICAtd2Via2l0LWJvcmRlci1yYWRpdXM6IDZweDsKICAtbW96LWJvcmRlci1yYWRpdXM6IDZweDsKICBib3JkZXItcmFkaXVzOiA2cHg7IH0KCi5pbWctcG9sYXJvaWQgewogIHBhZGRpbmc6IDRweDsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmOwogIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7CiAgYm9yZGVyOiAxcHggc29saWQgcmdiYSgwLCAwLCAwLCAwLjIpOwogIC13ZWJraXQtYm94LXNoYWRvdzogMCAxcHggM3B4IHJnYmEoMCwgMCwgMCwgMC4xKTsKICAtbW96LWJveC1zaGFkb3c6IDAgMXB4IDNweCByZ2JhKDAsIDAsIDAsIDAuMSk7CiAgYm94LXNoYWRvdzogMCAxcHggM3B4IHJnYmEoMCwgMCwgMCwgMC4xKTsgfQoKLmltZy1jaXJjbGUgewogIC13ZWJraXQtYm9yZGVyLXJhZGl1czogNTAwcHg7CiAgLW1vei1ib3JkZXItcmFkaXVzOiA1MDBweDsKICBib3JkZXItcmFkaXVzOiA1MDBweDsgfQoKLnJvdyB7CiAgbWFyZ2luLWxlZnQ6IC0yMHB4OwogICp6b29tOiAxOyB9CiAgLnJvdzpiZWZvcmUsIC5yb3c6YWZ0ZXIgewogICAgZGlzcGxheTogdGFibGU7CiAgICBjb250ZW50OiAiIjsKICAgIGxpbmUtaGVpZ2h0OiAwOyB9CiAgLnJvdzphZnRlciB7CiAgICBjbGVhcjogYm90aDsgfQoKW2NsYXNzKj0ic3BhbiJdIHsKICBmbG9hdDogbGVmdDsKICBtaW4taGVpZ2h0OiAxcHg7CiAgbWFyZ2luLWxlZnQ6IDIwcHg7IH0KCi5jb250YWluZXIsCi5uYXZiYXItc3RhdGljLXRvcCAuY29udGFpbmVyLAoubmF2YmFyLWZpeGVkLXRvcCAuY29udGFpbmVyLAoubmF2YmFyLWZpeGVkLWJvdHRvbSAuY29udGFpbmVyIHsKICB3aWR0aDogOTQwcHg7IH0KCi5zcGFuMTIgewogIHdpZHRoOiA5NDBweDsgfQoKLnNwYW4xMSB7CiAgd2lkdGg6IDg2MHB4OyB9Cgouc3BhbjEwIHsKICB3aWR0aDogNzgwcHg7IH0KCi5zcGFuOSB7CiAgd2lkdGg6IDcwMHB4OyB9Cgouc3BhbjggewogIHdpZHRoOiA2MjBweDsgfQoKLnNwYW43IHsKICB3aWR0aDogNTQwcHg7IH0KCi5zcGFuNiB7CiAgd2lkdGg6IDQ2MHB4OyB9Cgouc3BhbjUgewogIHdpZHRoOiAzODBweDsgfQoKLnNwYW40IHsKICB3aWR0aDogMzAwcHg7IH0KCi5zcGFuMyB7CiAgd2lkdGg6IDIyMHB4OyB9Cgouc3BhbjIgewogIHdpZHRoOiAxNDBweDsgfQoKLnNwYW4xIHsKICB3aWR0aDogNjBweDsgfQoKLm9mZnNldDEyIHsKICBtYXJnaW4tbGVmdDogOTgwcHg7IH0KCi5vZmZzZXQxMSB7CiAgbWFyZ2luLWxlZnQ6IDkwMHB4OyB9Cgoub2Zmc2V0MTAgewogIG1hcmdpbi1sZWZ0OiA4MjBweDsgfQoKLm9mZnNldDkgewogIG1hcmdpbi1sZWZ0OiA3NDBweDsgfQoKLm9mZnNldDggewogIG1hcmdpbi1sZWZ0OiA2NjBweDsgfQoKLm9mZnNldDcgewogIG1hcmdpbi1sZWZ0OiA1ODBweDsgfQoKLm9mZnNldDYgewogIG1hcmdpbi1sZWZ0OiA1MDBweDsgfQoKLm9mZnNldDUgewogIG1hcmdpbi1sZWZ0OiA0MjBweDsgfQoKLm9mZnNldDQgewogIG1hcmdpbi1sZWZ0OiAzNDBweDsgfQoKLm9mZnNldDMgewogIG1hcmdpbi1sZWZ0OiAyNjBweDsgfQoKLm9mZnNldDIgewogIG1hcmdpbi1sZWZ0OiAxODBweDsgfQoKLm9mZnNldDEgewogIG1hcmdpbi1sZWZ0OiAxMDBweDsgfQoKLnJvdy1mbHVpZCB7CiAgd2lkdGg6IDEwMCU7CiAgKnpvb206IDE7IH0KICAucm93LWZsdWlkOmJlZm9yZSwgLnJvdy1mbHVpZDphZnRlciB7CiAgICBkaXNwbGF5OiB0YWJsZTsKICAgIGNvbnRlbnQ6ICIiOwogICAgbGluZS1oZWlnaHQ6IDA7IH0KICAucm93LWZsdWlkOmFmdGVyIHsKICAgIGNsZWFyOiBib3RoOyB9CiAgLnJvdy1mbHVpZCBbY2xhc3MqPSJzcGFuIl0gewogICAgZGlzcGxheTogYmxvY2s7CiAgICB3aWR0aDogMTAwJTsKICAgIG1pbi1oZWlnaHQ6IDMwcHg7CiAgICAtd2Via2l0LWJveC1zaXppbmc6IGJvcmRlci1ib3g7CiAgICAtbW96LWJveC1zaXppbmc6IGJvcmRlci1ib3g7CiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94OwogICAgZmxvYXQ6IGxlZnQ7CiAgICBtYXJnaW4tbGVmdDogMi4xMjc2NiU7CiAgICAqbWFyZ2luLWxlZnQ6IDIuMDc0NDclOyB9CiAgLnJvdy1mbHVpZCBbY2xhc3MqPSJzcGFuIl06Zmlyc3QtY2hpbGQgewogICAgbWFyZ2luLWxlZnQ6IDA7IH0KICAucm93LWZsdWlkIC5jb250cm9scy1yb3cgW2NsYXNzKj0ic3BhbiJdICsgW2NsYXNzKj0ic3BhbiJdIHsKICAgIG1hcmdpbi1sZWZ0OiAyLjEyNzY2JTsgfQogIC5yb3ctZmx1aWQgLnNwYW4xMiB7CiAgICB3aWR0aDogMTAwJTsKICAgICp3aWR0aDogOTkuOTQ2ODElOyB9CiAgLnJvdy1mbHVpZCAuc3BhbjExIHsKICAgIHdpZHRoOiA5MS40ODkzNiU7CiAgICAqd2lkdGg6IDkxLjQzNjE3JTsgfQogIC5yb3ctZmx1aWQgLnNwYW4xMCB7CiAgICB3aWR0aDogODIuOTc4NzIlOwogICAgKndpZHRoOiA4Mi45MjU1MyU7IH0KICAucm93LWZsdWlkIC5zcGFuOSB7CiAgICB3aWR0aDogNzQuNDY4MDklOwogICAgKndpZHRoOiA3NC40MTQ4OSU7IH0KICAucm93LWZsdWlkIC5zcGFuOCB7CiAgICB3aWR0aDogNjUuOTU3NDUlOwogICAgKndpZHRoOiA2NS45MDQyNiU7IH0KICAucm93LWZsdWlkIC5zcGFuNyB7CiAgICB3aWR0aDogNTcuNDQ2ODElOwogICAgKndpZHRoOiA1Ny4zOTM2MiU7IH0KICAucm93LWZsdWlkIC5zcGFuNiB7CiAgICB3aWR0aDogNDguOTM2MTclOwogICAgKndpZHRoOiA0OC44ODI5OCU7IH0KICAucm93LWZsdWlkIC5zcGFuNSB7CiAgICB3aWR0aDogNDAuNDI1NTMlOwogICAgKndpZHRoOiA0MC4zNzIzNCU7IH0KICAucm93LWZsdWlkIC5zcGFuNCB7CiAgICB3aWR0aDogMzEuOTE0ODklOwogICAgKndpZHRoOiAzMS44NjE3JTsgfQogIC5yb3ctZmx1aWQgLnNwYW4zIHsKICAgIHdpZHRoOiAyMy40MDQyNiU7CiAgICAqd2lkdGg6IDIzLjM1MTA2JTsgfQogIC5yb3ctZmx1aWQgLnNwYW4yIHsKICAgIHdpZHRoOiAxNC44OTM2MiU7CiAgICAqd2lkdGg6IDE0Ljg0MDQzJTsgfQogIC5yb3ctZmx1aWQgLnNwYW4xIHsKICAgIHdpZHRoOiA2LjM4Mjk4JTsKICAgICp3aWR0aDogNi4zMjk3OSU7IH0KICAucm93LWZsdWlkIC5vZmZzZXQxMiB7CiAgICBtYXJnaW4tbGVmdDogMTA0LjI1NTMyJTsKICAgICptYXJnaW4tbGVmdDogMTA0LjE0ODk0JTsgfQogIC5yb3ctZmx1aWQgLm9mZnNldDEyOmZpcnN0LWNoaWxkIHsKICAgIG1hcmdpbi1sZWZ0OiAxMDIuMTI3NjYlOwogICAgKm1hcmdpbi1sZWZ0OiAxMDIuMDIxMjglOyB9CiAgLnJvdy1mbHVpZCAub2Zmc2V0MTEgewogICAgbWFyZ2luLWxlZnQ6IDk1Ljc0NDY4JTsKICAgICptYXJnaW4tbGVmdDogOTUuNjM4MyU7IH0KICAucm93LWZsdWlkIC5vZmZzZXQxMTpmaXJzdC1jaGlsZCB7CiAgICBtYXJnaW4tbGVmdDogOTMuNjE3MDIlOwogICAgKm1hcmdpbi1sZWZ0OiA5My41MTA2NCU7IH0KICAucm93LWZsdWlkIC5vZmZzZXQxMCB7CiAgICBtYXJnaW4tbGVmdDogODcuMjM0MDQlOwogICAgKm1hcmdpbi1sZWZ0OiA4Ny4xMjc2NiU7IH0KICAucm93LWZsdWlkIC5vZmZzZXQxMDpmaXJzdC1jaGlsZCB7CiAgICBtYXJnaW4tbGVmdDogODUuMTA2MzglOwogICAgKm1hcmdpbi1sZWZ0OiA4NS4wJTsgfQogIC5yb3ctZmx1aWQgLm9mZnNldDkgewogICAgbWFyZ2luLWxlZnQ6IDc4LjcyMzQlOwogICAgKm1hcmdpbi1sZWZ0OiA3OC42MTcwMiU7IH0KICAucm93LWZsdWlkIC5vZmZzZXQ5OmZpcnN0LWNoaWxkIHsKICAgIG1hcmdpbi1sZWZ0OiA3Ni41OTU3NCU7CiAgICAqbWFyZ2luLWxlZnQ6IDc2LjQ4OTM2JTsgfQogIC5yb3ctZmx1aWQgLm9mZnNldDggewogICAgbWFyZ2luLWxlZnQ6IDcwLjIxMjc3JTsKICAgICptYXJnaW4tbGVmdDogNzAuMTA2MzglOyB9CiAgLnJvdy1mbHVpZCAub2Zmc2V0ODpmaXJzdC1jaGlsZCB7CiAgICBtYXJnaW4tbGVmdDogNjguMDg1MTElOwogICAgKm1hcmdpbi1sZWZ0OiA2Ny45Nzg3MiU7IH0KICAucm93LWZsdWlkIC5vZmZzZXQ3IHsKICAgIG1hcmdpbi1sZWZ0OiA2MS43MDIxMyU7CiAgICAqbWFyZ2luLWxlZnQ6IDYxLjU5NTc0JTsgfQogIC5yb3ctZmx1aWQgLm9mZnNldDc6Zmlyc3QtY2hpbGQgewogICAgbWFyZ2luLWxlZnQ6IDU5LjU3NDQ3JTsKICAgICptYXJnaW4tbGVmdDogNTkuNDY4MDklOyB9CiAgLnJvdy1mbHVpZCAub2Zmc2V0NiB7CiAgICBtYXJnaW4tbGVmdDogNTMuMTkxNDklOwogICAgKm1hcmdpbi1sZWZ0OiA1My4wODUxMSU7IH0KICAucm93LWZsdWlkIC5vZmZzZXQ2OmZpcnN0LWNoaWxkIHsKICAgIG1hcmdpbi1sZWZ0OiA1MS4wNjM4MyU7CiAgICAqbWFyZ2luLWxlZnQ6IDUwLjk1NzQ1JTsgfQogIC5yb3ctZmx1aWQgLm9mZnNldDUgewogICAgbWFyZ2luLWxlZnQ6IDQ0LjY4MDg1JTsKICAgICptYXJnaW4tbGVmdDogNDQuNTc0NDclOyB9CiAgLnJvdy1mbHVpZCAub2Zmc2V0NTpmaXJzdC1jaGlsZCB7CiAgICBtYXJnaW4tbGVmdDogNDIuNTUzMTklOwogICAgKm1hcmdpbi1sZWZ0OiA0Mi40NDY4MSU7IH0KICAucm93LWZsdWlkIC5vZmZzZXQ0IHsKICAgIG1hcmdpbi1sZWZ0OiAzNi4xNzAyMSU7CiAgICAqbWFyZ2luLWxlZnQ6IDM2LjA2MzgzJTsgfQogIC5yb3ctZmx1aWQgLm9mZnNldDQ6Zmlyc3QtY2hpbGQgewogICAgbWFyZ2luLWxlZnQ6IDM0LjA0MjU1JTsKICAgICptYXJnaW4tbGVmdDogMzMuOTM2MTclOyB9CiAgLnJvdy1mbHVpZCAub2Zmc2V0MyB7CiAgICBtYXJnaW4tbGVmdDogMjcuNjU5NTclOwogICAgKm1hcmdpbi1sZWZ0OiAyNy41NTMxOSU7IH0KICAucm93LWZsdWlkIC5vZmZzZXQzOmZpcnN0LWNoaWxkIHsKICAgIG1hcmdpbi1sZWZ0OiAyNS41MzE5MSU7CiAgICAqbWFyZ2luLWxlZnQ6IDI1LjQyNTUzJTsgfQogIC5yb3ctZmx1aWQgLm9mZnNldDIgewogICAgbWFyZ2luLWxlZnQ6IDE5LjE0ODk0JTsKICAgICptYXJnaW4tbGVmdDogMTkuMDQyNTUlOyB9CiAgLnJvdy1mbHVpZCAub2Zmc2V0MjpmaXJzdC1jaGlsZCB7CiAgICBtYXJnaW4tbGVmdDogMTcuMDIxMjglOwogICAgKm1hcmdpbi1sZWZ0OiAxNi45MTQ4OSU7IH0KICAucm93LWZsdWlkIC5vZmZzZXQxIHsKICAgIG1hcmdpbi1sZWZ0OiAxMC42MzgzJTsKICAgICptYXJnaW4tbGVmdDogMTAuNTMxOTElOyB9CiAgLnJvdy1mbHVpZCAub2Zmc2V0MTpmaXJzdC1jaGlsZCB7CiAgICBtYXJnaW4tbGVmdDogOC41MTA2NCU7CiAgICAqbWFyZ2luLWxlZnQ6IDguNDA0MjYlOyB9CgpbY2xhc3MqPSJzcGFuIl0uaGlkZSwKLnJvdy1mbHVpZCBbY2xhc3MqPSJzcGFuIl0uaGlkZSB7CiAgZGlzcGxheTogbm9uZTsgfQoKW2NsYXNzKj0ic3BhbiJdLnB1bGwtcmlnaHQsCi5yb3ctZmx1aWQgW2NsYXNzKj0ic3BhbiJdLnB1bGwtcmlnaHQgewogIGZsb2F0OiByaWdodDsgfQoKLmNvbnRhaW5lciB7CiAgbWFyZ2luLXJpZ2h0OiBhdXRvOwogIG1hcmdpbi1sZWZ0OiBhdXRvOwogICp6b29tOiAxOyB9CiAgLmNvbnRhaW5lcjpiZWZvcmUsIC5jb250YWluZXI6YWZ0ZXIgewogICAgZGlzcGxheTogdGFibGU7CiAgICBjb250ZW50OiAiIjsKICAgIGxpbmUtaGVpZ2h0OiAwOyB9CiAgLmNvbnRhaW5lcjphZnRlciB7CiAgICBjbGVhcjogYm90aDsgfQoKLmNvbnRhaW5lci1mbHVpZCB7CiAgcGFkZGluZy1yaWdodDogMjBweDsKICBwYWRkaW5nLWxlZnQ6IDIwcHg7CiAgKnpvb206IDE7IH0KICAuY29udGFpbmVyLWZsdWlkOmJlZm9yZSwgLmNvbnRhaW5lci1mbHVpZDphZnRlciB7CiAgICBkaXNwbGF5OiB0YWJsZTsKICAgIGNvbnRlbnQ6ICIiOwogICAgbGluZS1oZWlnaHQ6IDA7IH0KICAuY29udGFpbmVyLWZsdWlkOmFmdGVyIHsKICAgIGNsZWFyOiBib3RoOyB9CgpwIHsKICBtYXJnaW46IDAgMCAxMHB4OyB9CgoubGVhZCB7CiAgbWFyZ2luLWJvdHRvbTogMjBweDsKICBmb250LXNpemU6IDIxcHg7CiAgZm9udC13ZWlnaHQ6IDIwMDsKICBsaW5lLWhlaWdodDogMzBweDsgfQoKc21hbGwgewogIGZvbnQtc2l6ZTogODUlOyB9CgpzdHJvbmcgewogIGZvbnQtd2VpZ2h0OiBib2xkOyB9CgplbSB7CiAgZm9udC1zdHlsZTogaXRhbGljOyB9CgpjaXRlIHsKICBmb250LXN0eWxlOiBub3JtYWw7IH0KCi5tdXRlZCB7CiAgY29sb3I6ICM5OTk5OTk7IH0KCi50ZXh0LXdhcm5pbmcgewogIGNvbG9yOiAjYzA5ODUzOyB9CgphLnRleHQtd2FybmluZzpob3ZlciB7CiAgY29sb3I6ICNhNDdlM2M7IH0KCi50ZXh0LWVycm9yIHsKICBjb2xvcjogd2hpdGU7IH0KCmEudGV4dC1lcnJvcjpob3ZlciB7CiAgY29sb3I6ICNlNmU2ZTY7IH0KCi50ZXh0LWluZm8gewogIGNvbG9yOiAjMzMzMzMzOyB9CgphLnRleHQtaW5mbzpob3ZlciB7CiAgY29sb3I6ICMxYTFhMWE7IH0KCi50ZXh0LXN1Y2Nlc3MgewogIGNvbG9yOiAjNDY4ODQ3OyB9CgphLnRleHQtc3VjY2Vzczpob3ZlciB7CiAgY29sb3I6ICMzNTY2MzU7IH0KCmgxLCBoMiwgaDMsIGg0LCBoNSwgaDYgewogIG1hcmdpbjogMTBweCAwOwogIGZvbnQtZmFtaWx5OiBWZXJkYW5hLCBoZWx2ZXRpY2EsIHNhbnMtc2VyaWY7CiAgZm9udC13ZWlnaHQ6IGJvbGQ7CiAgbGluZS1oZWlnaHQ6IDIwcHg7CiAgY29sb3I6IGluaGVyaXQ7CiAgdGV4dC1yZW5kZXJpbmc6IG9wdGltaXplbGVnaWJpbGl0eTsgfQogIGgxIHNtYWxsLCBoMiBzbWFsbCwgaDMgc21hbGwsIGg0IHNtYWxsLCBoNSBzbWFsbCwgaDYgc21hbGwgewogICAgZm9udC13ZWlnaHQ6IG5vcm1hbDsKICAgIGxpbmUtaGVpZ2h0OiAxOwogICAgY29sb3I6ICM5OTk5OTk7IH0KCmgxLApoMiwKaDMgewogIGxpbmUtaGVpZ2h0OiA0MHB4OyB9CgpoMSB7CiAgZm9udC1zaXplOiAzOC41cHg7IH0KCmgyIHsKICBmb250LXNpemU6IDMxLjVweDsgfQoKaDMgewogIGZvbnQtc2l6ZTogMjQuNXB4OyB9CgpoNCB7CiAgZm9udC1zaXplOiAxNy41cHg7IH0KCmg1IHsKICBmb250LXNpemU6IDE0cHg7IH0KCmg2IHsKICBmb250LXNpemU6IDExLjlweDsgfQoKaDEgc21hbGwgewogIGZvbnQtc2l6ZTogMjQuNXB4OyB9CgpoMiBzbWFsbCB7CiAgZm9udC1zaXplOiAxNy41cHg7IH0KCmgzIHNtYWxsIHsKICBmb250LXNpemU6IDE0cHg7IH0KCmg0IHNtYWxsIHsKICBmb250LXNpemU6IDE0cHg7IH0KCi5wYWdlLWhlYWRlciB7CiAgcGFkZGluZy1ib3R0b206IDlweDsKICBtYXJnaW46IDIwcHggMCAzMHB4OwogIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZWVlZWVlOyB9Cgp1bCwgb2wgewogIHBhZGRpbmc6IDA7CiAgbWFyZ2luOiAwIDAgMTBweCAyNXB4OyB9Cgp1bCB1bCwKdWwgb2wsCm9sIG9sLApvbCB1bCB7CiAgbWFyZ2luLWJvdHRvbTogMDsgfQoKbGkgewogIGxpbmUtaGVpZ2h0OiAyMHB4OyB9Cgp1bC51bnN0eWxlZCwKb2wudW5zdHlsZWQgewogIG1hcmdpbi1sZWZ0OiAwOwogIGxpc3Qtc3R5bGU6IG5vbmU7IH0KCmRsIHsKICBtYXJnaW4tYm90dG9tOiAyMHB4OyB9CgpkdCwKZGQgewogIGxpbmUtaGVpZ2h0OiAyMHB4OyB9CgpkdCB7CiAgZm9udC13ZWlnaHQ6IGJvbGQ7IH0KCmRkIHsKICBtYXJnaW4tbGVmdDogMTBweDsgfQoKLmRsLWhvcml6b250YWwgewogICp6b29tOiAxOyB9CiAgLmRsLWhvcml6b250YWw6YmVmb3JlLCAuZGwtaG9yaXpvbnRhbDphZnRlciB7CiAgICBkaXNwbGF5OiB0YWJsZTsKICAgIGNvbnRlbnQ6ICIiOwogICAgbGluZS1oZWlnaHQ6IDA7IH0KICAuZGwtaG9yaXpvbnRhbDphZnRlciB7CiAgICBjbGVhcjogYm90aDsgfQogIC5kbC1ob3Jpem9udGFsIGR0IHsKICAgIGZsb2F0OiBsZWZ0OwogICAgd2lkdGg6IDE2MHB4OwogICAgY2xlYXI6IGxlZnQ7CiAgICB0ZXh0LWFsaWduOiByaWdodDsKICAgIG92ZXJmbG93OiBoaWRkZW47CiAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpczsKICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7IH0KICAuZGwtaG9yaXpvbnRhbCBkZCB7CiAgICBtYXJnaW4tbGVmdDogMTgwcHg7IH0KCmhyIHsKICBtYXJnaW46IDIwcHggMDsKICBib3JkZXI6IDA7CiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNlZWVlZWU7CiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHdoaXRlOyB9CgphYmJyW3RpdGxlXSwKYWJicltkYXRhLW9yaWdpbmFsLXRpdGxlXSB7CiAgY3Vyc29yOiBoZWxwOwogIGJvcmRlci1ib3R0b206IDFweCBkb3R0ZWQgIzk5OTk5OTsgfQoKYWJici5pbml0aWFsaXNtIHsKICBmb250LXNpemU6IDkwJTsKICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlOyB9CgpibG9ja3F1b3RlIHsKICBwYWRkaW5nOiAwIDAgMCAxNXB4OwogIG1hcmdpbjogMCAwIDIwcHg7CiAgYm9yZGVyLWxlZnQ6IDVweCBzb2xpZCAjZWVlZWVlOyB9CiAgYmxvY2txdW90ZSBwIHsKICAgIG1hcmdpbi1ib3R0b206IDA7CiAgICBmb250LXNpemU6IDE2cHg7CiAgICBmb250LXdlaWdodDogMzAwOwogICAgbGluZS1oZWlnaHQ6IDI1cHg7IH0KICBibG9ja3F1b3RlIHNtYWxsIHsKICAgIGRpc3BsYXk6IGJsb2NrOwogICAgbGluZS1oZWlnaHQ6IDIwcHg7CiAgICBjb2xvcjogIzk5OTk5OTsgfQogICAgYmxvY2txdW90ZSBzbWFsbDpiZWZvcmUgewogICAgICBjb250ZW50OiAnXDIwMTQgXDAwQTAnOyB9CiAgYmxvY2txdW90ZS5wdWxsLXJpZ2h0IHsKICAgIGZsb2F0OiByaWdodDsKICAgIHBhZGRpbmctcmlnaHQ6IDE1cHg7CiAgICBwYWRkaW5nLWxlZnQ6IDA7CiAgICBib3JkZXItcmlnaHQ6IDVweCBzb2xpZCAjZWVlZWVlOwogICAgYm9yZGVyLWxlZnQ6IDA7IH0KICAgIGJsb2NrcXVvdGUucHVsbC1yaWdodCBwLAogICAgYmxvY2txdW90ZS5wdWxsLXJpZ2h0IHNtYWxsIHsKICAgICAgdGV4dC1hbGlnbjogcmlnaHQ7IH0KICAgIGJsb2NrcXVvdGUucHVsbC1yaWdodCBzbWFsbDpiZWZvcmUgewogICAgICBjb250ZW50OiAnJzsgfQogICAgYmxvY2txdW90ZS5wdWxsLXJpZ2h0IHNtYWxsOmFmdGVyIHsKICAgICAgY29udGVudDogJ1wwMEEwIFwyMDE0JzsgfQoKcTpiZWZvcmUsCnE6YWZ0ZXIsCmJsb2NrcXVvdGU6YmVmb3JlLApibG9ja3F1b3RlOmFmdGVyIHsKICBjb250ZW50OiAiIjsgfQoKYWRkcmVzcyB7CiAgZGlzcGxheTogYmxvY2s7CiAgbWFyZ2luLWJvdHRvbTogMjBweDsKICBmb250LXN0eWxlOiBub3JtYWw7CiAgbGluZS1oZWlnaHQ6IDIwcHg7IH0KCmNvZGUsCnByZSB7CiAgcGFkZGluZzogMCAzcHggMnB4OwogIGZvbnQtZmFtaWx5OiBNb25hY28sIE1lbmxvLCBDb25zb2xhcywgIkNvdXJpZXIgTmV3IiwgbW9ub3NwYWNlOwogIGZvbnQtc2l6ZTogMTJweDsKICBjb2xvcjogIzMzMzMzMzsKICAtd2Via2l0LWJvcmRlci1yYWRpdXM6IDNweDsKICAtbW96LWJvcmRlci1yYWRpdXM6IDNweDsKICBib3JkZXItcmFkaXVzOiAzcHg7IH0KCmNvZGUgewogIHBhZGRpbmc6IDJweCA0cHg7CiAgY29sb3I6ICNkMTQ7CiAgYmFja2dyb3VuZC1jb2xvcjogI2Y3ZjdmOTsKICBib3JkZXI6IDFweCBzb2xpZCAjZTFlMWU4OyB9CgpwcmUgewogIGRpc3BsYXk6IGJsb2NrOwogIHBhZGRpbmc6IDkuNXB4OwogIG1hcmdpbjogMCAwIDEwcHg7CiAgZm9udC1zaXplOiAxM3B4OwogIGxpbmUtaGVpZ2h0OiAyMHB4OwogIHdvcmQtYnJlYWs6IGJyZWFrLWFsbDsKICB3b3JkLXdyYXA6IGJyZWFrLXdvcmQ7CiAgd2hpdGUtc3BhY2U6IHByZTsKICB3aGl0ZS1zcGFjZTogcHJlLXdyYXA7CiAgYmFja2dyb3VuZC1jb2xvcjogI2Y1ZjVmNTsKICBib3JkZXI6IDFweCBzb2xpZCAjY2NjOwogIGJvcmRlcjogMXB4IHNvbGlkIHJnYmEoMCwgMCwgMCwgMC4xNSk7CiAgLXdlYmtpdC1ib3JkZXItcmFkaXVzOiA0cHg7CiAgLW1vei1ib3JkZXItcmFkaXVzOiA0cHg7CiAgYm9yZGVyLXJhZGl1czogNHB4OyB9CiAgcHJlLnByZXR0eXByaW50IHsKICAgIG1hcmdpbi1ib3R0b206IDIwcHg7IH0KICBwcmUgY29kZSB7CiAgICBwYWRkaW5nOiAwOwogICAgY29sb3I6IGluaGVyaXQ7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDsKICAgIGJvcmRlcjogMDsgfQoKLnByZS1zY3JvbGxhYmxlIHsKICBtYXgtaGVpZ2h0OiAzNDBweDsKICBvdmVyZmxvdy15OiBzY3JvbGw7IH0KCmZvcm0gewogIG1hcmdpbjogMCAwIDIwcHg7IH0KCmZpZWxkc2V0IHsKICBwYWRkaW5nOiAwOwogIG1hcmdpbjogMDsKICBib3JkZXI6IDA7IH0KCmxlZ2VuZCB7CiAgZGlzcGxheTogYmxvY2s7CiAgd2lkdGg6IDEwMCU7CiAgcGFkZGluZzogMDsKICBtYXJnaW4tYm90dG9tOiAyMHB4OwogIGZvbnQtc2l6ZTogMjFweDsKICBsaW5lLWhlaWdodDogNDBweDsKICBjb2xvcjogIzMzMzMzMzsKICBib3JkZXI6IDA7CiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNlNWU1ZTU7IH0KICBsZWdlbmQgc21hbGwgewogICAgZm9udC1zaXplOiAxNXB4OwogICAgY29sb3I6ICM5OTk5OTk7IH0KCmxhYmVsLAppbnB1dCwKYnV0dG9uLApzZWxlY3QsCnRleHRhcmVhIHsKICBmb250LXNpemU6IDE0cHg7CiAgZm9udC13ZWlnaHQ6IG5vcm1hbDsKICBsaW5lLWhlaWdodDogMjBweDsgfQoKaW5wdXQsCmJ1dHRvbiwKc2VsZWN0LAp0ZXh0YXJlYSB7CiAgZm9udC1mYW1pbHk6IFZlcmRhbmEsIGhlbHZldGljYSwgc2Fucy1zZXJpZjsgfQoKbGFiZWwgewogIGRpc3BsYXk6IGJsb2NrOwogIG1hcmdpbi1ib3R0b206IDVweDsgfQoKc2VsZWN0LAp0ZXh0YXJlYSwKaW5wdXRbdHlwZT0idGV4dCJdLAppbnB1dFt0eXBlPSJwYXNzd29yZCJdLAppbnB1dFt0eXBlPSJkYXRldGltZSJdLAppbnB1dFt0eXBlPSJkYXRldGltZS1sb2NhbCJdLAppbnB1dFt0eXBlPSJkYXRlIl0sCmlucHV0W3R5cGU9Im1vbnRoIl0sCmlucHV0W3R5cGU9InRpbWUiXSwKaW5wdXRbdHlwZT0id2VlayJdLAppbnB1dFt0eXBlPSJudW1iZXIiXSwKaW5wdXRbdHlwZT0iZW1haWwiXSwKaW5wdXRbdHlwZT0idXJsIl0sCmlucHV0W3R5cGU9InNlYXJjaCJdLAppbnB1dFt0eXBlPSJ0ZWwiXSwKaW5wdXRbdHlwZT0iY29sb3IiXSwKLnVuZWRpdGFibGUtaW5wdXQgewogIGRpc3BsYXk6IGlubGluZS1ibG9jazsKICBoZWlnaHQ6IDIwcHg7CiAgcGFkZGluZzogNHB4IDZweDsKICBtYXJnaW4tYm90dG9tOiAxMHB4OwogIGZvbnQtc2l6ZTogMTRweDsKICBsaW5lLWhlaWdodDogMjBweDsKICBjb2xvcjogIzU1NTU1NTsKICAtd2Via2l0LWJvcmRlci1yYWRpdXM6IDRweDsKICAtbW96LWJvcmRlci1yYWRpdXM6IDRweDsKICBib3JkZXItcmFkaXVzOiA0cHg7CiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTsgfQoKaW5wdXQsCnRleHRhcmVhLAoudW5lZGl0YWJsZS1pbnB1dCB7CiAgd2lkdGg6IDIwNnB4OyB9Cgp0ZXh0YXJlYSB7CiAgaGVpZ2h0OiBhdXRvOyB9Cgp0ZXh0YXJlYSwKaW5wdXRbdHlwZT0idGV4dCJdLAppbnB1dFt0eXBlPSJwYXNzd29yZCJdLAppbnB1dFt0eXBlPSJkYXRldGltZSJdLAppbnB1dFt0eXBlPSJkYXRldGltZS1sb2NhbCJdLAppbnB1dFt0eXBlPSJkYXRlIl0sCmlucHV0W3R5cGU9Im1vbnRoIl0sCmlucHV0W3R5cGU9InRpbWUiXSwKaW5wdXRbdHlwZT0id2VlayJdLAppbnB1dFt0eXBlPSJudW1iZXIiXSwKaW5wdXRbdHlwZT0iZW1haWwiXSwKaW5wdXRbdHlwZT0idXJsIl0sCmlucHV0W3R5cGU9InNlYXJjaCJdLAppbnB1dFt0eXBlPSJ0ZWwiXSwKaW5wdXRbdHlwZT0iY29sb3IiXSwKLnVuZWRpdGFibGUtaW5wdXQgewogIGJhY2tncm91bmQtY29sb3I6IHdoaXRlOwogIGJvcmRlcjogMXB4IHNvbGlkICNjY2NjY2M7CiAgLXdlYmtpdC1ib3gtc2hhZG93OiBpbnNldCAwIDFweCAxcHggcmdiYSgwLCAwLCAwLCAwLjA3NSk7CiAgLW1vei1ib3gtc2hhZG93OiBpbnNldCAwIDFweCAxcHggcmdiYSgwLCAwLCAwLCAwLjA3NSk7CiAgYm94LXNoYWRvdzogaW5zZXQgMCAxcHggMXB4IHJnYmEoMCwgMCwgMCwgMC4wNzUpOwogIC13ZWJraXQtdHJhbnNpdGlvbjogYm9yZGVyIGxpbmVhciAwLjJzLCBib3gtc2hhZG93IGxpbmVhciAwLjJzOwogIC1tb3otdHJhbnNpdGlvbjogYm9yZGVyIGxpbmVhciAwLjJzLCBib3gtc2hhZG93IGxpbmVhciAwLjJzOwogIC1vLXRyYW5zaXRpb246IGJvcmRlciBsaW5lYXIgMC4ycywgYm94LXNoYWRvdyBsaW5lYXIgMC4yczsKICB0cmFuc2l0aW9uOiBib3JkZXIgbGluZWFyIDAuMnMsIGJveC1zaGFkb3cgbGluZWFyIDAuMnM7IH0KICB0ZXh0YXJlYTpmb2N1cywKICBpbnB1dFt0eXBlPSJ0ZXh0Il06Zm9jdXMsCiAgaW5wdXRbdHlwZT0icGFzc3dvcmQiXTpmb2N1cywKICBpbnB1dFt0eXBlPSJkYXRldGltZSJdOmZvY3VzLAogIGlucHV0W3R5cGU9ImRhdGV0aW1lLWxvY2FsIl06Zm9jdXMsCiAgaW5wdXRbdHlwZT0iZGF0ZSJdOmZvY3VzLAogIGlucHV0W3R5cGU9Im1vbnRoIl06Zm9jdXMsCiAgaW5wdXRbdHlwZT0idGltZSJdOmZvY3VzLAogIGlucHV0W3R5cGU9IndlZWsiXTpmb2N1cywKICBpbnB1dFt0eXBlPSJudW1iZXIiXTpmb2N1cywKICBpbnB1dFt0eXBlPSJlbWFpbCJdOmZvY3VzLAogIGlucHV0W3R5cGU9InVybCJdOmZvY3VzLAogIGlucHV0W3R5cGU9InNlYXJjaCJdOmZvY3VzLAogIGlucHV0W3R5cGU9InRlbCJdOmZvY3VzLAogIGlucHV0W3R5cGU9ImNvbG9yIl06Zm9jdXMsCiAgLnVuZWRpdGFibGUtaW5wdXQ6Zm9jdXMgewogICAgYm9yZGVyLWNvbG9yOiByZ2JhKDgyLCAxNjgsIDIzNiwgMC44KTsKICAgIG91dGxpbmU6IDA7CiAgICBvdXRsaW5lOiB0aGluIGRvdHRlZCBcOTsKICAgIC8qIElFNi05ICovCiAgICAtd2Via2l0LWJveC1zaGFkb3c6IGluc2V0IDAgMXB4IDFweCByZ2JhKDAsIDAsIDAsIDAuMDc1KSwgMCAwIDhweCByZ2JhKDgyLCAxNjgsIDIzNiwgMC42KTsKICAgIC1tb3otYm94LXNoYWRvdzogaW5zZXQgMCAxcHggMXB4IHJnYmEoMCwgMCwgMCwgMC4wNzUpLCAwIDAgOHB4IHJnYmEoODIsIDE2OCwgMjM2LCAwLjYpOwogICAgYm94LXNoYWRvdzogaW5zZXQgMCAxcHggMXB4IHJnYmEoMCwgMCwgMCwgMC4wNzUpLCAwIDAgOHB4IHJnYmEoODIsIDE2OCwgMjM2LCAwLjYpOyB9CgppbnB1dFt0eXBlPSJyYWRpbyJdLAppbnB1dFt0eXBlPSJjaGVja2JveCJdIHsKICBtYXJnaW46IDRweCAwIDA7CiAgKm1hcmdpbi10b3A6IDA7CiAgLyogSUU3ICovCiAgbWFyZ2luLXRvcDogMXB4IFw5OwogIC8qIElFOC05ICovCiAgbGluZS1oZWlnaHQ6IG5vcm1hbDsKICBjdXJzb3I6IHBvaW50ZXI7IH0KCmlucHV0W3R5cGU9ImZpbGUiXSwKaW5wdXRbdHlwZT0iaW1hZ2UiXSwKaW5wdXRbdHlwZT0ic3VibWl0Il0sCmlucHV0W3R5cGU9InJlc2V0Il0sCmlucHV0W3R5cGU9ImJ1dHRvbiJdLAppbnB1dFt0eXBlPSJyYWRpbyJdLAppbnB1dFt0eXBlPSJjaGVja2JveCJdIHsKICB3aWR0aDogYXV0bzsgfQoKc2VsZWN0LAppbnB1dFt0eXBlPSJmaWxlIl0gewogIGhlaWdodDogMzBweDsKICAvKiBJbiBJRTcsIHRoZSBoZWlnaHQgb2YgdGhlIHNlbGVjdCBlbGVtZW50IGNhbm5vdCBiZSBjaGFuZ2VkIGJ5IGhlaWdodCwgb25seSBmb250LXNpemUgKi8KICAqbWFyZ2luLXRvcDogNHB4OwogIC8qIEZvciBJRTcsIGFkZCB0b3AgbWFyZ2luIHRvIGFsaWduIHNlbGVjdCB3aXRoIGxhYmVscyAqLwogIGxpbmUtaGVpZ2h0OiAzMHB4OyB9CgpzZWxlY3QgewogIHdpZHRoOiAyMjBweDsKICBib3JkZXI6IDFweCBzb2xpZCAjY2NjY2NjOwogIGJhY2tncm91bmQtY29sb3I6IHdoaXRlOyB9CgpzZWxlY3RbbXVsdGlwbGVdLApzZWxlY3Rbc2l6ZV0gewogIGhlaWdodDogYXV0bzsgfQoKc2VsZWN0OmZvY3VzLAppbnB1dFt0eXBlPSJmaWxlIl06Zm9jdXMsCmlucHV0W3R5cGU9InJhZGlvIl06Zm9jdXMsCmlucHV0W3R5cGU9ImNoZWNrYm94Il06Zm9jdXMgewogIG91dGxpbmU6IHRoaW4gZG90dGVkICMzMzM7CiAgb3V0bGluZTogNXB4IGF1dG8gLXdlYmtpdC1mb2N1cy1yaW5nLWNvbG9yOwogIG91dGxpbmUtb2Zmc2V0OiAtMnB4OyB9CgoudW5lZGl0YWJsZS1pbnB1dCwKLnVuZWRpdGFibGUtdGV4dGFyZWEgewogIGNvbG9yOiAjOTk5OTk5OwogIGJhY2tncm91bmQtY29sb3I6ICNmY2ZjZmM7CiAgYm9yZGVyLWNvbG9yOiAjY2NjY2NjOwogIC13ZWJraXQtYm94LXNoYWRvdzogaW5zZXQgMCAxcHggMnB4IHJnYmEoMCwgMCwgMCwgMC4wMjUpOwogIC1tb3otYm94LXNoYWRvdzogaW5zZXQgMCAxcHggMnB4IHJnYmEoMCwgMCwgMCwgMC4wMjUpOwogIGJveC1zaGFkb3c6IGluc2V0IDAgMXB4IDJweCByZ2JhKDAsIDAsIDAsIDAuMDI1KTsKICBjdXJzb3I6IG5vdC1hbGxvd2VkOyB9CgoudW5lZGl0YWJsZS1pbnB1dCB7CiAgb3ZlcmZsb3c6IGhpZGRlbjsKICB3aGl0ZS1zcGFjZTogbm93cmFwOyB9CgoudW5lZGl0YWJsZS10ZXh0YXJlYSB7CiAgd2lkdGg6IGF1dG87CiAgaGVpZ2h0OiBhdXRvOyB9CgppbnB1dDotbW96LXBsYWNlaG9sZGVyLAp0ZXh0YXJlYTotbW96LXBsYWNlaG9sZGVyIHsKICBjb2xvcjogIzk5OTk5OTsgfQppbnB1dDotbXMtaW5wdXQtcGxhY2Vob2xkZXIsCnRleHRhcmVhOi1tcy1pbnB1dC1wbGFjZWhvbGRlciB7CiAgY29sb3I6ICM5OTk5OTk7IH0KaW5wdXQ6Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXIsCnRleHRhcmVhOjotd2Via2l0LWlucHV0LXBsYWNlaG9sZGVyIHsKICBjb2xvcjogIzk5OTk5OTsgfQoKLnJhZGlvLAouY2hlY2tib3ggewogIG1pbi1oZWlnaHQ6IDIwcHg7CiAgcGFkZGluZy1sZWZ0OiAyMHB4OyB9CgoucmFkaW8gaW5wdXRbdHlwZT0icmFkaW8iXSwKLmNoZWNrYm94IGlucHV0W3R5cGU9ImNoZWNrYm94Il0gewogIGZsb2F0OiBsZWZ0OwogIG1hcmdpbi1sZWZ0OiAtMjBweDsgfQoKLmNvbnRyb2xzID4gLnJhZGlvOmZpcnN0LWNoaWxkLAouY29udHJvbHMgPiAuY2hlY2tib3g6Zmlyc3QtY2hpbGQgewogIHBhZGRpbmctdG9wOiA1cHg7IH0KCi5yYWRpby5pbmxpbmUsCi5jaGVja2JveC5pbmxpbmUgewogIGRpc3BsYXk6IGlubGluZS1ibG9jazsKICBwYWRkaW5nLXRvcDogNXB4OwogIG1hcmdpbi1ib3R0b206IDA7CiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTsgfQoKLnJhZGlvLmlubGluZSArIC5yYWRpby5pbmxpbmUsCi5jaGVja2JveC5pbmxpbmUgKyAuY2hlY2tib3guaW5saW5lIHsKICBtYXJnaW4tbGVmdDogMTBweDsgfQoKLmlucHV0LW1pbmkgewogIHdpZHRoOiA2MHB4OyB9CgouaW5wdXQtc21hbGwgewogIHdpZHRoOiA5MHB4OyB9CgouaW5wdXQtbWVkaXVtIHsKICB3aWR0aDogMTUwcHg7IH0KCi5pbnB1dC1sYXJnZSB7CiAgd2lkdGg6IDIxMHB4OyB9CgouaW5wdXQteGxhcmdlIHsKICB3aWR0aDogMjcwcHg7IH0KCi5pbnB1dC14eGxhcmdlIHsKICB3aWR0aDogNTMwcHg7IH0KCmlucHV0W2NsYXNzKj0ic3BhbiJdLApzZWxlY3RbY2xhc3MqPSJzcGFuIl0sCnRleHRhcmVhW2NsYXNzKj0ic3BhbiJdLAoudW5lZGl0YWJsZS1pbnB1dFtjbGFzcyo9InNwYW4iXSwKLnJvdy1mbHVpZCBpbnB1dFtjbGFzcyo9InNwYW4iXSwKLnJvdy1mbHVpZCBzZWxlY3RbY2xhc3MqPSJzcGFuIl0sCi5yb3ctZmx1aWQgdGV4dGFyZWFbY2xhc3MqPSJzcGFuIl0sCi5yb3ctZmx1aWQgLnVuZWRpdGFibGUtaW5wdXRbY2xhc3MqPSJzcGFuIl0gewogIGZsb2F0OiBub25lOwogIG1hcmdpbi1sZWZ0OiAwOyB9CgouaW5wdXQtYXBwZW5kIGlucHV0W2NsYXNzKj0ic3BhbiJdLAouaW5wdXQtYXBwZW5kIC51bmVkaXRhYmxlLWlucHV0W2NsYXNzKj0ic3BhbiJdLAouaW5wdXQtcHJlcGVuZCBpbnB1dFtjbGFzcyo9InNwYW4iXSwKLmlucHV0LXByZXBlbmQgLnVuZWRpdGFibGUtaW5wdXRbY2xhc3MqPSJzcGFuIl0sCi5yb3ctZmx1aWQgaW5wdXRbY2xhc3MqPSJzcGFuIl0sCi5yb3ctZmx1aWQgc2VsZWN0W2NsYXNzKj0ic3BhbiJdLAoucm93LWZsdWlkIHRleHRhcmVhW2NsYXNzKj0ic3BhbiJdLAoucm93LWZsdWlkIC51bmVkaXRhYmxlLWlucHV0W2NsYXNzKj0ic3BhbiJdLAoucm93LWZsdWlkIC5pbnB1dC1wcmVwZW5kIFtjbGFzcyo9InNwYW4iXSwKLnJvdy1mbHVpZCAuaW5wdXQtYXBwZW5kIFtjbGFzcyo9InNwYW4iXSB7CiAgZGlzcGxheTogaW5saW5lLWJsb2NrOyB9CgppbnB1dCwKdGV4dGFyZWEsCi51bmVkaXRhYmxlLWlucHV0IHsKICBtYXJnaW4tbGVmdDogMDsgfQoKLmNvbnRyb2xzLXJvdyBbY2xhc3MqPSJzcGFuIl0gKyBbY2xhc3MqPSJzcGFuIl0gewogIG1hcmdpbi1sZWZ0OiAyMHB4OyB9CgppbnB1dC5zcGFuMTIsCnRleHRhcmVhLnNwYW4xMiwKLnVuZWRpdGFibGUtaW5wdXQuc3BhbjEyIHsKICB3aWR0aDogOTI2cHg7IH0KCmlucHV0LnNwYW4xMSwKdGV4dGFyZWEuc3BhbjExLAoudW5lZGl0YWJsZS1pbnB1dC5zcGFuMTEgewogIHdpZHRoOiA4NDZweDsgfQoKaW5wdXQuc3BhbjEwLAp0ZXh0YXJlYS5zcGFuMTAsCi51bmVkaXRhYmxlLWlucHV0LnNwYW4xMCB7CiAgd2lkdGg6IDc2NnB4OyB9CgppbnB1dC5zcGFuOSwKdGV4dGFyZWEuc3BhbjksCi51bmVkaXRhYmxlLWlucHV0LnNwYW45IHsKICB3aWR0aDogNjg2cHg7IH0KCmlucHV0LnNwYW44LAp0ZXh0YXJlYS5zcGFuOCwKLnVuZWRpdGFibGUtaW5wdXQuc3BhbjggewogIHdpZHRoOiA2MDZweDsgfQoKaW5wdXQuc3BhbjcsCnRleHRhcmVhLnNwYW43LAoudW5lZGl0YWJsZS1pbnB1dC5zcGFuNyB7CiAgd2lkdGg6IDUyNnB4OyB9CgppbnB1dC5zcGFuNiwKdGV4dGFyZWEuc3BhbjYsCi51bmVkaXRhYmxlLWlucHV0LnNwYW42IHsKICB3aWR0aDogNDQ2cHg7IH0KCmlucHV0LnNwYW41LAp0ZXh0YXJlYS5zcGFuNSwKLnVuZWRpdGFibGUtaW5wdXQuc3BhbjUgewogIHdpZHRoOiAzNjZweDsgfQoKaW5wdXQuc3BhbjQsCnRleHRhcmVhLnNwYW40LAoudW5lZGl0YWJsZS1pbnB1dC5zcGFuNCB7CiAgd2lkdGg6IDI4NnB4OyB9CgppbnB1dC5zcGFuMywKdGV4dGFyZWEuc3BhbjMsCi51bmVkaXRhYmxlLWlucHV0LnNwYW4zIHsKICB3aWR0aDogMjA2cHg7IH0KCmlucHV0LnNwYW4yLAp0ZXh0YXJlYS5zcGFuMiwKLnVuZWRpdGFibGUtaW5wdXQuc3BhbjIgewogIHdpZHRoOiAxMjZweDsgfQoKaW5wdXQuc3BhbjEsCnRleHRhcmVhLnNwYW4xLAoudW5lZGl0YWJsZS1pbnB1dC5zcGFuMSB7CiAgd2lkdGg6IDQ2cHg7IH0KCi5jb250cm9scy1yb3cgewogICp6b29tOiAxOyB9CiAgLmNvbnRyb2xzLXJvdzpiZWZvcmUsIC5jb250cm9scy1yb3c6YWZ0ZXIgewogICAgZGlzcGxheTogdGFibGU7CiAgICBjb250ZW50OiAiIjsKICAgIGxpbmUtaGVpZ2h0OiAwOyB9CiAgLmNvbnRyb2xzLXJvdzphZnRlciB7CiAgICBjbGVhcjogYm90aDsgfQoKLmNvbnRyb2xzLXJvdyBbY2xhc3MqPSJzcGFuIl0sCi5yb3ctZmx1aWQgLmNvbnRyb2xzLXJvdyBbY2xhc3MqPSJzcGFuIl0gewogIGZsb2F0OiBsZWZ0OyB9CgouY29udHJvbHMtcm93IC5jaGVja2JveFtjbGFzcyo9InNwYW4iXSwKLmNvbnRyb2xzLXJvdyAucmFkaW9bY2xhc3MqPSJzcGFuIl0gewogIHBhZGRpbmctdG9wOiA1cHg7IH0KCmlucHV0W2Rpc2FibGVkXSwKc2VsZWN0W2Rpc2FibGVkXSwKdGV4dGFyZWFbZGlzYWJsZWRdLAppbnB1dFtyZWFkb25seV0sCnNlbGVjdFtyZWFkb25seV0sCnRleHRhcmVhW3JlYWRvbmx5XSB7CiAgY3Vyc29yOiBub3QtYWxsb3dlZDsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWVlZWVlOyB9CgppbnB1dFt0eXBlPSJyYWRpbyJdW2Rpc2FibGVkXSwKaW5wdXRbdHlwZT0iY2hlY2tib3giXVtkaXNhYmxlZF0sCmlucHV0W3R5cGU9InJhZGlvIl1bcmVhZG9ubHldLAppbnB1dFt0eXBlPSJjaGVja2JveCJdW3JlYWRvbmx5XSB7CiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7IH0KCi5jb250cm9sLWdyb3VwLndhcm5pbmcgPiBsYWJlbCwKLmNvbnRyb2wtZ3JvdXAud2FybmluZyAuaGVscC1ibG9jaywKLmNvbnRyb2wtZ3JvdXAud2FybmluZyAuaGVscC1pbmxpbmUgewogIGNvbG9yOiAjYzA5ODUzOyB9Ci5jb250cm9sLWdyb3VwLndhcm5pbmcgLmNoZWNrYm94LAouY29udHJvbC1ncm91cC53YXJuaW5nIC5yYWRpbywKLmNvbnRyb2wtZ3JvdXAud2FybmluZyBpbnB1dCwKLmNvbnRyb2wtZ3JvdXAud2FybmluZyBzZWxlY3QsCi5jb250cm9sLWdyb3VwLndhcm5pbmcgdGV4dGFyZWEgewogIGNvbG9yOiAjYzA5ODUzOyB9Ci5jb250cm9sLWdyb3VwLndhcm5pbmcgaW5wdXQsCi5jb250cm9sLWdyb3VwLndhcm5pbmcgc2VsZWN0LAouY29udHJvbC1ncm91cC53YXJuaW5nIHRleHRhcmVhIHsKICBib3JkZXItY29sb3I6ICNjMDk4NTM7CiAgLXdlYmtpdC1ib3gtc2hhZG93OiBpbnNldCAwIDFweCAxcHggcmdiYSgwLCAwLCAwLCAwLjA3NSk7CiAgLW1vei1ib3gtc2hhZG93OiBpbnNldCAwIDFweCAxcHggcmdiYSgwLCAwLCAwLCAwLjA3NSk7CiAgYm94LXNoYWRvdzogaW5zZXQgMCAxcHggMXB4IHJnYmEoMCwgMCwgMCwgMC4wNzUpOyB9CiAgLmNvbnRyb2wtZ3JvdXAud2FybmluZyBpbnB1dDpmb2N1cywKICAuY29udHJvbC1ncm91cC53YXJuaW5nIHNlbGVjdDpmb2N1cywKICAuY29udHJvbC1ncm91cC53YXJuaW5nIHRleHRhcmVhOmZvY3VzIHsKICAgIGJvcmRlci1jb2xvcjogI2E0N2UzYzsKICAgIC13ZWJraXQtYm94LXNoYWRvdzogaW5zZXQgMCAxcHggMXB4IHJnYmEoMCwgMCwgMCwgMC4wNzUpLCAwIDAgNnB4ICNkYmM1OWU7CiAgICAtbW96LWJveC1zaGFkb3c6IGluc2V0IDAgMXB4IDFweCByZ2JhKDAsIDAsIDAsIDAuMDc1KSwgMCAwIDZweCAjZGJjNTllOwogICAgYm94LXNoYWRvdzogaW5zZXQgMCAxcHggMXB4IHJnYmEoMCwgMCwgMCwgMC4wNzUpLCAwIDAgNnB4ICNkYmM1OWU7IH0KLmNvbnRyb2wtZ3JvdXAud2FybmluZyAuaW5wdXQtcHJlcGVuZCAuYWRkLW9uLAouY29udHJvbC1ncm91cC53YXJuaW5nIC5pbnB1dC1hcHBlbmQgLmFkZC1vbiB7CiAgY29sb3I6ICNjMDk4NTM7CiAgYmFja2dyb3VuZC1jb2xvcjogI2ZjZjhlMzsKICBib3JkZXItY29sb3I6ICNjMDk4NTM7IH0KCi5jb250cm9sLWdyb3VwLmVycm9yID4gbGFiZWwsCi5jb250cm9sLWdyb3VwLmVycm9yIC5oZWxwLWJsb2NrLAouY29udHJvbC1ncm91cC5lcnJvciAuaGVscC1pbmxpbmUgewogIGNvbG9yOiB3aGl0ZTsgfQouY29udHJvbC1ncm91cC5lcnJvciAuY2hlY2tib3gsCi5jb250cm9sLWdyb3VwLmVycm9yIC5yYWRpbywKLmNvbnRyb2wtZ3JvdXAuZXJyb3IgaW5wdXQsCi5jb250cm9sLWdyb3VwLmVycm9yIHNlbGVjdCwKLmNvbnRyb2wtZ3JvdXAuZXJyb3IgdGV4dGFyZWEgewogIGNvbG9yOiB3aGl0ZTsgfQouY29udHJvbC1ncm91cC5lcnJvciBpbnB1dCwKLmNvbnRyb2wtZ3JvdXAuZXJyb3Igc2VsZWN0LAouY29udHJvbC1ncm91cC5lcnJvciB0ZXh0YXJlYSB7CiAgYm9yZGVyLWNvbG9yOiB3aGl0ZTsKICAtd2Via2l0LWJveC1zaGFkb3c6IGluc2V0IDAgMXB4IDFweCByZ2JhKDAsIDAsIDAsIDAuMDc1KTsKICAtbW96LWJveC1zaGFkb3c6IGluc2V0IDAgMXB4IDFweCByZ2JhKDAsIDAsIDAsIDAuMDc1KTsKICBib3gtc2hhZG93OiBpbnNldCAwIDFweCAxcHggcmdiYSgwLCAwLCAwLCAwLjA3NSk7IH0KICAuY29udHJvbC1ncm91cC5lcnJvciBpbnB1dDpmb2N1cywKICAuY29udHJvbC1ncm91cC5lcnJvciBzZWxlY3Q6Zm9jdXMsCiAgLmNvbnRyb2wtZ3JvdXAuZXJyb3IgdGV4dGFyZWE6Zm9jdXMgewogICAgYm9yZGVyLWNvbG9yOiAjZTZlNmU2OwogICAgLXdlYmtpdC1ib3gtc2hhZG93OiBpbnNldCAwIDFweCAxcHggcmdiYSgwLCAwLCAwLCAwLjA3NSksIDAgMCA2cHggd2hpdGU7CiAgICAtbW96LWJveC1zaGFkb3c6IGluc2V0IDAgMXB4IDFweCByZ2JhKDAsIDAsIDAsIDAuMDc1KSwgMCAwIDZweCB3aGl0ZTsKICAgIGJveC1zaGFkb3c6IGluc2V0IDAgMXB4IDFweCByZ2JhKDAsIDAsIDAsIDAuMDc1KSwgMCAwIDZweCB3aGl0ZTsgfQouY29udHJvbC1ncm91cC5lcnJvciAuaW5wdXQtcHJlcGVuZCAuYWRkLW9uLAouY29udHJvbC1ncm91cC5lcnJvciAuaW5wdXQtYXBwZW5kIC5hZGQtb24gewogIGNvbG9yOiB3aGl0ZTsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjY2MwMDAwOwogIGJvcmRlci1jb2xvcjogd2hpdGU7IH0KCi5jb250cm9sLWdyb3VwLnN1Y2Nlc3MgPiBsYWJlbCwKLmNvbnRyb2wtZ3JvdXAuc3VjY2VzcyAuaGVscC1ibG9jaywKLmNvbnRyb2wtZ3JvdXAuc3VjY2VzcyAuaGVscC1pbmxpbmUgewogIGNvbG9yOiAjNDY4ODQ3OyB9Ci5jb250cm9sLWdyb3VwLnN1Y2Nlc3MgLmNoZWNrYm94LAouY29udHJvbC1ncm91cC5zdWNjZXNzIC5yYWRpbywKLmNvbnRyb2wtZ3JvdXAuc3VjY2VzcyBpbnB1dCwKLmNvbnRyb2wtZ3JvdXAuc3VjY2VzcyBzZWxlY3QsCi5jb250cm9sLWdyb3VwLnN1Y2Nlc3MgdGV4dGFyZWEgewogIGNvbG9yOiAjNDY4ODQ3OyB9Ci5jb250cm9sLWdyb3VwLnN1Y2Nlc3MgaW5wdXQsCi5jb250cm9sLWdyb3VwLnN1Y2Nlc3Mgc2VsZWN0LAouY29udHJvbC1ncm91cC5zdWNjZXNzIHRleHRhcmVhIHsKICBib3JkZXItY29sb3I6ICM0Njg4NDc7CiAgLXdlYmtpdC1ib3gtc2hhZG93OiBpbnNldCAwIDFweCAxcHggcmdiYSgwLCAwLCAwLCAwLjA3NSk7CiAgLW1vei1ib3gtc2hhZG93OiBpbnNldCAwIDFweCAxcHggcmdiYSgwLCAwLCAwLCAwLjA3NSk7CiAgYm94LXNoYWRvdzogaW5zZXQgMCAxcHggMXB4IHJnYmEoMCwgMCwgMCwgMC4wNzUpOyB9CiAgLmNvbnRyb2wtZ3JvdXAuc3VjY2VzcyBpbnB1dDpmb2N1cywKICAuY29udHJvbC1ncm91cC5zdWNjZXNzIHNlbGVjdDpmb2N1cywKICAuY29udHJvbC1ncm91cC5zdWNjZXNzIHRleHRhcmVhOmZvY3VzIHsKICAgIGJvcmRlci1jb2xvcjogIzM1NjYzNTsKICAgIC13ZWJraXQtYm94LXNoYWRvdzogaW5zZXQgMCAxcHggMXB4IHJnYmEoMCwgMCwgMCwgMC4wNzUpLCAwIDAgNnB4ICM3YWJhN2I7CiAgICAtbW96LWJveC1zaGFkb3c6IGluc2V0IDAgMXB4IDFweCByZ2JhKDAsIDAsIDAsIDAuMDc1KSwgMCAwIDZweCAjN2FiYTdiOwogICAgYm94LXNoYWRvdzogaW5zZXQgMCAxcHggMXB4IHJnYmEoMCwgMCwgMCwgMC4wNzUpLCAwIDAgNnB4ICM3YWJhN2I7IH0KLmNvbnRyb2wtZ3JvdXAuc3VjY2VzcyAuaW5wdXQtcHJlcGVuZCAuYWRkLW9uLAouY29udHJvbC1ncm91cC5zdWNjZXNzIC5pbnB1dC1hcHBlbmQgLmFkZC1vbiB7CiAgY29sb3I6ICM0Njg4NDc7CiAgYmFja2dyb3VuZC1jb2xvcjogI2RmZjBkODsKICBib3JkZXItY29sb3I6ICM0Njg4NDc7IH0KCi5jb250cm9sLWdyb3VwLmluZm8gPiBsYWJlbCwKLmNvbnRyb2wtZ3JvdXAuaW5mbyAuaGVscC1ibG9jaywKLmNvbnRyb2wtZ3JvdXAuaW5mbyAuaGVscC1pbmxpbmUgewogIGNvbG9yOiAjMzMzMzMzOyB9Ci5jb250cm9sLWdyb3VwLmluZm8gLmNoZWNrYm94LAouY29udHJvbC1ncm91cC5pbmZvIC5yYWRpbywKLmNvbnRyb2wtZ3JvdXAuaW5mbyBpbnB1dCwKLmNvbnRyb2wtZ3JvdXAuaW5mbyBzZWxlY3QsCi5jb250cm9sLWdyb3VwLmluZm8gdGV4dGFyZWEgewogIGNvbG9yOiAjMzMzMzMzOyB9Ci5jb250cm9sLWdyb3VwLmluZm8gaW5wdXQsCi5jb250cm9sLWdyb3VwLmluZm8gc2VsZWN0LAouY29udHJvbC1ncm91cC5pbmZvIHRleHRhcmVhIHsKICBib3JkZXItY29sb3I6ICMzMzMzMzM7CiAgLXdlYmtpdC1ib3gtc2hhZG93OiBpbnNldCAwIDFweCAxcHggcmdiYSgwLCAwLCAwLCAwLjA3NSk7CiAgLW1vei1ib3gtc2hhZG93OiBpbnNldCAwIDFweCAxcHggcmdiYSgwLCAwLCAwLCAwLjA3NSk7CiAgYm94LXNoYWRvdzogaW5zZXQgMCAxcHggMXB4IHJnYmEoMCwgMCwgMCwgMC4wNzUpOyB9CiAgLmNvbnRyb2wtZ3JvdXAuaW5mbyBpbnB1dDpmb2N1cywKICAuY29udHJvbC1ncm91cC5pbmZvIHNlbGVjdDpmb2N1cywKICAuY29udHJvbC1ncm91cC5pbmZvIHRleHRhcmVhOmZvY3VzIHsKICAgIGJvcmRlci1jb2xvcjogIzFhMWExYTsKICAgIC13ZWJraXQtYm94LXNoYWRvdzogaW5zZXQgMCAxcHggMXB4IHJnYmEoMCwgMCwgMCwgMC4wNzUpLCAwIDAgNnB4ICM2NjY2NjY7CiAgICAtbW96LWJveC1zaGFkb3c6IGluc2V0IDAgMXB4IDFweCByZ2JhKDAsIDAsIDAsIDAuMDc1KSwgMCAwIDZweCAjNjY2NjY2OwogICAgYm94LXNoYWRvdzogaW5zZXQgMCAxcHggMXB4IHJnYmEoMCwgMCwgMCwgMC4wNzUpLCAwIDAgNnB4ICM2NjY2NjY7IH0KLmNvbnRyb2wtZ3JvdXAuaW5mbyAuaW5wdXQtcHJlcGVuZCAuYWRkLW9uLAouY29udHJvbC1ncm91cC5pbmZvIC5pbnB1dC1hcHBlbmQgLmFkZC1vbiB7CiAgY29sb3I6ICMzMzMzMzM7CiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7CiAgYm9yZGVyLWNvbG9yOiAjMzMzMzMzOyB9CgppbnB1dDpmb2N1czpyZXF1aXJlZDppbnZhbGlkLAp0ZXh0YXJlYTpmb2N1czpyZXF1aXJlZDppbnZhbGlkLApzZWxlY3Q6Zm9jdXM6cmVxdWlyZWQ6aW52YWxpZCB7CiAgY29sb3I6ICNiOTRhNDg7CiAgYm9yZGVyLWNvbG9yOiAjZWU1ZjViOyB9CiAgaW5wdXQ6Zm9jdXM6cmVxdWlyZWQ6aW52YWxpZDpmb2N1cywKICB0ZXh0YXJlYTpmb2N1czpyZXF1aXJlZDppbnZhbGlkOmZvY3VzLAogIHNlbGVjdDpmb2N1czpyZXF1aXJlZDppbnZhbGlkOmZvY3VzIHsKICAgIGJvcmRlci1jb2xvcjogI2U5MzIyZDsKICAgIC13ZWJraXQtYm94LXNoYWRvdzogMCAwIDZweCAjZjhiOWI3OwogICAgLW1vei1ib3gtc2hhZG93OiAwIDAgNnB4ICNmOGI5Yjc7CiAgICBib3gtc2hhZG93OiAwIDAgNnB4ICNmOGI5Yjc7IH0KCi5mb3JtLWFjdGlvbnMgewogIHBhZGRpbmc6IDE5cHggMjBweCAyMHB4OwogIG1hcmdpbi10b3A6IDIwcHg7CiAgbWFyZ2luLWJvdHRvbTogMjBweDsKICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZXNtb2tlOwogIGJvcmRlci10b3A6IDFweCBzb2xpZCAjZTVlNWU1OwogICp6b29tOiAxOyB9CiAgLmZvcm0tYWN0aW9uczpiZWZvcmUsIC5mb3JtLWFjdGlvbnM6YWZ0ZXIgewogICAgZGlzcGxheTogdGFibGU7CiAgICBjb250ZW50OiAiIjsKICAgIGxpbmUtaGVpZ2h0OiAwOyB9CiAgLmZvcm0tYWN0aW9uczphZnRlciB7CiAgICBjbGVhcjogYm90aDsgfQoKLmhlbHAtYmxvY2ssCi5oZWxwLWlubGluZSB7CiAgY29sb3I6ICM1OTU5NTk7IH0KCi5oZWxwLWJsb2NrIHsKICBkaXNwbGF5OiBibG9jazsKICBtYXJnaW4tYm90dG9tOiAxMHB4OyB9CgouaGVscC1pbmxpbmUgewogIGRpc3BsYXk6IGlubGluZS1ibG9jazsKICAqZGlzcGxheTogaW5saW5lOwogIC8qIElFNyBpbmxpbmUtYmxvY2sgaGFjayAqLwogICp6b29tOiAxOwogIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7CiAgcGFkZGluZy1sZWZ0OiA1cHg7IH0KCi5pbnB1dC1hcHBlbmQsCi5pbnB1dC1wcmVwZW5kIHsKICBtYXJnaW4tYm90dG9tOiA1cHg7CiAgZm9udC1zaXplOiAwOwogIHdoaXRlLXNwYWNlOiBub3dyYXA7IH0KICAuaW5wdXQtYXBwZW5kIGlucHV0LAogIC5pbnB1dC1hcHBlbmQgc2VsZWN0LAogIC5pbnB1dC1hcHBlbmQgLnVuZWRpdGFibGUtaW5wdXQsCiAgLmlucHV0LWFwcGVuZCAuZHJvcGRvd24tbWVudSwKICAuaW5wdXQtcHJlcGVuZCBpbnB1dCwKICAuaW5wdXQtcHJlcGVuZCBzZWxlY3QsCiAgLmlucHV0LXByZXBlbmQgLnVuZWRpdGFibGUtaW5wdXQsCiAgLmlucHV0LXByZXBlbmQgLmRyb3Bkb3duLW1lbnUgewogICAgZm9udC1zaXplOiAxNHB4OyB9CiAgLmlucHV0LWFwcGVuZCBpbnB1dCwKICAuaW5wdXQtYXBwZW5kIHNlbGVjdCwKICAuaW5wdXQtYXBwZW5kIC51bmVkaXRhYmxlLWlucHV0LAogIC5pbnB1dC1wcmVwZW5kIGlucHV0LAogIC5pbnB1dC1wcmVwZW5kIHNlbGVjdCwKICAuaW5wdXQtcHJlcGVuZCAudW5lZGl0YWJsZS1pbnB1dCB7CiAgICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgICBtYXJnaW4tYm90dG9tOiAwOwogICAgKm1hcmdpbi1sZWZ0OiAwOwogICAgdmVydGljYWwtYWxpZ246IHRvcDsKICAgIC13ZWJraXQtYm9yZGVyLXJhZGl1czogMCA0cHggNHB4IDA7CiAgICAtbW96LWJvcmRlci1yYWRpdXM6IDAgNHB4IDRweCAwOwogICAgYm9yZGVyLXJhZGl1czogMCA0cHggNHB4IDA7IH0KICAgIC5pbnB1dC1hcHBlbmQgaW5wdXQ6Zm9jdXMsCiAgICAuaW5wdXQtYXBwZW5kIHNlbGVjdDpmb2N1cywKICAgIC5pbnB1dC1hcHBlbmQgLnVuZWRpdGFibGUtaW5wdXQ6Zm9jdXMsCiAgICAuaW5wdXQtcHJlcGVuZCBpbnB1dDpmb2N1cywKICAgIC5pbnB1dC1wcmVwZW5kIHNlbGVjdDpmb2N1cywKICAgIC5pbnB1dC1wcmVwZW5kIC51bmVkaXRhYmxlLWlucHV0OmZvY3VzIHsKICAgICAgei1pbmRleDogMjsgfQogIC5pbnB1dC1hcHBlbmQgLmFkZC1vbiwKICAuaW5wdXQtcHJlcGVuZCAuYWRkLW9uIHsKICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsKICAgIHdpZHRoOiBhdXRvOwogICAgaGVpZ2h0OiAyMHB4OwogICAgbWluLXdpZHRoOiAxNnB4OwogICAgcGFkZGluZzogNHB4IDVweDsKICAgIGZvbnQtc2l6ZTogMTRweDsKICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7CiAgICBsaW5lLWhlaWdodDogMjBweDsKICAgIHRleHQtYWxpZ246IGNlbnRlcjsKICAgIHRleHQtc2hhZG93OiAwIDFweCAwIHdoaXRlOwogICAgYmFja2dyb3VuZC1jb2xvcjogI2VlZWVlZTsKICAgIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7IH0KICAuaW5wdXQtYXBwZW5kIC5hZGQtb24sCiAgLmlucHV0LWFwcGVuZCAuYnRuLAogIC5pbnB1dC1wcmVwZW5kIC5hZGQtb24sCiAgLmlucHV0LXByZXBlbmQgLmJ0biB7CiAgICB2ZXJ0aWNhbC1hbGlnbjogdG9wOwogICAgLXdlYmtpdC1ib3JkZXItcmFkaXVzOiAwOwogICAgLW1vei1ib3JkZXItcmFkaXVzOiAwOwogICAgYm9yZGVyLXJhZGl1czogMDsgfQogIC5pbnB1dC1hcHBlbmQgLmFjdGl2ZSwKICAuaW5wdXQtcHJlcGVuZCAuYWN0aXZlIHsKICAgIGJhY2tncm91bmQtY29sb3I6ICNhOWRiYTk7CiAgICBib3JkZXItY29sb3I6ICM0NmE1NDY7IH0KCi5pbnB1dC1wcmVwZW5kIC5hZGQtb24sCi5pbnB1dC1wcmVwZW5kIC5idG4gewogIG1hcmdpbi1yaWdodDogLTFweDsgfQouaW5wdXQtcHJlcGVuZCAuYWRkLW9uOmZpcnN0LWNoaWxkLAouaW5wdXQtcHJlcGVuZCAuYnRuOmZpcnN0LWNoaWxkIHsKICAtd2Via2l0LWJvcmRlci1yYWRpdXM6IDRweCAwIDAgNHB4OwogIC1tb3otYm9yZGVyLXJhZGl1czogNHB4IDAgMCA0cHg7CiAgYm9yZGVyLXJhZGl1czogNHB4IDAgMCA0cHg7IH0KCi5pbnB1dC1hcHBlbmQgaW5wdXQsCi5pbnB1dC1hcHBlbmQgc2VsZWN0LAouaW5wdXQtYXBwZW5kIC51bmVkaXRhYmxlLWlucHV0IHsKICAtd2Via2l0LWJvcmRlci1yYWRpdXM6IDRweCAwIDAgNHB4OwogIC1tb3otYm9yZGVyLXJhZGl1czogNHB4IDAgMCA0cHg7CiAgYm9yZGVyLXJhZGl1czogNHB4IDAgMCA0cHg7IH0KICAuaW5wdXQtYXBwZW5kIGlucHV0ICsgLmJ0bi1ncm91cCAuYnRuLAogIC5pbnB1dC1hcHBlbmQgc2VsZWN0ICsgLmJ0bi1ncm91cCAuYnRuLAogIC5pbnB1dC1hcHBlbmQgLnVuZWRpdGFibGUtaW5wdXQgKyAuYnRuLWdyb3VwIC5idG4gewogICAgLXdlYmtpdC1ib3JkZXItcmFkaXVzOiAwIDRweCA0cHggMDsKICAgIC1tb3otYm9yZGVyLXJhZGl1czogMCA0cHggNHB4IDA7CiAgICBib3JkZXItcmFkaXVzOiAwIDRweCA0cHggMDsgfQouaW5wdXQtYXBwZW5kIC5hZGQtb24sCi5pbnB1dC1hcHBlbmQgLmJ0biwKLmlucHV0LWFwcGVuZCAuYnRuLWdyb3VwIHsKICBtYXJnaW4tbGVmdDogLTFweDsgfQouaW5wdXQtYXBwZW5kIC5hZGQtb246bGFzdC1jaGlsZCwKLmlucHV0LWFwcGVuZCAuYnRuOmxhc3QtY2hpbGQgewogIC13ZWJraXQtYm9yZGVyLXJhZGl1czogMCA0cHggNHB4IDA7CiAgLW1vei1ib3JkZXItcmFkaXVzOiAwIDRweCA0cHggMDsKICBib3JkZXItcmFkaXVzOiAwIDRweCA0cHggMDsgfQoKLmlucHV0LXByZXBlbmQuaW5wdXQtYXBwZW5kIGlucHV0LAouaW5wdXQtcHJlcGVuZC5pbnB1dC1hcHBlbmQgc2VsZWN0LAouaW5wdXQtcHJlcGVuZC5pbnB1dC1hcHBlbmQgLnVuZWRpdGFibGUtaW5wdXQgewogIC13ZWJraXQtYm9yZGVyLXJhZGl1czogMDsKICAtbW96LWJvcmRlci1yYWRpdXM6IDA7CiAgYm9yZGVyLXJhZGl1czogMDsgfQogIC5pbnB1dC1wcmVwZW5kLmlucHV0LWFwcGVuZCBpbnB1dCArIC5idG4tZ3JvdXAgLmJ0biwKICAuaW5wdXQtcHJlcGVuZC5pbnB1dC1hcHBlbmQgc2VsZWN0ICsgLmJ0bi1ncm91cCAuYnRuLAogIC5pbnB1dC1wcmVwZW5kLmlucHV0LWFwcGVuZCAudW5lZGl0YWJsZS1pbnB1dCArIC5idG4tZ3JvdXAgLmJ0biB7CiAgICAtd2Via2l0LWJvcmRlci1yYWRpdXM6IDAgNHB4IDRweCAwOwogICAgLW1vei1ib3JkZXItcmFkaXVzOiAwIDRweCA0cHggMDsKICAgIGJvcmRlci1yYWRpdXM6IDAgNHB4IDRweCAwOyB9Ci5pbnB1dC1wcmVwZW5kLmlucHV0LWFwcGVuZCAuYWRkLW9uOmZpcnN0LWNoaWxkLAouaW5wdXQtcHJlcGVuZC5pbnB1dC1hcHBlbmQgLmJ0bjpmaXJzdC1jaGlsZCB7CiAgbWFyZ2luLXJpZ2h0OiAtMXB4OwogIC13ZWJraXQtYm9yZGVyLXJhZGl1czogNHB4IDAgMCA0cHg7CiAgLW1vei1ib3JkZXItcmFkaXVzOiA0cHggMCAwIDRweDsKICBib3JkZXItcmFkaXVzOiA0cHggMCAwIDRweDsgfQouaW5wdXQtcHJlcGVuZC5pbnB1dC1hcHBlbmQgLmFkZC1vbjpsYXN0LWNoaWxkLAouaW5wdXQtcHJlcGVuZC5pbnB1dC1hcHBlbmQgLmJ0bjpsYXN0LWNoaWxkIHsKICBtYXJnaW4tbGVmdDogLTFweDsKICAtd2Via2l0LWJvcmRlci1yYWRpdXM6IDAgNHB4IDRweCAwOwogIC1tb3otYm9yZGVyLXJhZGl1czogMCA0cHggNHB4IDA7CiAgYm9yZGVyLXJhZGl1czogMCA0cHggNHB4IDA7IH0KLmlucHV0LXByZXBlbmQuaW5wdXQtYXBwZW5kIC5idG4tZ3JvdXA6Zmlyc3QtY2hpbGQgewogIG1hcmdpbi1sZWZ0OiAwOyB9CgppbnB1dC5zZWFyY2gtcXVlcnkgewogIHBhZGRpbmctcmlnaHQ6IDE0cHg7CiAgcGFkZGluZy1yaWdodDogNHB4IFw5OwogIHBhZGRpbmctbGVmdDogMTRweDsKICBwYWRkaW5nLWxlZnQ6IDRweCBcOTsKICAvKiBJRTctOCBkb2Vzbid0IGhhdmUgYm9yZGVyLXJhZGl1cywgc28gZG9uJ3QgaW5kZW50IHRoZSBwYWRkaW5nICovCiAgbWFyZ2luLWJvdHRvbTogMDsKICAtd2Via2l0LWJvcmRlci1yYWRpdXM6IDE1cHg7CiAgLW1vei1ib3JkZXItcmFkaXVzOiAxNXB4OwogIGJvcmRlci1yYWRpdXM6IDE1cHg7IH0KCi8qIEFsbG93IGZvciBpbnB1dCBwcmVwZW5kL2FwcGVuZCBpbiBzZWFyY2ggZm9ybXMgKi8KLmZvcm0tc2VhcmNoIC5pbnB1dC1hcHBlbmQgLnNlYXJjaC1xdWVyeSwKLmZvcm0tc2VhcmNoIC5pbnB1dC1wcmVwZW5kIC5zZWFyY2gtcXVlcnkgewogIC13ZWJraXQtYm9yZGVyLXJhZGl1czogMDsKICAtbW96LWJvcmRlci1yYWRpdXM6IDA7CiAgYm9yZGVyLXJhZGl1czogMDsgfQoKLmZvcm0tc2VhcmNoIC5pbnB1dC1hcHBlbmQgLnNlYXJjaC1xdWVyeSB7CiAgLXdlYmtpdC1ib3JkZXItcmFkaXVzOiAxNHB4IDAgMCAxNHB4OwogIC1tb3otYm9yZGVyLXJhZGl1czogMTRweCAwIDAgMTRweDsKICBib3JkZXItcmFkaXVzOiAxNHB4IDAgMCAxNHB4OyB9CgouZm9ybS1zZWFyY2ggLmlucHV0LWFwcGVuZCAuYnRuIHsKICAtd2Via2l0LWJvcmRlci1yYWRpdXM6IDAgMTRweCAxNHB4IDA7CiAgLW1vei1ib3JkZXItcmFkaXVzOiAwIDE0cHggMTRweCAwOwogIGJvcmRlci1yYWRpdXM6IDAgMTRweCAxNHB4IDA7IH0KCi5mb3JtLXNlYXJjaCAuaW5wdXQtcHJlcGVuZCAuc2VhcmNoLXF1ZXJ5IHsKICAtd2Via2l0LWJvcmRlci1yYWRpdXM6IDAgMTRweCAxNHB4IDA7CiAgLW1vei1ib3JkZXItcmFkaXVzOiAwIDE0cHggMTRweCAwOwogIGJvcmRlci1yYWRpdXM6IDAgMTRweCAxNHB4IDA7IH0KCi5mb3JtLXNlYXJjaCAuaW5wdXQtcHJlcGVuZCAuYnRuIHsKICAtd2Via2l0LWJvcmRlci1yYWRpdXM6IDE0cHggMCAwIDE0cHg7CiAgLW1vei1ib3JkZXItcmFkaXVzOiAxNHB4IDAgMCAxNHB4OwogIGJvcmRlci1yYWRpdXM6IDE0cHggMCAwIDE0cHg7IH0KCi5mb3JtLXNlYXJjaCBpbnB1dCwKLmZvcm0tc2VhcmNoIHRleHRhcmVhLAouZm9ybS1zZWFyY2ggc2VsZWN0LAouZm9ybS1zZWFyY2ggLmhlbHAtaW5saW5lLAouZm9ybS1zZWFyY2ggLnVuZWRpdGFibGUtaW5wdXQsCi5mb3JtLXNlYXJjaCAuaW5wdXQtcHJlcGVuZCwKLmZvcm0tc2VhcmNoIC5pbnB1dC1hcHBlbmQsCi5mb3JtLWlubGluZSBpbnB1dCwKLmZvcm0taW5saW5lIHRleHRhcmVhLAouZm9ybS1pbmxpbmUgc2VsZWN0LAouZm9ybS1pbmxpbmUgLmhlbHAtaW5saW5lLAouZm9ybS1pbmxpbmUgLnVuZWRpdGFibGUtaW5wdXQsCi5mb3JtLWlubGluZSAuaW5wdXQtcHJlcGVuZCwKLmZvcm0taW5saW5lIC5pbnB1dC1hcHBlbmQsCi5mb3JtLWhvcml6b250YWwgaW5wdXQsCi5mb3JtLWhvcml6b250YWwgdGV4dGFyZWEsCi5mb3JtLWhvcml6b250YWwgc2VsZWN0LAouZm9ybS1ob3Jpem9udGFsIC5oZWxwLWlubGluZSwKLmZvcm0taG9yaXpvbnRhbCAudW5lZGl0YWJsZS1pbnB1dCwKLmZvcm0taG9yaXpvbnRhbCAuaW5wdXQtcHJlcGVuZCwKLmZvcm0taG9yaXpvbnRhbCAuaW5wdXQtYXBwZW5kIHsKICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CiAgKmRpc3BsYXk6IGlubGluZTsKICAvKiBJRTcgaW5saW5lLWJsb2NrIGhhY2sgKi8KICAqem9vbTogMTsKICBtYXJnaW4tYm90dG9tOiAwOwogIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7IH0KLmZvcm0tc2VhcmNoIC5oaWRlLAouZm9ybS1pbmxpbmUgLmhpZGUsCi5mb3JtLWhvcml6b250YWwgLmhpZGUgewogIGRpc3BsYXk6IG5vbmU7IH0KCi5mb3JtLXNlYXJjaCBsYWJlbCwKLmZvcm0taW5saW5lIGxhYmVsLAouZm9ybS1zZWFyY2ggLmJ0bi1ncm91cCwKLmZvcm0taW5saW5lIC5idG4tZ3JvdXAgewogIGRpc3BsYXk6IGlubGluZS1ibG9jazsgfQoKLmZvcm0tc2VhcmNoIC5pbnB1dC1hcHBlbmQsCi5mb3JtLWlubGluZSAuaW5wdXQtYXBwZW5kLAouZm9ybS1zZWFyY2ggLmlucHV0LXByZXBlbmQsCi5mb3JtLWlubGluZSAuaW5wdXQtcHJlcGVuZCB7CiAgbWFyZ2luLWJvdHRvbTogMDsgfQoKLmZvcm0tc2VhcmNoIC5yYWRpbywKLmZvcm0tc2VhcmNoIC5jaGVja2JveCwKLmZvcm0taW5saW5lIC5yYWRpbywKLmZvcm0taW5saW5lIC5jaGVja2JveCB7CiAgcGFkZGluZy1sZWZ0OiAwOwogIG1hcmdpbi1ib3R0b206IDA7CiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTsgfQoKLmZvcm0tc2VhcmNoIC5yYWRpbyBpbnB1dFt0eXBlPSJyYWRpbyJdLAouZm9ybS1zZWFyY2ggLmNoZWNrYm94IGlucHV0W3R5cGU9ImNoZWNrYm94Il0sCi5mb3JtLWlubGluZSAucmFkaW8gaW5wdXRbdHlwZT0icmFkaW8iXSwKLmZvcm0taW5saW5lIC5jaGVja2JveCBpbnB1dFt0eXBlPSJjaGVja2JveCJdIHsKICBmbG9hdDogbGVmdDsKICBtYXJnaW4tcmlnaHQ6IDNweDsKICBtYXJnaW4tbGVmdDogMDsgfQoKLmNvbnRyb2wtZ3JvdXAgewogIG1hcmdpbi1ib3R0b206IDEwcHg7IH0KCmxlZ2VuZCArIC5jb250cm9sLWdyb3VwIHsKICBtYXJnaW4tdG9wOiAyMHB4OwogIC13ZWJraXQtbWFyZ2luLXRvcC1jb2xsYXBzZTogc2VwYXJhdGU7IH0KCi5mb3JtLWhvcml6b250YWwgLmNvbnRyb2wtZ3JvdXAgewogIG1hcmdpbi1ib3R0b206IDIwcHg7CiAgKnpvb206IDE7IH0KICAuZm9ybS1ob3Jpem9udGFsIC5jb250cm9sLWdyb3VwOmJlZm9yZSwgLmZvcm0taG9yaXpvbnRhbCAuY29udHJvbC1ncm91cDphZnRlciB7CiAgICBkaXNwbGF5OiB0YWJsZTsKICAgIGNvbnRlbnQ6ICIiOwogICAgbGluZS1oZWlnaHQ6IDA7IH0KICAuZm9ybS1ob3Jpem9udGFsIC5jb250cm9sLWdyb3VwOmFmdGVyIHsKICAgIGNsZWFyOiBib3RoOyB9Ci5mb3JtLWhvcml6b250YWwgLmNvbnRyb2wtbGFiZWwgewogIGZsb2F0OiBsZWZ0OwogIHdpZHRoOiAxNjBweDsKICBwYWRkaW5nLXRvcDogNXB4OwogIHRleHQtYWxpZ246IHJpZ2h0OwogIHdvcmQtd3JhcDogYnJlYWstd29yZDsgfQouZm9ybS1ob3Jpem9udGFsIC5jb250cm9scyB7CiAgKmRpc3BsYXk6IGlubGluZS1ibG9jazsKICAqcGFkZGluZy1sZWZ0OiAyMHB4OwogIG1hcmdpbi1sZWZ0OiAxODBweDsKICAqbWFyZ2luLWxlZnQ6IDA7IH0KICAuZm9ybS1ob3Jpem9udGFsIC5jb250cm9sczpmaXJzdC1jaGlsZCB7CiAgICAqcGFkZGluZy1sZWZ0OiAxODBweDsgfQouZm9ybS1ob3Jpem9udGFsIC5oZWxwLWJsb2NrIHsKICBtYXJnaW4tYm90dG9tOiAwOyB9Ci5mb3JtLWhvcml6b250YWwgaW5wdXQgKyAuaGVscC1ibG9jaywKLmZvcm0taG9yaXpvbnRhbCBzZWxlY3QgKyAuaGVscC1ibG9jaywKLmZvcm0taG9yaXpvbnRhbCB0ZXh0YXJlYSArIC5oZWxwLWJsb2NrIHsKICBtYXJnaW4tdG9wOiAxMHB4OyB9Ci5mb3JtLWhvcml6b250YWwgLmZvcm0tYWN0aW9ucyB7CiAgcGFkZGluZy1sZWZ0OiAxODBweDsgfQoKdGFibGUgewogIG1heC13aWR0aDogMTAwJTsKICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDsKICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOwogIGJvcmRlci1zcGFjaW5nOiAwOyB9CgoudGFibGUgewogIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZGRkOwogIHdpZHRoOiAxMDAlOwogIG1hcmdpbi1ib3R0b206IDIwcHg7IH0KICAudGFibGUgdGgsCiAgLnRhYmxlIHRkIHsKICAgIHBhZGRpbmc6IDhweDsKICAgIGxpbmUtaGVpZ2h0OiAyMHB4OwogICAgdGV4dC1hbGlnbjogbGVmdDsKICAgIHZlcnRpY2FsLWFsaWduOiB0b3A7CiAgICBib3JkZXItdG9wOiAxcHggc29saWQgI2RkZGRkZDsgfQogIC50YWJsZSB0aCB7CiAgICBmb250LXdlaWdodDogYm9sZDsgfQogIC50YWJsZSB0aGVhZCB0aCB7CiAgICB2ZXJ0aWNhbC1hbGlnbjogYm90dG9tOyB9CiAgLnRhYmxlIGNhcHRpb24gKyB0aGVhZCB0cjpmaXJzdC1jaGlsZCB0aCwKICAudGFibGUgY2FwdGlvbiArIHRoZWFkIHRyOmZpcnN0LWNoaWxkIHRkLAogIC50YWJsZSBjb2xncm91cCArIHRoZWFkIHRyOmZpcnN0LWNoaWxkIHRoLAogIC50YWJsZSBjb2xncm91cCArIHRoZWFkIHRyOmZpcnN0LWNoaWxkIHRkLAogIC50YWJsZSB0aGVhZDpmaXJzdC1jaGlsZCB0cjpmaXJzdC1jaGlsZCB0aCwKICAudGFibGUgdGhlYWQ6Zmlyc3QtY2hpbGQgdHI6Zmlyc3QtY2hpbGQgdGQgewogICAgYm9yZGVyLXRvcDogMDsgfQogIC50YWJsZSB0Ym9keSArIHRib2R5IHsKICAgIGJvcmRlci10b3A6IDJweCBzb2xpZCAjZGRkZGRkOyB9CgoudGFibGUtY29uZGVuc2VkIHRoLAoudGFibGUtY29uZGVuc2VkIHRkIHsKICBwYWRkaW5nOiA0cHggNXB4OyB9CgoudGFibGUtYm9yZGVyZWQgewogIGJvcmRlcjogMXB4IHNvbGlkICNkZGRkZGQ7CiAgYm9yZGVyLWNvbGxhcHNlOiBzZXBhcmF0ZTsKICAqYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsKICBib3JkZXItbGVmdDogMDsKICAtd2Via2l0LWJvcmRlci1yYWRpdXM6IDRweDsKICAtbW96LWJvcmRlci1yYWRpdXM6IDRweDsKICBib3JkZXItcmFkaXVzOiA0cHg7IH0KICAudGFibGUtYm9yZGVyZWQgdGgsCiAgLnRhYmxlLWJvcmRlcmVkIHRkIHsKICAgIGJvcmRlci1sZWZ0OiAxcHggc29saWQgI2RkZGRkZDsgfQogIC50YWJsZS1ib3JkZXJlZCBjYXB0aW9uICsgdGhlYWQgdHI6Zmlyc3QtY2hpbGQgdGgsCiAgLnRhYmxlLWJvcmRlcmVkIGNhcHRpb24gKyB0Ym9keSB0cjpmaXJzdC1jaGlsZCB0aCwKICAudGFibGUtYm9yZGVyZWQgY2FwdGlvbiArIHRib2R5IHRyOmZpcnN0LWNoaWxkIHRkLAogIC50YWJsZS1ib3JkZXJlZCBjb2xncm91cCArIHRoZWFkIHRyOmZpcnN0LWNoaWxkIHRoLAogIC50YWJsZS1ib3JkZXJlZCBjb2xncm91cCArIHRib2R5IHRyOmZpcnN0LWNoaWxkIHRoLAogIC50YWJsZS1ib3JkZXJlZCBjb2xncm91cCArIHRib2R5IHRyOmZpcnN0LWNoaWxkIHRkLAogIC50YWJsZS1ib3JkZXJlZCB0aGVhZDpmaXJzdC1jaGlsZCB0cjpmaXJzdC1jaGlsZCB0aCwKICAudGFibGUtYm9yZGVyZWQgdGJvZHk6Zmlyc3QtY2hpbGQgdHI6Zmlyc3QtY2hpbGQgdGgsCiAgLnRhYmxlLWJvcmRlcmVkIHRib2R5OmZpcnN0LWNoaWxkIHRyOmZpcnN0LWNoaWxkIHRkIHsKICAgIGJvcmRlci10b3A6IDA7IH0KICAudGFibGUtYm9yZGVyZWQgdGhlYWQ6Zmlyc3QtY2hpbGQgdHI6Zmlyc3QtY2hpbGQgdGg6Zmlyc3QtY2hpbGQsCiAgLnRhYmxlLWJvcmRlcmVkIHRib2R5OmZpcnN0LWNoaWxkIHRyOmZpcnN0LWNoaWxkIHRkOmZpcnN0LWNoaWxkIHsKICAgIC13ZWJraXQtYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogNHB4OwogICAgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogNHB4OwogICAgLW1vei1ib3JkZXItcmFkaXVzLXRvcGxlZnQ6IDRweDsgfQogIC50YWJsZS1ib3JkZXJlZCB0aGVhZDpmaXJzdC1jaGlsZCB0cjpmaXJzdC1jaGlsZCB0aDpsYXN0LWNoaWxkLAogIC50YWJsZS1ib3JkZXJlZCB0Ym9keTpmaXJzdC1jaGlsZCB0cjpmaXJzdC1jaGlsZCB0ZDpsYXN0LWNoaWxkIHsKICAgIC13ZWJraXQtYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6IDRweDsKICAgIGJvcmRlci10b3AtcmlnaHQtcmFkaXVzOiA0cHg7CiAgICAtbW96LWJvcmRlci1yYWRpdXMtdG9wcmlnaHQ6IDRweDsgfQogIC50YWJsZS1ib3JkZXJlZCB0aGVhZDpsYXN0LWNoaWxkIHRyOmxhc3QtY2hpbGQgdGg6Zmlyc3QtY2hpbGQsCiAgLnRhYmxlLWJvcmRlcmVkIHRib2R5Omxhc3QtY2hpbGQgdHI6bGFzdC1jaGlsZCB0ZDpmaXJzdC1jaGlsZCwKICAudGFibGUtYm9yZGVyZWQgdGZvb3Q6bGFzdC1jaGlsZCB0cjpsYXN0LWNoaWxkIHRkOmZpcnN0LWNoaWxkIHsKICAgIC13ZWJraXQtYm9yZGVyLXJhZGl1czogMCAwIDAgNHB4OwogICAgLW1vei1ib3JkZXItcmFkaXVzOiAwIDAgMCA0cHg7CiAgICBib3JkZXItcmFkaXVzOiAwIDAgMCA0cHg7CiAgICAtd2Via2l0LWJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6IDRweDsKICAgIGJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6IDRweDsKICAgIC1tb3otYm9yZGVyLXJhZGl1cy1ib3R0b21sZWZ0OiA0cHg7IH0KICAudGFibGUtYm9yZGVyZWQgdGhlYWQ6bGFzdC1jaGlsZCB0cjpsYXN0LWNoaWxkIHRoOmxhc3QtY2hpbGQsCiAgLnRhYmxlLWJvcmRlcmVkIHRib2R5Omxhc3QtY2hpbGQgdHI6bGFzdC1jaGlsZCB0ZDpsYXN0LWNoaWxkLAogIC50YWJsZS1ib3JkZXJlZCB0Zm9vdDpsYXN0LWNoaWxkIHRyOmxhc3QtY2hpbGQgdGQ6bGFzdC1jaGlsZCB7CiAgICAtd2Via2l0LWJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiA0cHg7CiAgICBib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czogNHB4OwogICAgLW1vei1ib3JkZXItcmFkaXVzLWJvdHRvbXJpZ2h0OiA0cHg7IH0KICAudGFibGUtYm9yZGVyZWQgY2FwdGlvbiArIHRoZWFkIHRyOmZpcnN0LWNoaWxkIHRoOmZpcnN0LWNoaWxkLAogIC50YWJsZS1ib3JkZXJlZCBjYXB0aW9uICsgdGJvZHkgdHI6Zmlyc3QtY2hpbGQgdGQ6Zmlyc3QtY2hpbGQsCiAgLnRhYmxlLWJvcmRlcmVkIGNvbGdyb3VwICsgdGhlYWQgdHI6Zmlyc3QtY2hpbGQgdGg6Zmlyc3QtY2hpbGQsCiAgLnRhYmxlLWJvcmRlcmVkIGNvbGdyb3VwICsgdGJvZHkgdHI6Zmlyc3QtY2hpbGQgdGQ6Zmlyc3QtY2hpbGQgewogICAgLXdlYmtpdC1ib3JkZXItdG9wLWxlZnQtcmFkaXVzOiA0cHg7CiAgICBib3JkZXItdG9wLWxlZnQtcmFkaXVzOiA0cHg7CiAgICAtbW96LWJvcmRlci1yYWRpdXMtdG9wbGVmdDogNHB4OyB9CiAgLnRhYmxlLWJvcmRlcmVkIGNhcHRpb24gKyB0aGVhZCB0cjpmaXJzdC1jaGlsZCB0aDpsYXN0LWNoaWxkLAogIC50YWJsZS1ib3JkZXJlZCBjYXB0aW9uICsgdGJvZHkgdHI6Zmlyc3QtY2hpbGQgdGQ6bGFzdC1jaGlsZCwKICAudGFibGUtYm9yZGVyZWQgY29sZ3JvdXAgKyB0aGVhZCB0cjpmaXJzdC1jaGlsZCB0aDpsYXN0LWNoaWxkLAogIC50YWJsZS1ib3JkZXJlZCBjb2xncm91cCArIHRib2R5IHRyOmZpcnN0LWNoaWxkIHRkOmxhc3QtY2hpbGQgewogICAgLXdlYmtpdC1ib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogNHB4OwogICAgYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6IDRweDsKICAgIC1tb3otYm9yZGVyLXJhZGl1cy10b3ByaWdodDogNHB4OyB9CgoudGFibGUtc3RyaXBlZCB0Ym9keSB0cjpudGgtY2hpbGQob2RkKSB0ZCwKLnRhYmxlLXN0cmlwZWQgdGJvZHkgdHI6bnRoLWNoaWxkKG9kZCkgdGggewogIGJhY2tncm91bmQtY29sb3I6ICNmOWY5Zjk7IH0KCi50YWJsZS1ob3ZlciB0Ym9keSB0cjpob3ZlciB0ZCwKLnRhYmxlLWhvdmVyIHRib2R5IHRyOmhvdmVyIHRoIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZXNtb2tlOyB9Cgp0YWJsZSB0ZFtjbGFzcyo9InNwYW4iXSwKdGFibGUgdGhbY2xhc3MqPSJzcGFuIl0sCi5yb3ctZmx1aWQgdGFibGUgdGRbY2xhc3MqPSJzcGFuIl0sCi5yb3ctZmx1aWQgdGFibGUgdGhbY2xhc3MqPSJzcGFuIl0gewogIGRpc3BsYXk6IHRhYmxlLWNlbGw7CiAgZmxvYXQ6IG5vbmU7CiAgbWFyZ2luLWxlZnQ6IDA7IH0KCi50YWJsZSB0ZC5zcGFuMSwKLnRhYmxlIHRoLnNwYW4xIHsKICBmbG9hdDogbm9uZTsKICB3aWR0aDogNDRweDsKICBtYXJnaW4tbGVmdDogMDsgfQoudGFibGUgdGQuc3BhbjIsCi50YWJsZSB0aC5zcGFuMiB7CiAgZmxvYXQ6IG5vbmU7CiAgd2lkdGg6IDEyNHB4OwogIG1hcmdpbi1sZWZ0OiAwOyB9Ci50YWJsZSB0ZC5zcGFuMywKLnRhYmxlIHRoLnNwYW4zIHsKICBmbG9hdDogbm9uZTsKICB3aWR0aDogMjA0cHg7CiAgbWFyZ2luLWxlZnQ6IDA7IH0KLnRhYmxlIHRkLnNwYW40LAoudGFibGUgdGguc3BhbjQgewogIGZsb2F0OiBub25lOwogIHdpZHRoOiAyODRweDsKICBtYXJnaW4tbGVmdDogMDsgfQoudGFibGUgdGQuc3BhbjUsCi50YWJsZSB0aC5zcGFuNSB7CiAgZmxvYXQ6IG5vbmU7CiAgd2lkdGg6IDM2NHB4OwogIG1hcmdpbi1sZWZ0OiAwOyB9Ci50YWJsZSB0ZC5zcGFuNiwKLnRhYmxlIHRoLnNwYW42IHsKICBmbG9hdDogbm9uZTsKICB3aWR0aDogNDQ0cHg7CiAgbWFyZ2luLWxlZnQ6IDA7IH0KLnRhYmxlIHRkLnNwYW43LAoudGFibGUgdGguc3BhbjcgewogIGZsb2F0OiBub25lOwogIHdpZHRoOiA1MjRweDsKICBtYXJnaW4tbGVmdDogMDsgfQoudGFibGUgdGQuc3BhbjgsCi50YWJsZSB0aC5zcGFuOCB7CiAgZmxvYXQ6IG5vbmU7CiAgd2lkdGg6IDYwNHB4OwogIG1hcmdpbi1sZWZ0OiAwOyB9Ci50YWJsZSB0ZC5zcGFuOSwKLnRhYmxlIHRoLnNwYW45IHsKICBmbG9hdDogbm9uZTsKICB3aWR0aDogNjg0cHg7CiAgbWFyZ2luLWxlZnQ6IDA7IH0KLnRhYmxlIHRkLnNwYW4xMCwKLnRhYmxlIHRoLnNwYW4xMCB7CiAgZmxvYXQ6IG5vbmU7CiAgd2lkdGg6IDc2NHB4OwogIG1hcmdpbi1sZWZ0OiAwOyB9Ci50YWJsZSB0ZC5zcGFuMTEsCi50YWJsZSB0aC5zcGFuMTEgewogIGZsb2F0OiBub25lOwogIHdpZHRoOiA4NDRweDsKICBtYXJnaW4tbGVmdDogMDsgfQoudGFibGUgdGQuc3BhbjEyLAoudGFibGUgdGguc3BhbjEyIHsKICBmbG9hdDogbm9uZTsKICB3aWR0aDogOTI0cHg7CiAgbWFyZ2luLWxlZnQ6IDA7IH0KCi50YWJsZSB0Ym9keSB0ci5zdWNjZXNzIHRkIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZGZmMGQ4OyB9Ci50YWJsZSB0Ym9keSB0ci5lcnJvciB0ZCB7CiAgYmFja2dyb3VuZC1jb2xvcjogI2NjMDAwMDsgfQoudGFibGUgdGJvZHkgdHIud2FybmluZyB0ZCB7CiAgYmFja2dyb3VuZC1jb2xvcjogI2ZjZjhlMzsgfQoudGFibGUgdGJvZHkgdHIuaW5mbyB0ZCB7CiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7IH0KCi50YWJsZS1ob3ZlciB0Ym9keSB0ci5zdWNjZXNzOmhvdmVyIHRkIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZDBlOWM2OyB9Ci50YWJsZS1ob3ZlciB0Ym9keSB0ci5lcnJvcjpob3ZlciB0ZCB7CiAgYmFja2dyb3VuZC1jb2xvcjogI2IzMDAwMDsgfQoudGFibGUtaG92ZXIgdGJvZHkgdHIud2FybmluZzpob3ZlciB0ZCB7CiAgYmFja2dyb3VuZC1jb2xvcjogI2ZhZjJjYzsgfQoudGFibGUtaG92ZXIgdGJvZHkgdHIuaW5mbzpob3ZlciB0ZCB7CiAgYmFja2dyb3VuZC1jb2xvcjogI2YyZjJmMjsgfQoKW2NsYXNzXj0iaWNvbi0iXSwKW2NsYXNzKj0iIGljb24tIl0gewogIGRpc3BsYXk6IGlubGluZS1ibG9jazsKICB3aWR0aDogMTRweDsKICBoZWlnaHQ6IDE0cHg7CiAgKm1hcmdpbi1yaWdodDogLjNlbTsKICBsaW5lLWhlaWdodDogMTRweDsKICB2ZXJ0aWNhbC1hbGlnbjogdGV4dC10b3A7CiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCIuLi8uLi8uLi9pbWFnZXMvdGhpcmQtcGFydHkvYm9vdHN0cmFwL2dseXBoaWNvbnMtaGFsZmxpbmdzLnBuZyIpOwogIGJhY2tncm91bmQtcG9zaXRpb246IDE0cHggMTRweDsKICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0OwogIG1hcmdpbi10b3A6IDFweDsgfQoKLyogV2hpdGUgaWNvbnMgd2l0aCBvcHRpb25hbCBjbGFzcywgb3Igb24gaG92ZXIvYWN0aXZlIHN0YXRlcyBvZiBjZXJ0YWluIGVsZW1lbnRzICovCi5pY29uLXdoaXRlLAoubmF2LXBpbGxzID4gLmFjdGl2ZSA+IGEgPiBbY2xhc3NePSJpY29uLSJdLAoubmF2LXBpbGxzID4gLmFjdGl2ZSA+IGEgPiBbY2xhc3MqPSIgaWNvbi0iXSwKLm5hdi1saXN0ID4gLmFjdGl2ZSA+IGEgPiBbY2xhc3NePSJpY29uLSJdLAoubmF2LWxpc3QgPiAuYWN0aXZlID4gYSA+IFtjbGFzcyo9IiBpY29uLSJdLAoubmF2YmFyLWludmVyc2UgLm5hdiA+IC5hY3RpdmUgPiBhID4gW2NsYXNzXj0iaWNvbi0iXSwKLm5hdmJhci1pbnZlcnNlIC5uYXYgPiAuYWN0aXZlID4gYSA+IFtjbGFzcyo9IiBpY29uLSJdLAouZHJvcGRvd24tbWVudSA+IGxpID4gYTpob3ZlciA+IFtjbGFzc149Imljb24tIl0sCi5kcm9wZG93bi1tZW51ID4gbGkgPiBhOmhvdmVyID4gW2NsYXNzKj0iIGljb24tIl0sCi5kcm9wZG93bi1tZW51ID4gLmFjdGl2ZSA+IGEgPiBbY2xhc3NePSJpY29uLSJdLAouZHJvcGRvd24tbWVudSA+IC5hY3RpdmUgPiBhID4gW2NsYXNzKj0iIGljb24tIl0sCi5kcm9wZG93bi1zdWJtZW51OmhvdmVyID4gYSA+IFtjbGFzc149Imljb24tIl0sCi5kcm9wZG93bi1zdWJtZW51OmhvdmVyID4gYSA+IFtjbGFzcyo9IiBpY29uLSJdIHsKICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoIi4uLy4uLy4uL2ltYWdlcy90aGlyZC1wYXJ0eS9ib290c3RyYXAvZ2x5cGhpY29ucy1oYWxmbGluZ3Mtd2hpdGUucG5nIik7IH0KCi5pY29uLWdsYXNzIHsKICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAwICAgICAgMDsgfQoKLmljb24tbXVzaWMgewogIGJhY2tncm91bmQtcG9zaXRpb246IC0yNHB4IDA7IH0KCi5pY29uLXNlYXJjaCB7CiAgYmFja2dyb3VuZC1wb3NpdGlvbjogLTQ4cHggMDsgfQoKLmljb24tZW52ZWxvcGUgewogIGJhY2tncm91bmQtcG9zaXRpb246IC03MnB4IDA7IH0KCi5pY29uLWhlYXJ0IHsKICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtOTZweCAwOyB9CgouaWNvbi1zdGFyIHsKICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtMTIwcHggMDsgfQoKLmljb24tc3Rhci1lbXB0eSB7CiAgYmFja2dyb3VuZC1wb3NpdGlvbjogLTE0NHB4IDA7IH0KCi5pY29uLXVzZXIgewogIGJhY2tncm91bmQtcG9zaXRpb246IC0xNjhweCAwOyB9CgouaWNvbi1maWxtIHsKICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtMTkycHggMDsgfQoKLmljb24tdGgtbGFyZ2UgewogIGJhY2tncm91bmQtcG9zaXRpb246IC0yMTZweCAwOyB9CgouaWNvbi10aCB7CiAgYmFja2dyb3VuZC1wb3NpdGlvbjogLTI0MHB4IDA7IH0KCi5pY29uLXRoLWxpc3QgewogIGJhY2tncm91bmQtcG9zaXRpb246IC0yNjRweCAwOyB9CgouaWNvbi1vayB7CiAgYmFja2dyb3VuZC1wb3NpdGlvbjogLTI4OHB4IDA7IH0KCi5pY29uLXJlbW92ZSB7CiAgYmFja2dyb3VuZC1wb3NpdGlvbjogLTMxMnB4IDA7IH0KCi5pY29uLXpvb20taW4gewogIGJhY2tncm91bmQtcG9zaXRpb246IC0zMzZweCAwOyB9CgouaWNvbi16b29tLW91dCB7CiAgYmFja2dyb3VuZC1wb3NpdGlvbjogLTM2MHB4IDA7IH0KCi5pY29uLW9mZiB7CiAgYmFja2dyb3VuZC1wb3NpdGlvbjogLTM4NHB4IDA7IH0KCi5pY29uLXNpZ25hbCB7CiAgYmFja2dyb3VuZC1wb3NpdGlvbjogLTQwOHB4IDA7IH0KCi5pY29uLWNvZyB7CiAgYmFja2dyb3VuZC1wb3NpdGlvbjogLTQzMnB4IDA7IH0KCi5pY29uLXRyYXNoIHsKICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtNDU2cHggMDsgfQoKLmljb24taG9tZSB7CiAgYmFja2dyb3VuZC1wb3NpdGlvbjogMCAtMjRweDsgfQoKLmljb24tZmlsZSB7CiAgYmFja2dyb3VuZC1wb3NpdGlvbjogLTI0cHggLTI0cHg7IH0KCi5pY29uLXRpbWUgewogIGJhY2tncm91bmQtcG9zaXRpb246IC00OHB4IC0yNHB4OyB9CgouaWNvbi1yb2FkIHsKICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtNzJweCAtMjRweDsgfQoKLmljb24tZG93bmxvYWQtYWx0IHsKICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtOTZweCAtMjRweDsgfQoKLmljb24tZG93bmxvYWQgewogIGJhY2tncm91bmQtcG9zaXRpb246IC0xMjBweCAtMjRweDsgfQoKLmljb24tdXBsb2FkIHsKICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtMTQ0cHggLTI0cHg7IH0KCi5pY29uLWluYm94IHsKICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtMTY4cHggLTI0cHg7IH0KCi5pY29uLXBsYXktY2lyY2xlIHsKICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtMTkycHggLTI0cHg7IH0KCi5pY29uLXJlcGVhdCB7CiAgYmFja2dyb3VuZC1wb3NpdGlvbjogLTIxNnB4IC0yNHB4OyB9CgouaWNvbi1yZWZyZXNoIHsKICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtMjQwcHggLTI0cHg7IH0KCi5pY29uLWxpc3QtYWx0IHsKICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtMjY0cHggLTI0cHg7IH0KCi5pY29uLWxvY2sgewogIGJhY2tncm91bmQtcG9zaXRpb246IC0yODdweCAtMjRweDsgfQoKLmljb24tZmxhZyB7CiAgYmFja2dyb3VuZC1wb3NpdGlvbjogLTMxMnB4IC0yNHB4OyB9CgouaWNvbi1oZWFkcGhvbmVzIHsKICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtMzM2cHggLTI0cHg7IH0KCi5pY29uLXZvbHVtZS1vZmYgewogIGJhY2tncm91bmQtcG9zaXRpb246IC0zNjBweCAtMjRweDsgfQoKLmljb24tdm9sdW1lLWRvd24gewogIGJhY2tncm91bmQtcG9zaXRpb246IC0zODRweCAtMjRweDsgfQoKLmljb24tdm9sdW1lLXVwIHsKICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtNDA4cHggLTI0cHg7IH0KCi5pY29uLXFyY29kZSB7CiAgYmFja2dyb3VuZC1wb3NpdGlvbjogLTQzMnB4IC0yNHB4OyB9CgouaWNvbi1iYXJjb2RlIHsKICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtNDU2cHggLTI0cHg7IH0KCi5pY29uLXRhZyB7CiAgYmFja2dyb3VuZC1wb3NpdGlvbjogMCAtNDhweDsgfQoKLmljb24tdGFncyB7CiAgYmFja2dyb3VuZC1wb3NpdGlvbjogLTI1cHggLTQ4cHg7IH0KCi5pY29uLWJvb2sgewogIGJhY2tncm91bmQtcG9zaXRpb246IC00OHB4IC00OHB4OyB9CgouaWNvbi1ib29rbWFyayB7CiAgYmFja2dyb3VuZC1wb3NpdGlvbjogLTcycHggLTQ4cHg7IH0KCi5pY29uLXByaW50IHsKICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtOTZweCAtNDhweDsgfQoKLmljb24tY2FtZXJhIHsKICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtMTIwcHggLTQ4cHg7IH0KCi5pY29uLWZvbnQgewogIGJhY2tncm91bmQtcG9zaXRpb246IC0xNDRweCAtNDhweDsgfQoKLmljb24tYm9sZCB7CiAgYmFja2dyb3VuZC1wb3NpdGlvbjogLTE2N3B4IC00OHB4OyB9CgouaWNvbi1pdGFsaWMgewogIGJhY2tncm91bmQtcG9zaXRpb246IC0xOTJweCAtNDhweDsgfQoKLmljb24tdGV4dC1oZWlnaHQgewogIGJhY2tncm91bmQtcG9zaXRpb246IC0yMTZweCAtNDhweDsgfQoKLmljb24tdGV4dC13aWR0aCB7CiAgYmFja2dyb3VuZC1wb3NpdGlvbjogLTI0MHB4IC00OHB4OyB9CgouaWNvbi1hbGlnbi1sZWZ0IHsKICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtMjY0cHggLTQ4cHg7IH0KCi5pY29uLWFsaWduLWNlbnRlciB7CiAgYmFja2dyb3VuZC1wb3NpdGlvbjogLTI4OHB4IC00OHB4OyB9CgouaWNvbi1hbGlnbi1yaWdodCB7CiAgYmFja2dyb3VuZC1wb3NpdGlvbjogLTMxMnB4IC00OHB4OyB9CgouaWNvbi1hbGlnbi1qdXN0aWZ5IHsKICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtMzM2cHggLTQ4cHg7IH0KCi5pY29uLWxpc3QgewogIGJhY2tncm91bmQtcG9zaXRpb246IC0zNjBweCAtNDhweDsgfQoKLmljb24taW5kZW50LWxlZnQgewogIGJhY2tncm91bmQtcG9zaXRpb246IC0zODRweCAtNDhweDsgfQoKLmljb24taW5kZW50LXJpZ2h0IHsKICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtNDA4cHggLTQ4cHg7IH0KCi5pY29uLWZhY2V0aW1lLXZpZGVvIHsKICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtNDMycHggLTQ4cHg7IH0KCi5pY29uLXBpY3R1cmUgewogIGJhY2tncm91bmQtcG9zaXRpb246IC00NTZweCAtNDhweDsgfQoKLmljb24tcGVuY2lsIHsKICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAwIC03MnB4OyB9CgouaWNvbi1tYXAtbWFya2VyIHsKICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtMjRweCAtNzJweDsgfQoKLmljb24tYWRqdXN0IHsKICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtNDhweCAtNzJweDsgfQoKLmljb24tdGludCB7CiAgYmFja2dyb3VuZC1wb3NpdGlvbjogLTcycHggLTcycHg7IH0KCi5pY29uLWVkaXQgewogIGJhY2tncm91bmQtcG9zaXRpb246IC05NnB4IC03MnB4OyB9CgouaWNvbi1zaGFyZSB7CiAgYmFja2dyb3VuZC1wb3NpdGlvbjogLTEyMHB4IC03MnB4OyB9CgouaWNvbi1jaGVjayB7CiAgYmFja2dyb3VuZC1wb3NpdGlvbjogLTE0NHB4IC03MnB4OyB9CgouaWNvbi1tb3ZlIHsKICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtMTY4cHggLTcycHg7IH0KCi5pY29uLXN0ZXAtYmFja3dhcmQgewogIGJhY2tncm91bmQtcG9zaXRpb246IC0xOTJweCAtNzJweDsgfQoKLmljb24tZmFzdC1iYWNrd2FyZCB7CiAgYmFja2dyb3VuZC1wb3NpdGlvbjogLTIxNnB4IC03MnB4OyB9CgouaWNvbi1iYWNrd2FyZCB7CiAgYmFja2dyb3VuZC1wb3NpdGlvbjogLTI0MHB4IC03MnB4OyB9CgouaWNvbi1wbGF5IHsKICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtMjY0cHggLTcycHg7IH0KCi5pY29uLXBhdXNlIHsKICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtMjg4cHggLTcycHg7IH0KCi5pY29uLXN0b3AgewogIGJhY2tncm91bmQtcG9zaXRpb246IC0zMTJweCAtNzJweDsgfQoKLmljb24tZm9yd2FyZCB7CiAgYmFja2dyb3VuZC1wb3NpdGlvbjogLTMzNnB4IC03MnB4OyB9CgouaWNvbi1mYXN0LWZvcndhcmQgewogIGJhY2tncm91bmQtcG9zaXRpb246IC0zNjBweCAtNzJweDsgfQoKLmljb24tc3RlcC1mb3J3YXJkIHsKICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtMzg0cHggLTcycHg7IH0KCi5pY29uLWVqZWN0IHsKICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtNDA4cHggLTcycHg7IH0KCi5pY29uLWNoZXZyb24tbGVmdCB7CiAgYmFja2dyb3VuZC1wb3NpdGlvbjogLTQzMnB4IC03MnB4OyB9CgouaWNvbi1jaGV2cm9uLXJpZ2h0IHsKICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtNDU2cHggLTcycHg7IH0KCi5pY29uLXBsdXMtc2lnbiB7CiAgYmFja2dyb3VuZC1wb3NpdGlvbjogMCAtOTZweDsgfQoKLmljb24tbWludXMtc2lnbiB7CiAgYmFja2dyb3VuZC1wb3NpdGlvbjogLTI0cHggLTk2cHg7IH0KCi5pY29uLXJlbW92ZS1zaWduIHsKICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtNDhweCAtOTZweDsgfQoKLmljb24tb2stc2lnbiB7CiAgYmFja2dyb3VuZC1wb3NpdGlvbjogLTcycHggLTk2cHg7IH0KCi5pY29uLXF1ZXN0aW9uLXNpZ24gewogIGJhY2tncm91bmQtcG9zaXRpb246IC05NnB4IC05NnB4OyB9CgouaWNvbi1pbmZvLXNpZ24gewogIGJhY2tncm91bmQtcG9zaXRpb246IC0xMjBweCAtOTZweDsgfQoKLmljb24tc2NyZWVuc2hvdCB7CiAgYmFja2dyb3VuZC1wb3NpdGlvbjogLTE0NHB4IC05NnB4OyB9CgouaWNvbi1yZW1vdmUtY2lyY2xlIHsKICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtMTY4cHggLTk2cHg7IH0KCi5pY29uLW9rLWNpcmNsZSB7CiAgYmFja2dyb3VuZC1wb3NpdGlvbjogLTE5MnB4IC05NnB4OyB9CgouaWNvbi1iYW4tY2lyY2xlIHsKICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtMjE2cHggLTk2cHg7IH0KCi5pY29uLWFycm93LWxlZnQgewogIGJhY2tncm91bmQtcG9zaXRpb246IC0yNDBweCAtOTZweDsgfQoKLmljb24tYXJyb3ctcmlnaHQgewogIGJhY2tncm91bmQtcG9zaXRpb246IC0yNjRweCAtOTZweDsgfQoKLmljb24tYXJyb3ctdXAgewogIGJhY2tncm91bmQtcG9zaXRpb246IC0yODlweCAtOTZweDsgfQoKLmljb24tYXJyb3ctZG93biB7CiAgYmFja2dyb3VuZC1wb3NpdGlvbjogLTMxMnB4IC05NnB4OyB9CgouaWNvbi1zaGFyZS1hbHQgewogIGJhY2tncm91bmQtcG9zaXRpb246IC0zMzZweCAtOTZweDsgfQoKLmljb24tcmVzaXplLWZ1bGwgewogIGJhY2tncm91bmQtcG9zaXRpb246IC0zNjBweCAtOTZweDsgfQoKLmljb24tcmVzaXplLXNtYWxsIHsKICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtMzg0cHggLTk2cHg7IH0KCi5pY29uLXBsdXMgewogIGJhY2tncm91bmQtcG9zaXRpb246IC00MDhweCAtOTZweDsgfQoKLmljb24tbWludXMgewogIGJhY2tncm91bmQtcG9zaXRpb246IC00MzNweCAtOTZweDsgfQoKLmljb24tYXN0ZXJpc2sgewogIGJhY2tncm91bmQtcG9zaXRpb246IC00NTZweCAtOTZweDsgfQoKLmljb24tZXhjbGFtYXRpb24tc2lnbiB7CiAgYmFja2dyb3VuZC1wb3NpdGlvbjogMCAtMTIwcHg7IH0KCi5pY29uLWdpZnQgewogIGJhY2tncm91bmQtcG9zaXRpb246IC0yNHB4IC0xMjBweDsgfQoKLmljb24tbGVhZiB7CiAgYmFja2dyb3VuZC1wb3NpdGlvbjogLTQ4cHggLTEyMHB4OyB9CgouaWNvbi1maXJlIHsKICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtNzJweCAtMTIwcHg7IH0KCi5pY29uLWV5ZS1vcGVuIHsKICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtOTZweCAtMTIwcHg7IH0KCi5pY29uLWV5ZS1jbG9zZSB7CiAgYmFja2dyb3VuZC1wb3NpdGlvbjogLTEyMHB4IC0xMjBweDsgfQoKLmljb24td2FybmluZy1zaWduIHsKICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtMTQ0cHggLTEyMHB4OyB9CgouaWNvbi1wbGFuZSB7CiAgYmFja2dyb3VuZC1wb3NpdGlvbjogLTE2OHB4IC0xMjBweDsgfQoKLmljb24tY2FsZW5kYXIgewogIGJhY2tncm91bmQtcG9zaXRpb246IC0xOTJweCAtMTIwcHg7IH0KCi5pY29uLXJhbmRvbSB7CiAgYmFja2dyb3VuZC1wb3NpdGlvbjogLTIxNnB4IC0xMjBweDsKICB3aWR0aDogMTZweDsgfQoKLmljb24tY29tbWVudCB7CiAgYmFja2dyb3VuZC1wb3NpdGlvbjogLTI0MHB4IC0xMjBweDsgfQoKLmljb24tbWFnbmV0IHsKICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtMjY0cHggLTEyMHB4OyB9CgouaWNvbi1jaGV2cm9uLXVwIHsKICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtMjg4cHggLTEyMHB4OyB9CgouaWNvbi1jaGV2cm9uLWRvd24gewogIGJhY2tncm91bmQtcG9zaXRpb246IC0zMTNweCAtMTE5cHg7IH0KCi5pY29uLXJldHdlZXQgewogIGJhY2tncm91bmQtcG9zaXRpb246IC0zMzZweCAtMTIwcHg7IH0KCi5pY29uLXNob3BwaW5nLWNhcnQgewogIGJhY2tncm91bmQtcG9zaXRpb246IC0zNjBweCAtMTIwcHg7IH0KCi5pY29uLWZvbGRlci1jbG9zZSB7CiAgYmFja2dyb3VuZC1wb3NpdGlvbjogLTM4NHB4IC0xMjBweDsgfQoKLmljb24tZm9sZGVyLW9wZW4gewogIGJhY2tncm91bmQtcG9zaXRpb246IC00MDhweCAtMTIwcHg7CiAgd2lkdGg6IDE2cHg7IH0KCi5pY29uLXJlc2l6ZS12ZXJ0aWNhbCB7CiAgYmFja2dyb3VuZC1wb3NpdGlvbjogLTQzMnB4IC0xMTlweDsgfQoKLmljb24tcmVzaXplLWhvcml6b250YWwgewogIGJhY2tncm91bmQtcG9zaXRpb246IC00NTZweCAtMTE4cHg7IH0KCi5pY29uLWhkZCB7CiAgYmFja2dyb3VuZC1wb3NpdGlvbjogMCAtMTQ0cHg7IH0KCi5pY29uLWJ1bGxob3JuIHsKICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtMjRweCAtMTQ0cHg7IH0KCi5pY29uLWJlbGwgewogIGJhY2tncm91bmQtcG9zaXRpb246IC00OHB4IC0xNDRweDsgfQoKLmljb24tY2VydGlmaWNhdGUgewogIGJhY2tncm91bmQtcG9zaXRpb246IC03MnB4IC0xNDRweDsgfQoKLmljb24tdGh1bWJzLXVwIHsKICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtOTZweCAtMTQ0cHg7IH0KCi5pY29uLXRodW1icy1kb3duIHsKICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtMTIwcHggLTE0NHB4OyB9CgouaWNvbi1oYW5kLXJpZ2h0IHsKICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtMTQ0cHggLTE0NHB4OyB9CgouaWNvbi1oYW5kLWxlZnQgewogIGJhY2tncm91bmQtcG9zaXRpb246IC0xNjhweCAtMTQ0cHg7IH0KCi5pY29uLWhhbmQtdXAgewogIGJhY2tncm91bmQtcG9zaXRpb246IC0xOTJweCAtMTQ0cHg7IH0KCi5pY29uLWhhbmQtZG93biB7CiAgYmFja2dyb3VuZC1wb3NpdGlvbjogLTIxNnB4IC0xNDRweDsgfQoKLmljb24tY2lyY2xlLWFycm93LXJpZ2h0IHsKICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtMjQwcHggLTE0NHB4OyB9CgouaWNvbi1jaXJjbGUtYXJyb3ctbGVmdCB7CiAgYmFja2dyb3VuZC1wb3NpdGlvbjogLTI2NHB4IC0xNDRweDsgfQoKLmljb24tY2lyY2xlLWFycm93LXVwIHsKICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtMjg4cHggLTE0NHB4OyB9CgouaWNvbi1jaXJjbGUtYXJyb3ctZG93biB7CiAgYmFja2dyb3VuZC1wb3NpdGlvbjogLTMxMnB4IC0xNDRweDsgfQoKLmljb24tZ2xvYmUgewogIGJhY2tncm91bmQtcG9zaXRpb246IC0zMzZweCAtMTQ0cHg7IH0KCi5pY29uLXdyZW5jaCB7CiAgYmFja2dyb3VuZC1wb3NpdGlvbjogLTM2MHB4IC0xNDRweDsgfQoKLmljb24tdGFza3MgewogIGJhY2tncm91bmQtcG9zaXRpb246IC0zODRweCAtMTQ0cHg7IH0KCi5pY29uLWZpbHRlciB7CiAgYmFja2dyb3VuZC1wb3NpdGlvbjogLTQwOHB4IC0xNDRweDsgfQoKLmljb24tYnJpZWZjYXNlIHsKICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtNDMycHggLTE0NHB4OyB9CgouaWNvbi1mdWxsc2NyZWVuIHsKICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtNDU2cHggLTE0NHB4OyB9CgouZHJvcHVwLAouZHJvcGRvd24gewogIHBvc2l0aW9uOiByZWxhdGl2ZTsgfQoKLmRyb3Bkb3duLXRvZ2dsZSB7CiAgKm1hcmdpbi1ib3R0b206IC0zcHg7IH0KCi5kcm9wZG93bi10b2dnbGU6YWN0aXZlLAoub3BlbiAuZHJvcGRvd24tdG9nZ2xlIHsKICBvdXRsaW5lOiAwOyB9CgouY2FyZXQgewogIGRpc3BsYXk6IGlubGluZS1ibG9jazsKICB3aWR0aDogMDsKICBoZWlnaHQ6IDA7CiAgdmVydGljYWwtYWxpZ246IHRvcDsKICBib3JkZXItdG9wOiA0cHggc29saWQgYmxhY2s7CiAgYm9yZGVyLXJpZ2h0OiA0cHggc29saWQgdHJhbnNwYXJlbnQ7CiAgYm9yZGVyLWxlZnQ6IDRweCBzb2xpZCB0cmFuc3BhcmVudDsKICBjb250ZW50OiAiIjsgfQoKLmRyb3Bkb3duIC5jYXJldCB7CiAgbWFyZ2luLXRvcDogOHB4OwogIG1hcmdpbi1sZWZ0OiAycHg7IH0KCi5kcm9wZG93bi1tZW51IHsKICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgdG9wOiAxMDAlOwogIGxlZnQ6IDA7CiAgei1pbmRleDogMTAwMDsKICBkaXNwbGF5OiBub25lOwogIGZsb2F0OiBsZWZ0OwogIG1pbi13aWR0aDogMTYwcHg7CiAgcGFkZGluZzogNXB4IDA7CiAgbWFyZ2luOiAycHggMCAwOwogIGxpc3Qtc3R5bGU6IG5vbmU7CiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7CiAgYm9yZGVyOiAxcHggc29saWQgI2NjYzsKICBib3JkZXI6IDFweCBzb2xpZCByZ2JhKDAsIDAsIDAsIDAuMik7CiAgKmJvcmRlci1yaWdodC13aWR0aDogMnB4OwogICpib3JkZXItYm90dG9tLXdpZHRoOiAycHg7CiAgLXdlYmtpdC1ib3JkZXItcmFkaXVzOiA2cHg7CiAgLW1vei1ib3JkZXItcmFkaXVzOiA2cHg7CiAgYm9yZGVyLXJhZGl1czogNnB4OwogIC13ZWJraXQtYm94LXNoYWRvdzogMCA1cHggMTBweCByZ2JhKDAsIDAsIDAsIDAuMik7CiAgLW1vei1ib3gtc2hhZG93OiAwIDVweCAxMHB4IHJnYmEoMCwgMCwgMCwgMC4yKTsKICBib3gtc2hhZG93OiAwIDVweCAxMHB4IHJnYmEoMCwgMCwgMCwgMC4yKTsKICAtd2Via2l0LWJhY2tncm91bmQtY2xpcDogcGFkZGluZy1ib3g7CiAgLW1vei1iYWNrZ3JvdW5kLWNsaXA6IHBhZGRpbmc7CiAgYmFja2dyb3VuZC1jbGlwOiBwYWRkaW5nLWJveDsgfQogIC5kcm9wZG93bi1tZW51LnB1bGwtcmlnaHQgewogICAgcmlnaHQ6IDA7CiAgICBsZWZ0OiBhdXRvOyB9CiAgLmRyb3Bkb3duLW1lbnUgLmRpdmlkZXIgewogICAgKndpZHRoOiAxMDAlOwogICAgaGVpZ2h0OiAxcHg7CiAgICBtYXJnaW46IDlweCAxcHg7CiAgICAqbWFyZ2luOiAtNXB4IDAgNXB4OwogICAgb3ZlcmZsb3c6IGhpZGRlbjsKICAgIGJhY2tncm91bmQtY29sb3I6ICNlNWU1ZTU7CiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgd2hpdGU7IH0KICAuZHJvcGRvd24tbWVudSBsaSA+IGEgewogICAgZGlzcGxheTogYmxvY2s7CiAgICBwYWRkaW5nOiAzcHggMjBweDsKICAgIGNsZWFyOiBib3RoOwogICAgZm9udC13ZWlnaHQ6IG5vcm1hbDsKICAgIGxpbmUtaGVpZ2h0OiAyMHB4OwogICAgY29sb3I6ICMzMzMzMzM7CiAgICB3aGl0ZS1zcGFjZTogbm93cmFwOyB9CgouZHJvcGRvd24tbWVudSBsaSA+IGE6aG92ZXIsCi5kcm9wZG93bi1tZW51IGxpID4gYTpmb2N1cywKLmRyb3Bkb3duLXN1Ym1lbnU6aG92ZXIgPiBhIHsKICB0ZXh0LWRlY29yYXRpb246IG5vbmU7CiAgY29sb3I6IHdoaXRlOwogIGJhY2tncm91bmQtY29sb3I6ICMwMDgxYzI7CiAgYmFja2dyb3VuZC1pbWFnZTogLW1vei1saW5lYXItZ3JhZGllbnQodG9wLCAjMDA4OGNjLCAjMDA3N2IzKTsKICBiYWNrZ3JvdW5kLWltYWdlOiAtd2Via2l0LWdyYWRpZW50KGxpbmVhciwgMCAwLCAwIDEwMCUsIGZyb20oIzAwODhjYyksIHRvKCMwMDc3YjMpKTsKICBiYWNrZ3JvdW5kLWltYWdlOiAtd2Via2l0LWxpbmVhci1ncmFkaWVudCh0b3AsICMwMDg4Y2MsICMwMDc3YjMpOwogIGJhY2tncm91bmQtaW1hZ2U6IC1vLWxpbmVhci1ncmFkaWVudCh0b3AsICMwMDg4Y2MsICMwMDc3YjMpOwogIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCh0byBib3R0b20sICMwMDg4Y2MsICMwMDc3YjMpOwogIGJhY2tncm91bmQtcmVwZWF0OiByZXBlYXQteDsKICBmaWx0ZXI6IHByb2dpZDpEWEltYWdlVHJhbnNmb3JtLk1pY3Jvc29mdC5ncmFkaWVudChzdGFydENvbG9yc3RyPScjRkYwMDg4Q0MnLCBlbmRDb2xvcnN0cj0nI0ZGMDA3N0IzJywgR3JhZGllbnRUeXBlPTApOyB9CgouZHJvcGRvd24tbWVudSAuYWN0aXZlID4gYSwKLmRyb3Bkb3duLW1lbnUgLmFjdGl2ZSA+IGE6aG92ZXIgewogIGNvbG9yOiAjMzMzMzMzOwogIHRleHQtZGVjb3JhdGlvbjogbm9uZTsKICBvdXRsaW5lOiAwOwogIGJhY2tncm91bmQtY29sb3I6ICMwMDgxYzI7CiAgYmFja2dyb3VuZC1pbWFnZTogLW1vei1saW5lYXItZ3JhZGllbnQodG9wLCAjMDA4OGNjLCAjMDA3N2IzKTsKICBiYWNrZ3JvdW5kLWltYWdlOiAtd2Via2l0LWdyYWRpZW50KGxpbmVhciwgMCAwLCAwIDEwMCUsIGZyb20oIzAwODhjYyksIHRvKCMwMDc3YjMpKTsKICBiYWNrZ3JvdW5kLWltYWdlOiAtd2Via2l0LWxpbmVhci1ncmFkaWVudCh0b3AsICMwMDg4Y2MsICMwMDc3YjMpOwogIGJhY2tncm91bmQtaW1hZ2U6IC1vLWxpbmVhci1ncmFkaWVudCh0b3AsICMwMDg4Y2MsICMwMDc3YjMpOwogIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCh0byBib3R0b20sICMwMDg4Y2MsICMwMDc3YjMpOwogIGJhY2tncm91bmQtcmVwZWF0OiByZXBlYXQteDsKICBmaWx0ZXI6IHByb2dpZDpEWEltYWdlVHJhbnNmb3JtLk1pY3Jvc29mdC5ncmFkaWVudChzdGFydENvbG9yc3RyPScjRkYwMDg4Q0MnLCBlbmRDb2xvcnN0cj0nI0ZGMDA3N0IzJywgR3JhZGllbnRUeXBlPTApOyB9CgouZHJvcGRvd24tbWVudSAuZGlzYWJsZWQgPiBhLAouZHJvcGRvd24tbWVudSAuZGlzYWJsZWQgPiBhOmhvdmVyIHsKICBjb2xvcjogIzk5OTk5OTsgfQoKLmRyb3Bkb3duLW1lbnUgLmRpc2FibGVkID4gYTpob3ZlciB7CiAgdGV4dC1kZWNvcmF0aW9uOiBub25lOwogIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50OwogIGJhY2tncm91bmQtaW1hZ2U6IG5vbmU7CiAgY3Vyc29yOiBkZWZhdWx0OyB9Cgoub3BlbiB7CiAgKnotaW5kZXg6IDEwMDA7IH0KICAub3BlbiA+IC5kcm9wZG93bi1tZW51IHsKICAgIGRpc3BsYXk6IGJsb2NrOyB9CgoucHVsbC1yaWdodCA+IC5kcm9wZG93bi1tZW51IHsKICByaWdodDogMDsKICBsZWZ0OiBhdXRvOyB9CgouZHJvcHVwIC5jYXJldCwKLm5hdmJhci1maXhlZC1ib3R0b20gLmRyb3Bkb3duIC5jYXJldCB7CiAgYm9yZGVyLXRvcDogMDsKICBib3JkZXItYm90dG9tOiA0cHggc29saWQgYmxhY2s7CiAgY29udGVudDogIiI7IH0KLmRyb3B1cCAuZHJvcGRvd24tbWVudSwKLm5hdmJhci1maXhlZC1ib3R0b20gLmRyb3Bkb3duIC5kcm9wZG93bi1tZW51IHsKICB0b3A6IGF1dG87CiAgYm90dG9tOiAxMDAlOwogIG1hcmdpbi1ib3R0b206IDFweDsgfQoKLmRyb3Bkb3duLXN1Ym1lbnUgewogIHBvc2l0aW9uOiByZWxhdGl2ZTsgfQoKLmRyb3Bkb3duLXN1Ym1lbnUgPiAuZHJvcGRvd24tbWVudSB7CiAgdG9wOiAwOwogIGxlZnQ6IDEwMCU7CiAgbWFyZ2luLXRvcDogLTZweDsKICBtYXJnaW4tbGVmdDogLTFweDsKICAtd2Via2l0LWJvcmRlci1yYWRpdXM6IDAgNnB4IDZweCA2cHg7CiAgLW1vei1ib3JkZXItcmFkaXVzOiAwIDZweCA2cHggNnB4OwogIGJvcmRlci1yYWRpdXM6IDAgNnB4IDZweCA2cHg7IH0KCi5kcm9wZG93bi1zdWJtZW51OmhvdmVyID4gLmRyb3Bkb3duLW1lbnUgewogIGRpc3BsYXk6IGJsb2NrOyB9CgouZHJvcHVwIC5kcm9wZG93bi1zdWJtZW51ID4gLmRyb3Bkb3duLW1lbnUgewogIHRvcDogYXV0bzsKICBib3R0b206IDA7CiAgbWFyZ2luLXRvcDogMDsKICBtYXJnaW4tYm90dG9tOiAtMnB4OwogIC13ZWJraXQtYm9yZGVyLXJhZGl1czogNXB4IDVweCA1cHggMDsKICAtbW96LWJvcmRlci1yYWRpdXM6IDVweCA1cHggNXB4IDA7CiAgYm9yZGVyLXJhZGl1czogNXB4IDVweCA1cHggMDsgfQoKLmRyb3Bkb3duLXN1Ym1lbnUgPiBhOmFmdGVyIHsKICBkaXNwbGF5OiBibG9jazsKICBjb250ZW50OiAiICI7CiAgZmxvYXQ6IHJpZ2h0OwogIHdpZHRoOiAwOwogIGhlaWdodDogMDsKICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50OwogIGJvcmRlci1zdHlsZTogc29saWQ7CiAgYm9yZGVyLXdpZHRoOiA1cHggMCA1cHggNXB4OwogIGJvcmRlci1sZWZ0LWNvbG9yOiAjY2NjY2NjOwogIG1hcmdpbi10b3A6IDVweDsKICBtYXJnaW4tcmlnaHQ6IC0xMHB4OyB9CgouZHJvcGRvd24tc3VibWVudTpob3ZlciA+IGE6YWZ0ZXIgewogIGJvcmRlci1sZWZ0LWNvbG9yOiB3aGl0ZTsgfQoKLmRyb3Bkb3duLXN1Ym1lbnUucHVsbC1sZWZ0IHsKICBmbG9hdDogbm9uZTsgfQogIC5kcm9wZG93bi1zdWJtZW51LnB1bGwtbGVmdCA+IC5kcm9wZG93bi1tZW51IHsKICAgIGxlZnQ6IC0xMDAlOwogICAgbWFyZ2luLWxlZnQ6IDEwcHg7CiAgICAtd2Via2l0LWJvcmRlci1yYWRpdXM6IDZweCAwIDZweCA2cHg7CiAgICAtbW96LWJvcmRlci1yYWRpdXM6IDZweCAwIDZweCA2cHg7CiAgICBib3JkZXItcmFkaXVzOiA2cHggMCA2cHggNnB4OyB9CgouZHJvcGRvd24gLmRyb3Bkb3duLW1lbnUgLm5hdi1oZWFkZXIgewogIHBhZGRpbmctbGVmdDogMjBweDsKICBwYWRkaW5nLXJpZ2h0OiAyMHB4OyB9CgoudHlwZWFoZWFkIHsKICBtYXJnaW4tdG9wOiAycHg7CiAgLXdlYmtpdC1ib3JkZXItcmFkaXVzOiA0cHg7CiAgLW1vei1ib3JkZXItcmFkaXVzOiA0cHg7CiAgYm9yZGVyLXJhZGl1czogNHB4OyB9Cgoud2VsbCB7CiAgbWluLWhlaWdodDogMjBweDsKICBwYWRkaW5nOiAxOXB4OwogIG1hcmdpbi1ib3R0b206IDIwcHg7CiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGVzbW9rZTsKICBib3JkZXI6IDFweCBzb2xpZCAjZTNlM2UzOwogIC13ZWJraXQtYm9yZGVyLXJhZGl1czogNHB4OwogIC1tb3otYm9yZGVyLXJhZGl1czogNHB4OwogIGJvcmRlci1yYWRpdXM6IDRweDsKICAtd2Via2l0LWJveC1zaGFkb3c6IGluc2V0IDAgMXB4IDFweCByZ2JhKDAsIDAsIDAsIDAuMDUpOwogIC1tb3otYm94LXNoYWRvdzogaW5zZXQgMCAxcHggMXB4IHJnYmEoMCwgMCwgMCwgMC4wNSk7CiAgYm94LXNoYWRvdzogaW5zZXQgMCAxcHggMXB4IHJnYmEoMCwgMCwgMCwgMC4wNSk7IH0KICAud2VsbCBibG9ja3F1b3RlIHsKICAgIGJvcmRlci1jb2xvcjogI2RkZDsKICAgIGJvcmRlci1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjE1KTsgfQoKLndlbGwtbGFyZ2UgewogIHBhZGRpbmc6IDI0cHg7CiAgLXdlYmtpdC1ib3JkZXItcmFkaXVzOiA2cHg7CiAgLW1vei1ib3JkZXItcmFkaXVzOiA2cHg7CiAgYm9yZGVyLXJhZGl1czogNnB4OyB9Cgoud2VsbC1zbWFsbCB7CiAgcGFkZGluZzogOXB4OwogIC13ZWJraXQtYm9yZGVyLXJhZGl1czogM3B4OwogIC1tb3otYm9yZGVyLXJhZGl1czogM3B4OwogIGJvcmRlci1yYWRpdXM6IDNweDsgfQoKLmZhZGUgewogIG9wYWNpdHk6IDA7CiAgLXdlYmtpdC10cmFuc2l0aW9uOiBvcGFjaXR5IDAuMTVzIGxpbmVhcjsKICAtbW96LXRyYW5zaXRpb246IG9wYWNpdHkgMC4xNXMgbGluZWFyOwogIC1vLXRyYW5zaXRpb246IG9wYWNpdHkgMC4xNXMgbGluZWFyOwogIHRyYW5zaXRpb246IG9wYWNpdHkgMC4xNXMgbGluZWFyOyB9CiAgLmZhZGUuaW4gewogICAgb3BhY2l0eTogMTsgfQoKLmNvbGxhcHNlIHsKICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgaGVpZ2h0OiAwOwogIG92ZXJmbG93OiBoaWRkZW47CiAgLXdlYmtpdC10cmFuc2l0aW9uOiBoZWlnaHQgMC4zNXMgZWFzZTsKICAtbW96LXRyYW5zaXRpb246IGhlaWdodCAwLjM1cyBlYXNlOwogIC1vLXRyYW5zaXRpb246IGhlaWdodCAwLjM1cyBlYXNlOwogIHRyYW5zaXRpb246IGhlaWdodCAwLjM1cyBlYXNlOyB9CiAgLmNvbGxhcHNlLmluIHsKICAgIGhlaWdodDogYXV0bzsgfQoKLmNsb3NlIHsKICBmbG9hdDogcmlnaHQ7CiAgZm9udC1zaXplOiAyMHB4OwogIGZvbnQtd2VpZ2h0OiBib2xkOwogIGxpbmUtaGVpZ2h0OiAyMHB4OwogIGNvbG9yOiBibGFjazsKICB0ZXh0LXNoYWRvdzogMCAxcHggMCB3aGl0ZTsKICBvcGFjaXR5OiAwLjI7CiAgZmlsdGVyOiBhbHBoYShvcGFjaXR5PTIwKTsgfQogIC5jbG9zZTpob3ZlciB7CiAgICBjb2xvcjogYmxhY2s7CiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7CiAgICBjdXJzb3I6IHBvaW50ZXI7CiAgICBvcGFjaXR5OiAwLjQ7CiAgICBmaWx0ZXI6IGFscGhhKG9wYWNpdHk9NDApOyB9CgpidXR0b24uY2xvc2UgewogIHBhZGRpbmc6IDA7CiAgY3Vyc29yOiBwb2ludGVyOwogIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50OwogIGJvcmRlcjogMDsKICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7IH0KCi5idG4gewogIGRpc3BsYXk6IGlubGluZS1ibG9jazsKICAqZGlzcGxheTogaW5saW5lOwogIC8qIElFNyBpbmxpbmUtYmxvY2sgaGFjayAqLwogICp6b29tOiAxOwogIHBhZGRpbmc6IDRweCAxMnB4OwogIG1hcmdpbi1ib3R0b206IDA7CiAgZm9udC1zaXplOiAxNHB4OwogIGxpbmUtaGVpZ2h0OiAyMHB4OwogICpsaW5lLWhlaWdodDogMjBweDsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTsKICBjdXJzb3I6IHBvaW50ZXI7CiAgY29sb3I6ICMzMzMzMzM7CiAgdGV4dC1zaGFkb3c6IDAgMXB4IDFweCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNzUpOwogIGJhY2tncm91bmQtY29sb3I6IHdoaXRlc21va2U7CiAgYmFja2dyb3VuZC1pbWFnZTogLW1vei1saW5lYXItZ3JhZGllbnQodG9wLCB3aGl0ZSwgI2U2ZTZlNik7CiAgYmFja2dyb3VuZC1pbWFnZTogLXdlYmtpdC1ncmFkaWVudChsaW5lYXIsIDAgMCwgMCAxMDAlLCBmcm9tKHdoaXRlKSwgdG8oI2U2ZTZlNikpOwogIGJhY2tncm91bmQtaW1hZ2U6IC13ZWJraXQtbGluZWFyLWdyYWRpZW50KHRvcCwgd2hpdGUsICNlNmU2ZTYpOwogIGJhY2tncm91bmQtaW1hZ2U6IC1vLWxpbmVhci1ncmFkaWVudCh0b3AsIHdoaXRlLCAjZTZlNmU2KTsKICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLCB3aGl0ZSwgI2U2ZTZlNik7CiAgYmFja2dyb3VuZC1yZXBlYXQ6IHJlcGVhdC14OwogIGZpbHRlcjogcHJvZ2lkOkRYSW1hZ2VUcmFuc2Zvcm0uTWljcm9zb2Z0LmdyYWRpZW50KHN0YXJ0Q29sb3JzdHI9JyNGRkZGRkZGRicsIGVuZENvbG9yc3RyPScjRkZFNkU2RTYnLCBHcmFkaWVudFR5cGU9MCk7CiAgYm9yZGVyLWNvbG9yOiAjZTZlNmU2ICNlNmU2ZTYgI2JmYmZiZjsKICBib3JkZXItY29sb3I6IHJnYmEoMCwgMCwgMCwgMC4xKSByZ2JhKDAsIDAsIDAsIDAuMSkgcmdiYSgwLCAwLCAwLCAwLjI1KTsKICAqYmFja2dyb3VuZC1jb2xvcjogI2U2ZTZlNjsKICAvKiBEYXJrZW4gSUU3IGJ1dHRvbnMgYnkgZGVmYXVsdCBzbyB0aGV5IHN0YW5kIG91dCBtb3JlIGdpdmVuIHRoZXkgd29uJ3QgaGF2ZSBib3JkZXJzICovCiAgZmlsdGVyOiBwcm9naWQ6RFhJbWFnZVRyYW5zZm9ybS5NaWNyb3NvZnQuZ3JhZGllbnQoZW5hYmxlZD1mYWxzZSk7CiAgYm9yZGVyOiAxcHggc29saWQgI2JiYmJiYjsKICAqYm9yZGVyOiAwOwogIGJvcmRlci1ib3R0b20tY29sb3I6ICNhMmEyYTI7CiAgLXdlYmtpdC1ib3JkZXItcmFkaXVzOiA0cHg7CiAgLW1vei1ib3JkZXItcmFkaXVzOiA0cHg7CiAgYm9yZGVyLXJhZGl1czogNHB4OwogICptYXJnaW4tbGVmdDogLjNlbTsKICAtd2Via2l0LWJveC1zaGFkb3c6IGluc2V0IDAgMXB4IDAgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjIpLCAwIDFweCAycHggcmdiYSgwLCAwLCAwLCAwLjA1KTsKICAtbW96LWJveC1zaGFkb3c6IGluc2V0IDAgMXB4IDAgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjIpLCAwIDFweCAycHggcmdiYSgwLCAwLCAwLCAwLjA1KTsKICBib3gtc2hhZG93OiBpbnNldCAwIDFweCAwIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4yKSwgMCAxcHggMnB4IHJnYmEoMCwgMCwgMCwgMC4wNSk7IH0KICAuYnRuOmhvdmVyLCAuYnRuOmFjdGl2ZSwgLmJ0bi5hY3RpdmUsIC5idG4uZGlzYWJsZWQsIC5idG5bZGlzYWJsZWRdIHsKICAgIGNvbG9yOiAjMzMzMzMzOwogICAgYmFja2dyb3VuZC1jb2xvcjogI2U2ZTZlNjsKICAgICpiYWNrZ3JvdW5kLWNvbG9yOiAjZDlkOWQ5OyB9CiAgLmJ0bjphY3RpdmUsIC5idG4uYWN0aXZlIHsKICAgIGJhY2tncm91bmQtY29sb3I6ICNjY2NjY2MgXDk7IH0KICAuYnRuOmZpcnN0LWNoaWxkIHsKICAgICptYXJnaW4tbGVmdDogMDsgfQogIC5idG46aG92ZXIgewogICAgY29sb3I6ICMzMzMzMzM7CiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTZlNmU2OwogICAgKmJhY2tncm91bmQtY29sb3I6ICNkOWQ5ZDk7CiAgICAvKiBCdXR0b25zIGluIElFNyBkb24ndCBnZXQgYm9yZGVycywgc28gZGFya2VuIG9uIGhvdmVyICovCiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAwIC0xNXB4OwogICAgLXdlYmtpdC10cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLXBvc2l0aW9uIDAuMXMgbGluZWFyOwogICAgLW1vei10cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLXBvc2l0aW9uIDAuMXMgbGluZWFyOwogICAgLW8tdHJhbnNpdGlvbjogYmFja2dyb3VuZC1wb3NpdGlvbiAwLjFzIGxpbmVhcjsKICAgIHRyYW5zaXRpb246IGJhY2tncm91bmQtcG9zaXRpb24gMC4xcyBsaW5lYXI7IH0KICAuYnRuOmZvY3VzIHsKICAgIG91dGxpbmU6IHRoaW4gZG90dGVkICMzMzM7CiAgICBvdXRsaW5lOiA1cHggYXV0byAtd2Via2l0LWZvY3VzLXJpbmctY29sb3I7CiAgICBvdXRsaW5lLW9mZnNldDogLTJweDsgfQogIC5idG4uYWN0aXZlLCAuYnRuOmFjdGl2ZSB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTZlNmU2OwogICAgYmFja2dyb3VuZC1jb2xvcjogI2Q5ZDlkOSBcOTsKICAgIGJhY2tncm91bmQtaW1hZ2U6IG5vbmU7CiAgICBvdXRsaW5lOiAwOwogICAgLXdlYmtpdC1ib3gtc2hhZG93OiBpbnNldCAwIDJweCA0cHggcmdiYSgwLCAwLCAwLCAwLjE1KSwgMCAxcHggMnB4IHJnYmEoMCwgMCwgMCwgMC4wNSk7CiAgICAtbW96LWJveC1zaGFkb3c6IGluc2V0IDAgMnB4IDRweCByZ2JhKDAsIDAsIDAsIDAuMTUpLCAwIDFweCAycHggcmdiYSgwLCAwLCAwLCAwLjA1KTsKICAgIGJveC1zaGFkb3c6IGluc2V0IDAgMnB4IDRweCByZ2JhKDAsIDAsIDAsIDAuMTUpLCAwIDFweCAycHggcmdiYSgwLCAwLCAwLCAwLjA1KTsgfQogIC5idG4uZGlzYWJsZWQsIC5idG5bZGlzYWJsZWRdIHsKICAgIGN1cnNvcjogZGVmYXVsdDsKICAgIGJhY2tncm91bmQtY29sb3I6ICNlNmU2ZTY7CiAgICBiYWNrZ3JvdW5kLWltYWdlOiBub25lOwogICAgb3BhY2l0eTogMC42NTsKICAgIGZpbHRlcjogYWxwaGEob3BhY2l0eT02NSk7CiAgICAtd2Via2l0LWJveC1zaGFkb3c6IG5vbmU7CiAgICAtbW96LWJveC1zaGFkb3c6IG5vbmU7CiAgICBib3gtc2hhZG93OiBub25lOyB9CgouYnRuLWxhcmdlIHsKICBwYWRkaW5nOiAxMXB4IDE5cHg7CiAgZm9udC1zaXplOiAxNy41cHg7CiAgLXdlYmtpdC1ib3JkZXItcmFkaXVzOiA2cHg7CiAgLW1vei1ib3JkZXItcmFkaXVzOiA2cHg7CiAgYm9yZGVyLXJhZGl1czogNnB4OyB9CgouYnRuLWxhcmdlIFtjbGFzc149Imljb24tIl0sCi5idG4tbGFyZ2UgW2NsYXNzKj0iIGljb24tIl0gewogIG1hcmdpbi10b3A6IDJweDsgfQoKLmJ0bi1zbWFsbCB7CiAgcGFkZGluZzogMnB4IDEwcHg7CiAgZm9udC1zaXplOiAxMS45cHg7CiAgLXdlYmtpdC1ib3JkZXItcmFkaXVzOiAzcHg7CiAgLW1vei1ib3JkZXItcmFkaXVzOiAzcHg7CiAgYm9yZGVyLXJhZGl1czogM3B4OyB9CgouYnRuLXNtYWxsIFtjbGFzc149Imljb24tIl0sCi5idG4tc21hbGwgW2NsYXNzKj0iIGljb24tIl0gewogIG1hcmdpbi10b3A6IDA7IH0KCi5idG4tbWluaSB7CiAgcGFkZGluZzogMXB4IDZweDsKICBmb250LXNpemU6IDEwLjVweDsKICAtd2Via2l0LWJvcmRlci1yYWRpdXM6IDNweDsKICAtbW96LWJvcmRlci1yYWRpdXM6IDNweDsKICBib3JkZXItcmFkaXVzOiAzcHg7IH0KCi5idG4tYmxvY2sgewogIGRpc3BsYXk6IGJsb2NrOwogIHdpZHRoOiAxMDAlOwogIHBhZGRpbmctbGVmdDogMDsKICBwYWRkaW5nLXJpZ2h0OiAwOwogIC13ZWJraXQtYm94LXNpemluZzogYm9yZGVyLWJveDsKICAtbW96LWJveC1zaXppbmc6IGJvcmRlci1ib3g7CiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgfQoKLmJ0bi1ibG9jayArIC5idG4tYmxvY2sgewogIG1hcmdpbi10b3A6IDVweDsgfQoKaW5wdXRbdHlwZT0ic3VibWl0Il0uYnRuLWJsb2NrLAppbnB1dFt0eXBlPSJyZXNldCJdLmJ0bi1ibG9jaywKaW5wdXRbdHlwZT0iYnV0dG9uIl0uYnRuLWJsb2NrIHsKICB3aWR0aDogMTAwJTsgfQoKLmJ0bi1wcmltYXJ5LmFjdGl2ZSwKLmJ0bi13YXJuaW5nLmFjdGl2ZSwKLmJ0bi1kYW5nZXIuYWN0aXZlLAouYnRuLXN1Y2Nlc3MuYWN0aXZlLAouYnRuLWluZm8uYWN0aXZlLAouYnRuLWludmVyc2UuYWN0aXZlIHsKICBjb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjc1KTsgfQoKLmJ0biB7CiAgYm9yZGVyLWNvbG9yOiAjYzVjNWM1OwogIGJvcmRlci1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjE1KSByZ2JhKDAsIDAsIDAsIDAuMTUpIHJnYmEoMCwgMCwgMCwgMC4yNSk7IH0KCi5idG4tcHJpbWFyeSB7CiAgY29sb3I6IHdoaXRlOwogIHRleHQtc2hhZG93OiAwIC0xcHggMCByZ2JhKDAsIDAsIDAsIDAuMjUpOwogIGJhY2tncm91bmQtY29sb3I6ICMwMDZlY2M7CiAgYmFja2dyb3VuZC1pbWFnZTogLW1vei1saW5lYXItZ3JhZGllbnQodG9wLCAjMDA4OGNjLCAjMDA0NGNjKTsKICBiYWNrZ3JvdW5kLWltYWdlOiAtd2Via2l0LWdyYWRpZW50KGxpbmVhciwgMCAwLCAwIDEwMCUsIGZyb20oIzAwODhjYyksIHRvKCMwMDQ0Y2MpKTsKICBiYWNrZ3JvdW5kLWltYWdlOiAtd2Via2l0LWxpbmVhci1ncmFkaWVudCh0b3AsICMwMDg4Y2MsICMwMDQ0Y2MpOwogIGJhY2tncm91bmQtaW1hZ2U6IC1vLWxpbmVhci1ncmFkaWVudCh0b3AsICMwMDg4Y2MsICMwMDQ0Y2MpOwogIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCh0byBib3R0b20sICMwMDg4Y2MsICMwMDQ0Y2MpOwogIGJhY2tncm91bmQtcmVwZWF0OiByZXBlYXQteDsKICBmaWx0ZXI6IHByb2dpZDpEWEltYWdlVHJhbnNmb3JtLk1pY3Jvc29mdC5ncmFkaWVudChzdGFydENvbG9yc3RyPScjRkYwMDg4Q0MnLCBlbmRDb2xvcnN0cj0nI0ZGMDA0NENDJywgR3JhZGllbnRUeXBlPTApOwogIGJvcmRlci1jb2xvcjogIzAwNDRjYyAjMDA0NGNjICMwMDJhODA7CiAgYm9yZGVyLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuMSkgcmdiYSgwLCAwLCAwLCAwLjEpIHJnYmEoMCwgMCwgMCwgMC4yNSk7CiAgKmJhY2tncm91bmQtY29sb3I6ICMwMDQ0Y2M7CiAgLyogRGFya2VuIElFNyBidXR0b25zIGJ5IGRlZmF1bHQgc28gdGhleSBzdGFuZCBvdXQgbW9yZSBnaXZlbiB0aGV5IHdvbid0IGhhdmUgYm9yZGVycyAqLwogIGZpbHRlcjogcHJvZ2lkOkRYSW1hZ2VUcmFuc2Zvcm0uTWljcm9zb2Z0LmdyYWRpZW50KGVuYWJsZWQ9ZmFsc2UpOyB9CiAgLmJ0bi1wcmltYXJ5OmhvdmVyLCAuYnRuLXByaW1hcnk6YWN0aXZlLCAuYnRuLXByaW1hcnkuYWN0aXZlLCAuYnRuLXByaW1hcnkuZGlzYWJsZWQsIC5idG4tcHJpbWFyeVtkaXNhYmxlZF0gewogICAgY29sb3I6IHdoaXRlOwogICAgYmFja2dyb3VuZC1jb2xvcjogIzAwNDRjYzsKICAgICpiYWNrZ3JvdW5kLWNvbG9yOiAjMDAzYmIzOyB9CiAgLmJ0bi1wcmltYXJ5OmFjdGl2ZSwgLmJ0bi1wcmltYXJ5LmFjdGl2ZSB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDAzMzk5IFw5OyB9CgouYnRuLXdhcm5pbmcgewogIGNvbG9yOiB3aGl0ZTsKICB0ZXh0LXNoYWRvdzogMCAtMXB4IDAgcmdiYSgwLCAwLCAwLCAwLjI1KTsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjlhODM0OwogIGJhY2tncm91bmQtaW1hZ2U6IC1tb3otbGluZWFyLWdyYWRpZW50KHRvcCwgI2ZiYjQ1MCwgI2Y4OTQwNik7CiAgYmFja2dyb3VuZC1pbWFnZTogLXdlYmtpdC1ncmFkaWVudChsaW5lYXIsIDAgMCwgMCAxMDAlLCBmcm9tKCNmYmI0NTApLCB0bygjZjg5NDA2KSk7CiAgYmFja2dyb3VuZC1pbWFnZTogLXdlYmtpdC1saW5lYXItZ3JhZGllbnQodG9wLCAjZmJiNDUwLCAjZjg5NDA2KTsKICBiYWNrZ3JvdW5kLWltYWdlOiAtby1saW5lYXItZ3JhZGllbnQodG9wLCAjZmJiNDUwLCAjZjg5NDA2KTsKICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLCAjZmJiNDUwLCAjZjg5NDA2KTsKICBiYWNrZ3JvdW5kLXJlcGVhdDogcmVwZWF0LXg7CiAgZmlsdGVyOiBwcm9naWQ6RFhJbWFnZVRyYW5zZm9ybS5NaWNyb3NvZnQuZ3JhZGllbnQoc3RhcnRDb2xvcnN0cj0nI0ZGRkJCNDUwJywgZW5kQ29sb3JzdHI9JyNGRkY4OTQwNicsIEdyYWRpZW50VHlwZT0wKTsKICBib3JkZXItY29sb3I6ICNmODk0MDYgI2Y4OTQwNiAjYWQ2NzA0OwogIGJvcmRlci1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjEpIHJnYmEoMCwgMCwgMCwgMC4xKSByZ2JhKDAsIDAsIDAsIDAuMjUpOwogICpiYWNrZ3JvdW5kLWNvbG9yOiAjZjg5NDA2OwogIC8qIERhcmtlbiBJRTcgYnV0dG9ucyBieSBkZWZhdWx0IHNvIHRoZXkgc3RhbmQgb3V0IG1vcmUgZ2l2ZW4gdGhleSB3b24ndCBoYXZlIGJvcmRlcnMgKi8KICBmaWx0ZXI6IHByb2dpZDpEWEltYWdlVHJhbnNmb3JtLk1pY3Jvc29mdC5ncmFkaWVudChlbmFibGVkPWZhbHNlKTsgfQogIC5idG4td2FybmluZzpob3ZlciwgLmJ0bi13YXJuaW5nOmFjdGl2ZSwgLmJ0bi13YXJuaW5nLmFjdGl2ZSwgLmJ0bi13YXJuaW5nLmRpc2FibGVkLCAuYnRuLXdhcm5pbmdbZGlzYWJsZWRdIHsKICAgIGNvbG9yOiB3aGl0ZTsKICAgIGJhY2tncm91bmQtY29sb3I6ICNmODk0MDY7CiAgICAqYmFja2dyb3VuZC1jb2xvcjogI2RmODUwNTsgfQogIC5idG4td2FybmluZzphY3RpdmUsIC5idG4td2FybmluZy5hY3RpdmUgewogICAgYmFja2dyb3VuZC1jb2xvcjogI2M2NzYwNSBcOTsgfQoKLmJ0bi1kYW5nZXIgewogIGNvbG9yOiB3aGl0ZTsKICB0ZXh0LXNoYWRvdzogMCAtMXB4IDAgcmdiYSgwLCAwLCAwLCAwLjI1KTsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZGI0ZjRhOwogIGJhY2tncm91bmQtaW1hZ2U6IC1tb3otbGluZWFyLWdyYWRpZW50KHRvcCwgI2VlNWY1YiwgI2JkMzYyZik7CiAgYmFja2dyb3VuZC1pbWFnZTogLXdlYmtpdC1ncmFkaWVudChsaW5lYXIsIDAgMCwgMCAxMDAlLCBmcm9tKCNlZTVmNWIpLCB0bygjYmQzNjJmKSk7CiAgYmFja2dyb3VuZC1pbWFnZTogLXdlYmtpdC1saW5lYXItZ3JhZGllbnQodG9wLCAjZWU1ZjViLCAjYmQzNjJmKTsKICBiYWNrZ3JvdW5kLWltYWdlOiAtby1saW5lYXItZ3JhZGllbnQodG9wLCAjZWU1ZjViLCAjYmQzNjJmKTsKICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLCAjZWU1ZjViLCAjYmQzNjJmKTsKICBiYWNrZ3JvdW5kLXJlcGVhdDogcmVwZWF0LXg7CiAgZmlsdGVyOiBwcm9naWQ6RFhJbWFnZVRyYW5zZm9ybS5NaWNyb3NvZnQuZ3JhZGllbnQoc3RhcnRDb2xvcnN0cj0nI0ZGRUU1RjVCJywgZW5kQ29sb3JzdHI9JyNGRkJEMzYyRicsIEdyYWRpZW50VHlwZT0wKTsKICBib3JkZXItY29sb3I6ICNiZDM2MmYgI2JkMzYyZiAjODAyNDIwOwogIGJvcmRlci1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjEpIHJnYmEoMCwgMCwgMCwgMC4xKSByZ2JhKDAsIDAsIDAsIDAuMjUpOwogICpiYWNrZ3JvdW5kLWNvbG9yOiAjYmQzNjJmOwogIC8qIERhcmtlbiBJRTcgYnV0dG9ucyBieSBkZWZhdWx0IHNvIHRoZXkgc3RhbmQgb3V0IG1vcmUgZ2l2ZW4gdGhleSB3b24ndCBoYXZlIGJvcmRlcnMgKi8KICBmaWx0ZXI6IHByb2dpZDpEWEltYWdlVHJhbnNmb3JtLk1pY3Jvc29mdC5ncmFkaWVudChlbmFibGVkPWZhbHNlKTsgfQogIC5idG4tZGFuZ2VyOmhvdmVyLCAuYnRuLWRhbmdlcjphY3RpdmUsIC5idG4tZGFuZ2VyLmFjdGl2ZSwgLmJ0bi1kYW5nZXIuZGlzYWJsZWQsIC5idG4tZGFuZ2VyW2Rpc2FibGVkXSB7CiAgICBjb2xvcjogd2hpdGU7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjYmQzNjJmOwogICAgKmJhY2tncm91bmQtY29sb3I6ICNhOTMwMmE7IH0KICAuYnRuLWRhbmdlcjphY3RpdmUsIC5idG4tZGFuZ2VyLmFjdGl2ZSB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjOTQyYTI1IFw5OyB9CgouYnRuLXN1Y2Nlc3MgewogIGNvbG9yOiB3aGl0ZTsKICB0ZXh0LXNoYWRvdzogMCAtMXB4IDAgcmdiYSgwLCAwLCAwLCAwLjI1KTsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjNWJiNzViOwogIGJhY2tncm91bmQtaW1hZ2U6IC1tb3otbGluZWFyLWdyYWRpZW50KHRvcCwgIzYyYzQ2MiwgIzUxYTM1MSk7CiAgYmFja2dyb3VuZC1pbWFnZTogLXdlYmtpdC1ncmFkaWVudChsaW5lYXIsIDAgMCwgMCAxMDAlLCBmcm9tKCM2MmM0NjIpLCB0bygjNTFhMzUxKSk7CiAgYmFja2dyb3VuZC1pbWFnZTogLXdlYmtpdC1saW5lYXItZ3JhZGllbnQodG9wLCAjNjJjNDYyLCAjNTFhMzUxKTsKICBiYWNrZ3JvdW5kLWltYWdlOiAtby1saW5lYXItZ3JhZGllbnQodG9wLCAjNjJjNDYyLCAjNTFhMzUxKTsKICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLCAjNjJjNDYyLCAjNTFhMzUxKTsKICBiYWNrZ3JvdW5kLXJlcGVhdDogcmVwZWF0LXg7CiAgZmlsdGVyOiBwcm9naWQ6RFhJbWFnZVRyYW5zZm9ybS5NaWNyb3NvZnQuZ3JhZGllbnQoc3RhcnRDb2xvcnN0cj0nI0ZGNjJDNDYyJywgZW5kQ29sb3JzdHI9JyNGRjUxQTM1MScsIEdyYWRpZW50VHlwZT0wKTsKICBib3JkZXItY29sb3I6ICM1MWEzNTEgIzUxYTM1MSAjMzg3MDM4OwogIGJvcmRlci1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjEpIHJnYmEoMCwgMCwgMCwgMC4xKSByZ2JhKDAsIDAsIDAsIDAuMjUpOwogICpiYWNrZ3JvdW5kLWNvbG9yOiAjNTFhMzUxOwogIC8qIERhcmtlbiBJRTcgYnV0dG9ucyBieSBkZWZhdWx0IHNvIHRoZXkgc3RhbmQgb3V0IG1vcmUgZ2l2ZW4gdGhleSB3b24ndCBoYXZlIGJvcmRlcnMgKi8KICBmaWx0ZXI6IHByb2dpZDpEWEltYWdlVHJhbnNmb3JtLk1pY3Jvc29mdC5ncmFkaWVudChlbmFibGVkPWZhbHNlKTsgfQogIC5idG4tc3VjY2Vzczpob3ZlciwgLmJ0bi1zdWNjZXNzOmFjdGl2ZSwgLmJ0bi1zdWNjZXNzLmFjdGl2ZSwgLmJ0bi1zdWNjZXNzLmRpc2FibGVkLCAuYnRuLXN1Y2Nlc3NbZGlzYWJsZWRdIHsKICAgIGNvbG9yOiB3aGl0ZTsKICAgIGJhY2tncm91bmQtY29sb3I6ICM1MWEzNTE7CiAgICAqYmFja2dyb3VuZC1jb2xvcjogIzQ5OTI0OTsgfQogIC5idG4tc3VjY2VzczphY3RpdmUsIC5idG4tc3VjY2Vzcy5hY3RpdmUgewogICAgYmFja2dyb3VuZC1jb2xvcjogIzQwODE0MCBcOTsgfQoKLmJ0bi1pbmZvIHsKICBjb2xvcjogd2hpdGU7CiAgdGV4dC1zaGFkb3c6IDAgLTFweCAwIHJnYmEoMCwgMCwgMCwgMC4yNSk7CiAgYmFja2dyb3VuZC1jb2xvcjogIzRhYjBjZTsKICBiYWNrZ3JvdW5kLWltYWdlOiAtbW96LWxpbmVhci1ncmFkaWVudCh0b3AsICM1YmMwZGUsICMyZjk2YjQpOwogIGJhY2tncm91bmQtaW1hZ2U6IC13ZWJraXQtZ3JhZGllbnQobGluZWFyLCAwIDAsIDAgMTAwJSwgZnJvbSgjNWJjMGRlKSwgdG8oIzJmOTZiNCkpOwogIGJhY2tncm91bmQtaW1hZ2U6IC13ZWJraXQtbGluZWFyLWdyYWRpZW50KHRvcCwgIzViYzBkZSwgIzJmOTZiNCk7CiAgYmFja2dyb3VuZC1pbWFnZTogLW8tbGluZWFyLWdyYWRpZW50KHRvcCwgIzViYzBkZSwgIzJmOTZiNCk7CiAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KHRvIGJvdHRvbSwgIzViYzBkZSwgIzJmOTZiNCk7CiAgYmFja2dyb3VuZC1yZXBlYXQ6IHJlcGVhdC14OwogIGZpbHRlcjogcHJvZ2lkOkRYSW1hZ2VUcmFuc2Zvcm0uTWljcm9zb2Z0LmdyYWRpZW50KHN0YXJ0Q29sb3JzdHI9JyNGRjVCQzBERScsIGVuZENvbG9yc3RyPScjRkYyRjk2QjQnLCBHcmFkaWVudFR5cGU9MCk7CiAgYm9yZGVyLWNvbG9yOiAjMmY5NmI0ICMyZjk2YjQgIzFmNjM3NzsKICBib3JkZXItY29sb3I6IHJnYmEoMCwgMCwgMCwgMC4xKSByZ2JhKDAsIDAsIDAsIDAuMSkgcmdiYSgwLCAwLCAwLCAwLjI1KTsKICAqYmFja2dyb3VuZC1jb2xvcjogIzJmOTZiNDsKICAvKiBEYXJrZW4gSUU3IGJ1dHRvbnMgYnkgZGVmYXVsdCBzbyB0aGV5IHN0YW5kIG91dCBtb3JlIGdpdmVuIHRoZXkgd29uJ3QgaGF2ZSBib3JkZXJzICovCiAgZmlsdGVyOiBwcm9naWQ6RFhJbWFnZVRyYW5zZm9ybS5NaWNyb3NvZnQuZ3JhZGllbnQoZW5hYmxlZD1mYWxzZSk7IH0KICAuYnRuLWluZm86aG92ZXIsIC5idG4taW5mbzphY3RpdmUsIC5idG4taW5mby5hY3RpdmUsIC5idG4taW5mby5kaXNhYmxlZCwgLmJ0bi1pbmZvW2Rpc2FibGVkXSB7CiAgICBjb2xvcjogd2hpdGU7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMmY5NmI0OwogICAgKmJhY2tncm91bmQtY29sb3I6ICMyYTg1YTA7IH0KICAuYnRuLWluZm86YWN0aXZlLCAuYnRuLWluZm8uYWN0aXZlIHsKICAgIGJhY2tncm91bmQtY29sb3I6ICMyNDc0OGMgXDk7IH0KCi5idG4taW52ZXJzZSB7CiAgY29sb3I6IHdoaXRlOwogIHRleHQtc2hhZG93OiAwIC0xcHggMCByZ2JhKDAsIDAsIDAsIDAuMjUpOwogIGJhY2tncm91bmQtY29sb3I6ICMzNzM3Mzc7CiAgYmFja2dyb3VuZC1pbWFnZTogLW1vei1saW5lYXItZ3JhZGllbnQodG9wLCAjNDQ0NDQ0LCAjMjIyMjIyKTsKICBiYWNrZ3JvdW5kLWltYWdlOiAtd2Via2l0LWdyYWRpZW50KGxpbmVhciwgMCAwLCAwIDEwMCUsIGZyb20oIzQ0NDQ0NCksIHRvKCMyMjIyMjIpKTsKICBiYWNrZ3JvdW5kLWltYWdlOiAtd2Via2l0LWxpbmVhci1ncmFkaWVudCh0b3AsICM0NDQ0NDQsICMyMjIyMjIpOwogIGJhY2tncm91bmQtaW1hZ2U6IC1vLWxpbmVhci1ncmFkaWVudCh0b3AsICM0NDQ0NDQsICMyMjIyMjIpOwogIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCh0byBib3R0b20sICM0NDQ0NDQsICMyMjIyMjIpOwogIGJhY2tncm91bmQtcmVwZWF0OiByZXBlYXQteDsKICBmaWx0ZXI6IHByb2dpZDpEWEltYWdlVHJhbnNmb3JtLk1pY3Jvc29mdC5ncmFkaWVudChzdGFydENvbG9yc3RyPScjRkY0NDQ0NDQnLCBlbmRDb2xvcnN0cj0nI0ZGMjIyMjIyJywgR3JhZGllbnRUeXBlPTApOwogIGJvcmRlci1jb2xvcjogIzIyMjIyMiAjMjIyMjIyIGJsYWNrOwogIGJvcmRlci1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjEpIHJnYmEoMCwgMCwgMCwgMC4xKSByZ2JhKDAsIDAsIDAsIDAuMjUpOwogICpiYWNrZ3JvdW5kLWNvbG9yOiAjMjIyMjIyOwogIC8qIERhcmtlbiBJRTcgYnV0dG9ucyBieSBkZWZhdWx0IHNvIHRoZXkgc3RhbmQgb3V0IG1vcmUgZ2l2ZW4gdGhleSB3b24ndCBoYXZlIGJvcmRlcnMgKi8KICBmaWx0ZXI6IHByb2dpZDpEWEltYWdlVHJhbnNmb3JtLk1pY3Jvc29mdC5ncmFkaWVudChlbmFibGVkPWZhbHNlKTsgfQogIC5idG4taW52ZXJzZTpob3ZlciwgLmJ0bi1pbnZlcnNlOmFjdGl2ZSwgLmJ0bi1pbnZlcnNlLmFjdGl2ZSwgLmJ0bi1pbnZlcnNlLmRpc2FibGVkLCAuYnRuLWludmVyc2VbZGlzYWJsZWRdIHsKICAgIGNvbG9yOiB3aGl0ZTsKICAgIGJhY2tncm91bmQtY29sb3I6ICMyMjIyMjI7CiAgICAqYmFja2dyb3VuZC1jb2xvcjogIzE1MTUxNTsgfQogIC5idG4taW52ZXJzZTphY3RpdmUsIC5idG4taW52ZXJzZS5hY3RpdmUgewogICAgYmFja2dyb3VuZC1jb2xvcjogIzA5MDkwOSBcOTsgfQoKYnV0dG9uLmJ0biwKaW5wdXRbdHlwZT0ic3VibWl0Il0uYnRuIHsKICAqcGFkZGluZy10b3A6IDNweDsKICAqcGFkZGluZy1ib3R0b206IDNweDsgfQogIGJ1dHRvbi5idG46Oi1tb3otZm9jdXMtaW5uZXIsCiAgaW5wdXRbdHlwZT0ic3VibWl0Il0uYnRuOjotbW96LWZvY3VzLWlubmVyIHsKICAgIHBhZGRpbmc6IDA7CiAgICBib3JkZXI6IDA7IH0KICBidXR0b24uYnRuLmJ0bi1sYXJnZSwKICBpbnB1dFt0eXBlPSJzdWJtaXQiXS5idG4uYnRuLWxhcmdlIHsKICAgICpwYWRkaW5nLXRvcDogN3B4OwogICAgKnBhZGRpbmctYm90dG9tOiA3cHg7IH0KICBidXR0b24uYnRuLmJ0bi1zbWFsbCwKICBpbnB1dFt0eXBlPSJzdWJtaXQiXS5idG4uYnRuLXNtYWxsIHsKICAgICpwYWRkaW5nLXRvcDogM3B4OwogICAgKnBhZGRpbmctYm90dG9tOiAzcHg7IH0KICBidXR0b24uYnRuLmJ0bi1taW5pLAogIGlucHV0W3R5cGU9InN1Ym1pdCJdLmJ0bi5idG4tbWluaSB7CiAgICAqcGFkZGluZy10b3A6IDFweDsKICAgICpwYWRkaW5nLWJvdHRvbTogMXB4OyB9CgouYnRuLWxpbmssCi5idG4tbGluazphY3RpdmUsCi5idG4tbGlua1tkaXNhYmxlZF0gewogIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50OwogIGJhY2tncm91bmQtaW1hZ2U6IG5vbmU7CiAgLXdlYmtpdC1ib3gtc2hhZG93OiBub25lOwogIC1tb3otYm94LXNoYWRvdzogbm9uZTsKICBib3gtc2hhZG93OiBub25lOyB9CgouYnRuLWxpbmsgewogIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQ7CiAgY3Vyc29yOiBwb2ludGVyOwogIGNvbG9yOiAjMDAwMGVlOwogIC13ZWJraXQtYm9yZGVyLXJhZGl1czogMDsKICAtbW96LWJvcmRlci1yYWRpdXM6IDA7CiAgYm9yZGVyLXJhZGl1czogMDsgfQoKLmJ0bi1saW5rOmhvdmVyIHsKICBjb2xvcjogIzAwMDBlZTsKICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsKICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDsgfQoKLmJ0bi1saW5rW2Rpc2FibGVkXTpob3ZlciB7CiAgY29sb3I6ICMzMzMzMzM7CiAgdGV4dC1kZWNvcmF0aW9uOiBub25lOyB9CgouYnRuLWdyb3VwIHsKICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgZGlzcGxheTogaW5saW5lLWJsb2NrOwogICpkaXNwbGF5OiBpbmxpbmU7CiAgLyogSUU3IGlubGluZS1ibG9jayBoYWNrICovCiAgKnpvb206IDE7CiAgZm9udC1zaXplOiAwOwogIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7CiAgd2hpdGUtc3BhY2U6IG5vd3JhcDsKICAqbWFyZ2luLWxlZnQ6IC4zZW07IH0KICAuYnRuLWdyb3VwOmZpcnN0LWNoaWxkIHsKICAgICptYXJnaW4tbGVmdDogMDsgfQoKLmJ0bi1ncm91cCArIC5idG4tZ3JvdXAgewogIG1hcmdpbi1sZWZ0OiA1cHg7IH0KCi5idG4tdG9vbGJhciB7CiAgZm9udC1zaXplOiAwOwogIG1hcmdpbi10b3A6IDEwcHg7CiAgbWFyZ2luLWJvdHRvbTogMTBweDsgfQogIC5idG4tdG9vbGJhciAuYnRuICsgLmJ0biwKICAuYnRuLXRvb2xiYXIgLmJ0bi1ncm91cCArIC5idG4sCiAgLmJ0bi10b29sYmFyIC5idG4gKyAuYnRuLWdyb3VwIHsKICAgIG1hcmdpbi1sZWZ0OiA1cHg7IH0KCi5idG4tZ3JvdXAgPiAuYnRuIHsKICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgLXdlYmtpdC1ib3JkZXItcmFkaXVzOiAwOwogIC1tb3otYm9yZGVyLXJhZGl1czogMDsKICBib3JkZXItcmFkaXVzOiAwOyB9CgouYnRuLWdyb3VwID4gLmJ0biArIC5idG4gewogIG1hcmdpbi1sZWZ0OiAtMXB4OyB9CgouYnRuLWdyb3VwID4gLmJ0biwKLmJ0bi1ncm91cCA+IC5kcm9wZG93bi1tZW51IHsKICBmb250LXNpemU6IDE0cHg7IH0KCi5idG4tZ3JvdXAgPiAuYnRuLW1pbmkgewogIGZvbnQtc2l6ZTogMTFweDsgfQoKLmJ0bi1ncm91cCA+IC5idG4tc21hbGwgewogIGZvbnQtc2l6ZTogMTJweDsgfQoKLmJ0bi1ncm91cCA+IC5idG4tbGFyZ2UgewogIGZvbnQtc2l6ZTogMTZweDsgfQoKLmJ0bi1ncm91cCA+IC5idG46Zmlyc3QtY2hpbGQgewogIG1hcmdpbi1sZWZ0OiAwOwogIC13ZWJraXQtYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogNHB4OwogIC1tb3otYm9yZGVyLXJhZGl1cy10b3BsZWZ0OiA0cHg7CiAgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogNHB4OwogIC13ZWJraXQtYm9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czogNHB4OwogIC1tb3otYm9yZGVyLXJhZGl1cy1ib3R0b21sZWZ0OiA0cHg7CiAgYm9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czogNHB4OyB9CgouYnRuLWdyb3VwID4gLmJ0bjpsYXN0LWNoaWxkLAouYnRuLWdyb3VwID4gLmRyb3Bkb3duLXRvZ2dsZSB7CiAgLXdlYmtpdC1ib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogNHB4OwogIC1tb3otYm9yZGVyLXJhZGl1cy10b3ByaWdodDogNHB4OwogIGJvcmRlci10b3AtcmlnaHQtcmFkaXVzOiA0cHg7CiAgLXdlYmtpdC1ib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czogNHB4OwogIC1tb3otYm9yZGVyLXJhZGl1cy1ib3R0b21yaWdodDogNHB4OwogIGJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiA0cHg7IH0KCi5idG4tZ3JvdXAgPiAuYnRuLmxhcmdlOmZpcnN0LWNoaWxkIHsKICBtYXJnaW4tbGVmdDogMDsKICAtd2Via2l0LWJvcmRlci10b3AtbGVmdC1yYWRpdXM6IDZweDsKICAtbW96LWJvcmRlci1yYWRpdXMtdG9wbGVmdDogNnB4OwogIGJvcmRlci10b3AtbGVmdC1yYWRpdXM6IDZweDsKICAtd2Via2l0LWJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6IDZweDsKICAtbW96LWJvcmRlci1yYWRpdXMtYm90dG9tbGVmdDogNnB4OwogIGJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6IDZweDsgfQoKLmJ0bi1ncm91cCA+IC5idG4ubGFyZ2U6bGFzdC1jaGlsZCwKLmJ0bi1ncm91cCA+IC5sYXJnZS5kcm9wZG93bi10b2dnbGUgewogIC13ZWJraXQtYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6IDZweDsKICAtbW96LWJvcmRlci1yYWRpdXMtdG9wcmlnaHQ6IDZweDsKICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogNnB4OwogIC13ZWJraXQtYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6IDZweDsKICAtbW96LWJvcmRlci1yYWRpdXMtYm90dG9tcmlnaHQ6IDZweDsKICBib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czogNnB4OyB9CgouYnRuLWdyb3VwID4gLmJ0bjpob3ZlciwKLmJ0bi1ncm91cCA+IC5idG46Zm9jdXMsCi5idG4tZ3JvdXAgPiAuYnRuOmFjdGl2ZSwKLmJ0bi1ncm91cCA+IC5idG4uYWN0aXZlIHsKICB6LWluZGV4OiAyOyB9CgouYnRuLWdyb3VwIC5kcm9wZG93bi10b2dnbGU6YWN0aXZlLAouYnRuLWdyb3VwLm9wZW4gLmRyb3Bkb3duLXRvZ2dsZSB7CiAgb3V0bGluZTogMDsgfQoKLmJ0bi1ncm91cCA+IC5idG4gKyAuZHJvcGRvd24tdG9nZ2xlIHsKICBwYWRkaW5nLWxlZnQ6IDhweDsKICBwYWRkaW5nLXJpZ2h0OiA4cHg7CiAgLXdlYmtpdC1ib3gtc2hhZG93OiBpbnNldCAxcHggMCAwIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4xMjUpLCBpbnNldCAwIDFweCAwIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4yKSwgMCAxcHggMnB4IHJnYmEoMCwgMCwgMCwgMC4wNSk7CiAgLW1vei1ib3gtc2hhZG93OiBpbnNldCAxcHggMCAwIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4xMjUpLCBpbnNldCAwIDFweCAwIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4yKSwgMCAxcHggMnB4IHJnYmEoMCwgMCwgMCwgMC4wNSk7CiAgYm94LXNoYWRvdzogaW5zZXQgMXB4IDAgMCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMTI1KSwgaW5zZXQgMCAxcHggMCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMiksIDAgMXB4IDJweCByZ2JhKDAsIDAsIDAsIDAuMDUpOwogICpwYWRkaW5nLXRvcDogNXB4OwogICpwYWRkaW5nLWJvdHRvbTogNXB4OyB9CgouYnRuLWdyb3VwID4gLmJ0bi1taW5pICsgLmRyb3Bkb3duLXRvZ2dsZSB7CiAgcGFkZGluZy1sZWZ0OiA1cHg7CiAgcGFkZGluZy1yaWdodDogNXB4OwogICpwYWRkaW5nLXRvcDogMnB4OwogICpwYWRkaW5nLWJvdHRvbTogMnB4OyB9CgouYnRuLWdyb3VwID4gLmJ0bi1zbWFsbCArIC5kcm9wZG93bi10b2dnbGUgewogICpwYWRkaW5nLXRvcDogNXB4OwogICpwYWRkaW5nLWJvdHRvbTogNHB4OyB9CgouYnRuLWdyb3VwID4gLmJ0bi1sYXJnZSArIC5kcm9wZG93bi10b2dnbGUgewogIHBhZGRpbmctbGVmdDogMTJweDsKICBwYWRkaW5nLXJpZ2h0OiAxMnB4OwogICpwYWRkaW5nLXRvcDogN3B4OwogICpwYWRkaW5nLWJvdHRvbTogN3B4OyB9CgouYnRuLWdyb3VwLm9wZW4gLmRyb3Bkb3duLXRvZ2dsZSB7CiAgYmFja2dyb3VuZC1pbWFnZTogbm9uZTsKICAtd2Via2l0LWJveC1zaGFkb3c6IGluc2V0IDAgMnB4IDRweCByZ2JhKDAsIDAsIDAsIDAuMTUpLCAwIDFweCAycHggcmdiYSgwLCAwLCAwLCAwLjA1KTsKICAtbW96LWJveC1zaGFkb3c6IGluc2V0IDAgMnB4IDRweCByZ2JhKDAsIDAsIDAsIDAuMTUpLCAwIDFweCAycHggcmdiYSgwLCAwLCAwLCAwLjA1KTsKICBib3gtc2hhZG93OiBpbnNldCAwIDJweCA0cHggcmdiYSgwLCAwLCAwLCAwLjE1KSwgMCAxcHggMnB4IHJnYmEoMCwgMCwgMCwgMC4wNSk7IH0KLmJ0bi1ncm91cC5vcGVuIC5idG4uZHJvcGRvd24tdG9nZ2xlIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTZlNmU2OyB9Ci5idG4tZ3JvdXAub3BlbiAuYnRuLXByaW1hcnkuZHJvcGRvd24tdG9nZ2xlIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA0NGNjOyB9Ci5idG4tZ3JvdXAub3BlbiAuYnRuLXdhcm5pbmcuZHJvcGRvd24tdG9nZ2xlIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjg5NDA2OyB9Ci5idG4tZ3JvdXAub3BlbiAuYnRuLWRhbmdlci5kcm9wZG93bi10b2dnbGUgewogIGJhY2tncm91bmQtY29sb3I6ICNiZDM2MmY7IH0KLmJ0bi1ncm91cC5vcGVuIC5idG4tc3VjY2Vzcy5kcm9wZG93bi10b2dnbGUgewogIGJhY2tncm91bmQtY29sb3I6ICM1MWEzNTE7IH0KLmJ0bi1ncm91cC5vcGVuIC5idG4taW5mby5kcm9wZG93bi10b2dnbGUgewogIGJhY2tncm91bmQtY29sb3I6ICMyZjk2YjQ7IH0KLmJ0bi1ncm91cC5vcGVuIC5idG4taW52ZXJzZS5kcm9wZG93bi10b2dnbGUgewogIGJhY2tncm91bmQtY29sb3I6ICMyMjIyMjI7IH0KCi5idG4gLmNhcmV0IHsKICBtYXJnaW4tdG9wOiA4cHg7CiAgbWFyZ2luLWxlZnQ6IDA7IH0KCi5idG4tbWluaSAuY2FyZXQsCi5idG4tc21hbGwgLmNhcmV0LAouYnRuLWxhcmdlIC5jYXJldCB7CiAgbWFyZ2luLXRvcDogNnB4OyB9CgouYnRuLWxhcmdlIC5jYXJldCB7CiAgYm9yZGVyLWxlZnQtd2lkdGg6IDVweDsKICBib3JkZXItcmlnaHQtd2lkdGg6IDVweDsKICBib3JkZXItdG9wLXdpZHRoOiA1cHg7IH0KCi5kcm9wdXAgLmJ0bi1sYXJnZSAuY2FyZXQgewogIGJvcmRlci1ib3R0b20td2lkdGg6IDVweDsgfQoKLmJ0bi1wcmltYXJ5IC5jYXJldCwKLmJ0bi13YXJuaW5nIC5jYXJldCwKLmJ0bi1kYW5nZXIgLmNhcmV0LAouYnRuLWluZm8gLmNhcmV0LAouYnRuLXN1Y2Nlc3MgLmNhcmV0LAouYnRuLWludmVyc2UgLmNhcmV0IHsKICBib3JkZXItdG9wLWNvbG9yOiB3aGl0ZTsKICBib3JkZXItYm90dG9tLWNvbG9yOiB3aGl0ZTsgfQoKLmJ0bi1ncm91cC12ZXJ0aWNhbCB7CiAgZGlzcGxheTogaW5saW5lLWJsb2NrOwogICpkaXNwbGF5OiBpbmxpbmU7CiAgLyogSUU3IGlubGluZS1ibG9jayBoYWNrICovCiAgKnpvb206IDE7IH0KCi5idG4tZ3JvdXAtdmVydGljYWwgLmJ0biB7CiAgZGlzcGxheTogYmxvY2s7CiAgZmxvYXQ6IG5vbmU7CiAgd2lkdGg6IDEwMCU7CiAgLXdlYmtpdC1ib3JkZXItcmFkaXVzOiAwOwogIC1tb3otYm9yZGVyLXJhZGl1czogMDsKICBib3JkZXItcmFkaXVzOiAwOyB9CgouYnRuLWdyb3VwLXZlcnRpY2FsIC5idG4gKyAuYnRuIHsKICBtYXJnaW4tbGVmdDogMDsKICBtYXJnaW4tdG9wOiAtMXB4OyB9CgouYnRuLWdyb3VwLXZlcnRpY2FsIC5idG46Zmlyc3QtY2hpbGQgewogIC13ZWJraXQtYm9yZGVyLXJhZGl1czogNHB4IDRweCAwIDA7CiAgLW1vei1ib3JkZXItcmFkaXVzOiA0cHggNHB4IDAgMDsKICBib3JkZXItcmFkaXVzOiA0cHggNHB4IDAgMDsgfQoKLmJ0bi1ncm91cC12ZXJ0aWNhbCAuYnRuOmxhc3QtY2hpbGQgewogIC13ZWJraXQtYm9yZGVyLXJhZGl1czogMCAwIDRweCA0cHg7CiAgLW1vei1ib3JkZXItcmFkaXVzOiAwIDAgNHB4IDRweDsKICBib3JkZXItcmFkaXVzOiAwIDAgNHB4IDRweDsgfQoKLmJ0bi1ncm91cC12ZXJ0aWNhbCAuYnRuLWxhcmdlOmZpcnN0LWNoaWxkIHsKICAtd2Via2l0LWJvcmRlci1yYWRpdXM6IDZweCA2cHggMCAwOwogIC1tb3otYm9yZGVyLXJhZGl1czogNnB4IDZweCAwIDA7CiAgYm9yZGVyLXJhZGl1czogNnB4IDZweCAwIDA7IH0KCi5idG4tZ3JvdXAtdmVydGljYWwgLmJ0bi1sYXJnZTpsYXN0LWNoaWxkIHsKICAtd2Via2l0LWJvcmRlci1yYWRpdXM6IDAgMCA2cHggNnB4OwogIC1tb3otYm9yZGVyLXJhZGl1czogMCAwIDZweCA2cHg7CiAgYm9yZGVyLXJhZGl1czogMCAwIDZweCA2cHg7IH0KCi5hbGVydCB7CiAgcGFkZGluZzogOHB4IDM1cHggOHB4IDE0cHg7CiAgbWFyZ2luLWJvdHRvbTogMjBweDsKICB0ZXh0LXNoYWRvdzogMCAxcHggMCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNSk7CiAgYmFja2dyb3VuZC1jb2xvcjogI2ZjZjhlMzsKICBib3JkZXI6IDFweCBzb2xpZCAjZmJlZWQ1OwogIC13ZWJraXQtYm9yZGVyLXJhZGl1czogNHB4OwogIC1tb3otYm9yZGVyLXJhZGl1czogNHB4OwogIGJvcmRlci1yYWRpdXM6IDRweDsKICBjb2xvcjogI2MwOTg1MzsgfQoKLmFsZXJ0IGg0IHsKICBtYXJnaW46IDA7IH0KCi5hbGVydCAuY2xvc2UgewogIHBvc2l0aW9uOiByZWxhdGl2ZTsKICB0b3A6IC0ycHg7CiAgcmlnaHQ6IC0yMXB4OwogIGxpbmUtaGVpZ2h0OiAyMHB4OyB9CgouYWxlcnQtc3VjY2VzcyB7CiAgYmFja2dyb3VuZC1jb2xvcjogI2RmZjBkODsKICBib3JkZXItY29sb3I6ICNkNmU5YzY7CiAgY29sb3I6ICM0Njg4NDc7IH0KCi5hbGVydC1kYW5nZXIsCi5hbGVydC1lcnJvciB7CiAgYmFja2dyb3VuZC1jb2xvcjogI2NjMDAwMDsKICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50OwogIGNvbG9yOiB3aGl0ZTsgfQoKLmFsZXJ0LWluZm8gewogIGJhY2tncm91bmQtY29sb3I6IHdoaXRlOwogIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQ7CiAgY29sb3I6ICMzMzMzMzM7IH0KCi5hbGVydC1ibG9jayB7CiAgcGFkZGluZy10b3A6IDE0cHg7CiAgcGFkZGluZy1ib3R0b206IDE0cHg7IH0KCi5hbGVydC1ibG9jayA+IHAsCi5hbGVydC1ibG9jayA+IHVsIHsKICBtYXJnaW4tYm90dG9tOiAwOyB9CgouYWxlcnQtYmxvY2sgcCArIHAgewogIG1hcmdpbi10b3A6IDVweDsgfQoKLm5hdiB7CiAgbWFyZ2luLWxlZnQ6IDA7CiAgbWFyZ2luLWJvdHRvbTogMjBweDsKICBsaXN0LXN0eWxlOiBub25lOyB9CgoubmF2ID4gbGkgPiBhIHsKICBkaXNwbGF5OiBibG9jazsgfQoKLm5hdiA+IGxpID4gYTpob3ZlciB7CiAgdGV4dC1kZWNvcmF0aW9uOiBub25lOwogIGJhY2tncm91bmQtY29sb3I6ICNlZWVlZWU7IH0KCi5uYXYgPiAucHVsbC1yaWdodCB7CiAgZmxvYXQ6IHJpZ2h0OyB9CgoubmF2LWhlYWRlciB7CiAgZGlzcGxheTogYmxvY2s7CiAgcGFkZGluZzogM3B4IDE1cHg7CiAgZm9udC1zaXplOiAxMXB4OwogIGZvbnQtd2VpZ2h0OiBib2xkOwogIGxpbmUtaGVpZ2h0OiAyMHB4OwogIGNvbG9yOiAjOTk5OTk5OwogIHRleHQtc2hhZG93OiAwIDFweCAwIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC41KTsKICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlOyB9CgoubmF2IGxpICsgLm5hdi1oZWFkZXIgewogIG1hcmdpbi10b3A6IDlweDsgfQoKLm5hdi1saXN0IHsKICBwYWRkaW5nLWxlZnQ6IDE1cHg7CiAgcGFkZGluZy1yaWdodDogMTVweDsKICBtYXJnaW4tYm90dG9tOiAwOyB9CgoubmF2LWxpc3QgPiBsaSA+IGEsCi5uYXYtbGlzdCAubmF2LWhlYWRlciB7CiAgbWFyZ2luLWxlZnQ6IC0xNXB4OwogIG1hcmdpbi1yaWdodDogLTE1cHg7CiAgdGV4dC1zaGFkb3c6IDAgMXB4IDAgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjUpOyB9CgoubmF2LWxpc3QgPiBsaSA+IGEgewogIHBhZGRpbmc6IDNweCAxNXB4OyB9CgoubmF2LWxpc3QgPiAuYWN0aXZlID4gYSwKLm5hdi1saXN0ID4gLmFjdGl2ZSA+IGE6aG92ZXIgewogIGNvbG9yOiB3aGl0ZTsKICB0ZXh0LXNoYWRvdzogMCAtMXB4IDAgcmdiYSgwLCAwLCAwLCAwLjIpOwogIGJhY2tncm91bmQtY29sb3I6ICMwMDAwZWU7IH0KCi5uYXYtbGlzdCBbY2xhc3NePSJpY29uLSJdLAoubmF2LWxpc3QgW2NsYXNzKj0iIGljb24tIl0gewogIG1hcmdpbi1yaWdodDogMnB4OyB9CgoubmF2LWxpc3QgLmRpdmlkZXIgewogICp3aWR0aDogMTAwJTsKICBoZWlnaHQ6IDFweDsKICBtYXJnaW46IDlweCAxcHg7CiAgKm1hcmdpbjogLTVweCAwIDVweDsKICBvdmVyZmxvdzogaGlkZGVuOwogIGJhY2tncm91bmQtY29sb3I6ICNlNWU1ZTU7CiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHdoaXRlOyB9CgoubmF2LXRhYnMsCi5uYXYtcGlsbHMgewogICp6b29tOiAxOyB9CiAgLm5hdi10YWJzOmJlZm9yZSwgLm5hdi10YWJzOmFmdGVyLAogIC5uYXYtcGlsbHM6YmVmb3JlLAogIC5uYXYtcGlsbHM6YWZ0ZXIgewogICAgZGlzcGxheTogdGFibGU7CiAgICBjb250ZW50OiAiIjsKICAgIGxpbmUtaGVpZ2h0OiAwOyB9CiAgLm5hdi10YWJzOmFmdGVyLAogIC5uYXYtcGlsbHM6YWZ0ZXIgewogICAgY2xlYXI6IGJvdGg7IH0KCi5uYXYtdGFicyA+IGxpLAoubmF2LXBpbGxzID4gbGkgewogIGZsb2F0OiBsZWZ0OyB9CgoubmF2LXRhYnMgPiBsaSA+IGEsCi5uYXYtcGlsbHMgPiBsaSA+IGEgewogIHBhZGRpbmctcmlnaHQ6IDEycHg7CiAgcGFkZGluZy1sZWZ0OiAxMnB4OwogIG1hcmdpbi1yaWdodDogMnB4OwogIGxpbmUtaGVpZ2h0OiAxNHB4OyB9CgoubmF2LXRhYnMgewogIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZGRkOyB9CgoubmF2LXRhYnMgPiBsaSB7CiAgbWFyZ2luLWJvdHRvbTogLTFweDsgfQoKLm5hdi10YWJzID4gbGkgPiBhIHsKICBwYWRkaW5nLXRvcDogOHB4OwogIHBhZGRpbmctYm90dG9tOiA4cHg7CiAgbGluZS1oZWlnaHQ6IDIwcHg7CiAgYm9yZGVyOiAxcHggc29saWQgdHJhbnNwYXJlbnQ7CiAgLXdlYmtpdC1ib3JkZXItcmFkaXVzOiA0cHggNHB4IDAgMDsKICAtbW96LWJvcmRlci1yYWRpdXM6IDRweCA0cHggMCAwOwogIGJvcmRlci1yYWRpdXM6IDRweCA0cHggMCAwOyB9CiAgLm5hdi10YWJzID4gbGkgPiBhOmhvdmVyIHsKICAgIGJvcmRlci1jb2xvcjogI2VlZWVlZSAjZWVlZWVlICNkZGRkZGQ7IH0KCi5uYXYtdGFicyA+IC5hY3RpdmUgPiBhLAoubmF2LXRhYnMgPiAuYWN0aXZlID4gYTpob3ZlciB7CiAgY29sb3I6ICM1NTU1NTU7CiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7CiAgYm9yZGVyOiAxcHggc29saWQgI2RkZDsKICBib3JkZXItYm90dG9tLWNvbG9yOiB0cmFuc3BhcmVudDsKICBjdXJzb3I6IGRlZmF1bHQ7IH0KCi5uYXYtcGlsbHMgPiBsaSA+IGEgewogIHBhZGRpbmctdG9wOiA4cHg7CiAgcGFkZGluZy1ib3R0b206IDhweDsKICBtYXJnaW4tdG9wOiAycHg7CiAgbWFyZ2luLWJvdHRvbTogMnB4OwogIC13ZWJraXQtYm9yZGVyLXJhZGl1czogNXB4OwogIC1tb3otYm9yZGVyLXJhZGl1czogNXB4OwogIGJvcmRlci1yYWRpdXM6IDVweDsgfQoKLm5hdi1waWxscyA+IC5hY3RpdmUgPiBhLAoubmF2LXBpbGxzID4gLmFjdGl2ZSA+IGE6aG92ZXIgewogIGNvbG9yOiB3aGl0ZTsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDAwMGVlOyB9CgoubmF2LXN0YWNrZWQgPiBsaSB7CiAgZmxvYXQ6IG5vbmU7IH0KCi5uYXYtc3RhY2tlZCA+IGxpID4gYSB7CiAgbWFyZ2luLXJpZ2h0OiAwOyB9CgoubmF2LXRhYnMubmF2LXN0YWNrZWQgewogIGJvcmRlci1ib3R0b206IDA7IH0KCi5uYXYtdGFicy5uYXYtc3RhY2tlZCA+IGxpID4gYSB7CiAgYm9yZGVyOiAxcHggc29saWQgI2RkZDsKICAtd2Via2l0LWJvcmRlci1yYWRpdXM6IDA7CiAgLW1vei1ib3JkZXItcmFkaXVzOiAwOwogIGJvcmRlci1yYWRpdXM6IDA7IH0KCi5uYXYtdGFicy5uYXYtc3RhY2tlZCA+IGxpOmZpcnN0LWNoaWxkID4gYSB7CiAgLXdlYmtpdC1ib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogNHB4OwogIC1tb3otYm9yZGVyLXJhZGl1cy10b3ByaWdodDogNHB4OwogIGJvcmRlci10b3AtcmlnaHQtcmFkaXVzOiA0cHg7CiAgLXdlYmtpdC1ib3JkZXItdG9wLWxlZnQtcmFkaXVzOiA0cHg7CiAgLW1vei1ib3JkZXItcmFkaXVzLXRvcGxlZnQ6IDRweDsKICBib3JkZXItdG9wLWxlZnQtcmFkaXVzOiA0cHg7IH0KCi5uYXYtdGFicy5uYXYtc3RhY2tlZCA+IGxpOmxhc3QtY2hpbGQgPiBhIHsKICAtd2Via2l0LWJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiA0cHg7CiAgLW1vei1ib3JkZXItcmFkaXVzLWJvdHRvbXJpZ2h0OiA0cHg7CiAgYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6IDRweDsKICAtd2Via2l0LWJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6IDRweDsKICAtbW96LWJvcmRlci1yYWRpdXMtYm90dG9tbGVmdDogNHB4OwogIGJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6IDRweDsgfQoKLm5hdi10YWJzLm5hdi1zdGFja2VkID4gbGkgPiBhOmhvdmVyIHsKICBib3JkZXItY29sb3I6ICNkZGQ7CiAgei1pbmRleDogMjsgfQoKLm5hdi1waWxscy5uYXYtc3RhY2tlZCA+IGxpID4gYSB7CiAgbWFyZ2luLWJvdHRvbTogM3B4OyB9CgoubmF2LXBpbGxzLm5hdi1zdGFja2VkID4gbGk6bGFzdC1jaGlsZCA+IGEgewogIG1hcmdpbi1ib3R0b206IDFweDsgfQoKLm5hdi10YWJzIC5kcm9wZG93bi1tZW51IHsKICAtd2Via2l0LWJvcmRlci1yYWRpdXM6IDAgMCA2cHggNnB4OwogIC1tb3otYm9yZGVyLXJhZGl1czogMCAwIDZweCA2cHg7CiAgYm9yZGVyLXJhZGl1czogMCAwIDZweCA2cHg7IH0KCi5uYXYtcGlsbHMgLmRyb3Bkb3duLW1lbnUgewogIC13ZWJraXQtYm9yZGVyLXJhZGl1czogNnB4OwogIC1tb3otYm9yZGVyLXJhZGl1czogNnB4OwogIGJvcmRlci1yYWRpdXM6IDZweDsgfQoKLm5hdiAuZHJvcGRvd24tdG9nZ2xlIC5jYXJldCB7CiAgYm9yZGVyLXRvcC1jb2xvcjogIzAwMDBlZTsKICBib3JkZXItYm90dG9tLWNvbG9yOiAjMDAwMGVlOwogIG1hcmdpbi10b3A6IDZweDsgfQoKLm5hdiAuZHJvcGRvd24tdG9nZ2xlOmhvdmVyIC5jYXJldCB7CiAgYm9yZGVyLXRvcC1jb2xvcjogIzAwMDBlZTsKICBib3JkZXItYm90dG9tLWNvbG9yOiAjMDAwMGVlOyB9CgovKiBtb3ZlIGRvd24gY2FyZXRzIGZvciB0YWJzICovCi5uYXYtdGFicyAuZHJvcGRvd24tdG9nZ2xlIC5jYXJldCB7CiAgbWFyZ2luLXRvcDogOHB4OyB9CgoubmF2IC5hY3RpdmUgLmRyb3Bkb3duLXRvZ2dsZSAuY2FyZXQgewogIGJvcmRlci10b3AtY29sb3I6ICNmZmY7CiAgYm9yZGVyLWJvdHRvbS1jb2xvcjogI2ZmZjsgfQoKLm5hdi10YWJzIC5hY3RpdmUgLmRyb3Bkb3duLXRvZ2dsZSAuY2FyZXQgewogIGJvcmRlci10b3AtY29sb3I6ICM1NTU1NTU7CiAgYm9yZGVyLWJvdHRvbS1jb2xvcjogIzU1NTU1NTsgfQoKLm5hdiA+IC5kcm9wZG93bi5hY3RpdmUgPiBhOmhvdmVyIHsKICBjdXJzb3I6IHBvaW50ZXI7IH0KCi5uYXYtdGFicyAub3BlbiAuZHJvcGRvd24tdG9nZ2xlLAoubmF2LXBpbGxzIC5vcGVuIC5kcm9wZG93bi10b2dnbGUsCi5uYXYgPiBsaS5kcm9wZG93bi5vcGVuLmFjdGl2ZSA+IGE6aG92ZXIgewogIGNvbG9yOiB3aGl0ZTsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjOTk5OTk5OwogIGJvcmRlci1jb2xvcjogIzk5OTk5OTsgfQoKLm5hdiBsaS5kcm9wZG93bi5vcGVuIC5jYXJldCwKLm5hdiBsaS5kcm9wZG93bi5vcGVuLmFjdGl2ZSAuY2FyZXQsCi5uYXYgbGkuZHJvcGRvd24ub3BlbiBhOmhvdmVyIC5jYXJldCB7CiAgYm9yZGVyLXRvcC1jb2xvcjogd2hpdGU7CiAgYm9yZGVyLWJvdHRvbS1jb2xvcjogd2hpdGU7CiAgb3BhY2l0eTogMTsKICBmaWx0ZXI6IGFscGhhKG9wYWNpdHk9MTAwKTsgfQoKLnRhYnMtc3RhY2tlZCAub3BlbiA+IGE6aG92ZXIgewogIGJvcmRlci1jb2xvcjogIzk5OTk5OTsgfQoKLnRhYmJhYmxlIHsKICAqem9vbTogMTsgfQogIC50YWJiYWJsZTpiZWZvcmUsIC50YWJiYWJsZTphZnRlciB7CiAgICBkaXNwbGF5OiB0YWJsZTsKICAgIGNvbnRlbnQ6ICIiOwogICAgbGluZS1oZWlnaHQ6IDA7IH0KICAudGFiYmFibGU6YWZ0ZXIgewogICAgY2xlYXI6IGJvdGg7IH0KCi50YWItY29udGVudCB7CiAgb3ZlcmZsb3c6IGF1dG87IH0KCi50YWJzLWJlbG93ID4gLm5hdi10YWJzLAoudGFicy1yaWdodCA+IC5uYXYtdGFicywKLnRhYnMtbGVmdCA+IC5uYXYtdGFicyB7CiAgYm9yZGVyLWJvdHRvbTogMDsgfQoKLnRhYi1jb250ZW50ID4gLnRhYi1wYW5lLAoucGlsbC1jb250ZW50ID4gLnBpbGwtcGFuZSB7CiAgZGlzcGxheTogbm9uZTsgfQoKLnRhYi1jb250ZW50ID4gLmFjdGl2ZSwKLnBpbGwtY29udGVudCA+IC5hY3RpdmUgewogIGRpc3BsYXk6IGJsb2NrOyB9CgoudGFicy1iZWxvdyA+IC5uYXYtdGFicyB7CiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNkZGQ7IH0KCi50YWJzLWJlbG93ID4gLm5hdi10YWJzID4gbGkgewogIG1hcmdpbi10b3A6IC0xcHg7CiAgbWFyZ2luLWJvdHRvbTogMDsgfQoKLnRhYnMtYmVsb3cgPiAubmF2LXRhYnMgPiBsaSA+IGEgewogIC13ZWJraXQtYm9yZGVyLXJhZGl1czogMCAwIDRweCA0cHg7CiAgLW1vei1ib3JkZXItcmFkaXVzOiAwIDAgNHB4IDRweDsKICBib3JkZXItcmFkaXVzOiAwIDAgNHB4IDRweDsgfQogIC50YWJzLWJlbG93ID4gLm5hdi10YWJzID4gbGkgPiBhOmhvdmVyIHsKICAgIGJvcmRlci1ib3R0b20tY29sb3I6IHRyYW5zcGFyZW50OwogICAgYm9yZGVyLXRvcC1jb2xvcjogI2RkZDsgfQoKLnRhYnMtYmVsb3cgPiAubmF2LXRhYnMgPiAuYWN0aXZlID4gYSwKLnRhYnMtYmVsb3cgPiAubmF2LXRhYnMgPiAuYWN0aXZlID4gYTpob3ZlciB7CiAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudCAjZGRkICNkZGQgI2RkZDsgfQoKLnRhYnMtbGVmdCA+IC5uYXYtdGFicyA+IGxpLAoudGFicy1yaWdodCA+IC5uYXYtdGFicyA+IGxpIHsKICBmbG9hdDogbm9uZTsgfQoKLnRhYnMtbGVmdCA+IC5uYXYtdGFicyA+IGxpID4gYSwKLnRhYnMtcmlnaHQgPiAubmF2LXRhYnMgPiBsaSA+IGEgewogIG1pbi13aWR0aDogNzRweDsKICBtYXJnaW4tcmlnaHQ6IDA7CiAgbWFyZ2luLWJvdHRvbTogM3B4OyB9CgoudGFicy1sZWZ0ID4gLm5hdi10YWJzIHsKICBmbG9hdDogbGVmdDsKICBtYXJnaW4tcmlnaHQ6IDE5cHg7CiAgYm9yZGVyLXJpZ2h0OiAxcHggc29saWQgI2RkZDsgfQoKLnRhYnMtbGVmdCA+IC5uYXYtdGFicyA+IGxpID4gYSB7CiAgbWFyZ2luLXJpZ2h0OiAtMXB4OwogIC13ZWJraXQtYm9yZGVyLXJhZGl1czogNHB4IDAgMCA0cHg7CiAgLW1vei1ib3JkZXItcmFkaXVzOiA0cHggMCAwIDRweDsKICBib3JkZXItcmFkaXVzOiA0cHggMCAwIDRweDsgfQoKLnRhYnMtbGVmdCA+IC5uYXYtdGFicyA+IGxpID4gYTpob3ZlciB7CiAgYm9yZGVyLWNvbG9yOiAjZWVlZWVlICNkZGRkZGQgI2VlZWVlZSAjZWVlZWVlOyB9CgoudGFicy1sZWZ0ID4gLm5hdi10YWJzIC5hY3RpdmUgPiBhLAoudGFicy1sZWZ0ID4gLm5hdi10YWJzIC5hY3RpdmUgPiBhOmhvdmVyIHsKICBib3JkZXItY29sb3I6ICNkZGQgdHJhbnNwYXJlbnQgI2RkZCAjZGRkOwogICpib3JkZXItcmlnaHQtY29sb3I6IHdoaXRlOyB9CgoudGFicy1yaWdodCA+IC5uYXYtdGFicyB7CiAgZmxvYXQ6IHJpZ2h0OwogIG1hcmdpbi1sZWZ0OiAxOXB4OwogIGJvcmRlci1sZWZ0OiAxcHggc29saWQgI2RkZDsgfQoKLnRhYnMtcmlnaHQgPiAubmF2LXRhYnMgPiBsaSA+IGEgewogIG1hcmdpbi1sZWZ0OiAtMXB4OwogIC13ZWJraXQtYm9yZGVyLXJhZGl1czogMCA0cHggNHB4IDA7CiAgLW1vei1ib3JkZXItcmFkaXVzOiAwIDRweCA0cHggMDsKICBib3JkZXItcmFkaXVzOiAwIDRweCA0cHggMDsgfQoKLnRhYnMtcmlnaHQgPiAubmF2LXRhYnMgPiBsaSA+IGE6aG92ZXIgewogIGJvcmRlci1jb2xvcjogI2VlZWVlZSAjZWVlZWVlICNlZWVlZWUgI2RkZGRkZDsgfQoKLnRhYnMtcmlnaHQgPiAubmF2LXRhYnMgLmFjdGl2ZSA+IGEsCi50YWJzLXJpZ2h0ID4gLm5hdi10YWJzIC5hY3RpdmUgPiBhOmhvdmVyIHsKICBib3JkZXItY29sb3I6ICNkZGQgI2RkZCAjZGRkIHRyYW5zcGFyZW50OwogICpib3JkZXItbGVmdC1jb2xvcjogd2hpdGU7IH0KCi5uYXYgPiAuZGlzYWJsZWQgPiBhIHsKICBjb2xvcjogIzk5OTk5OTsgfQoKLm5hdiA+IC5kaXNhYmxlZCA+IGE6aG92ZXIgewogIHRleHQtZGVjb3JhdGlvbjogbm9uZTsKICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDsKICBjdXJzb3I6IGRlZmF1bHQ7IH0KCi5uYXZiYXIgewogIG92ZXJmbG93OiB2aXNpYmxlOwogIG1hcmdpbi1ib3R0b206IDIwcHg7CiAgY29sb3I6ICM3Nzc3Nzc7CiAgKnBvc2l0aW9uOiByZWxhdGl2ZTsKICAqei1pbmRleDogMjsgfQoKLm5hdmJhci1pbm5lciB7CiAgbWluLWhlaWdodDogNDBweDsKICBwYWRkaW5nLWxlZnQ6IDIwcHg7CiAgcGFkZGluZy1yaWdodDogMjBweDsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmFmYWZhOwogIGJhY2tncm91bmQtaW1hZ2U6IC1tb3otbGluZWFyLWdyYWRpZW50KHRvcCwgd2hpdGUsICNmMmYyZjIpOwogIGJhY2tncm91bmQtaW1hZ2U6IC13ZWJraXQtZ3JhZGllbnQobGluZWFyLCAwIDAsIDAgMTAwJSwgZnJvbSh3aGl0ZSksIHRvKCNmMmYyZjIpKTsKICBiYWNrZ3JvdW5kLWltYWdlOiAtd2Via2l0LWxpbmVhci1ncmFkaWVudCh0b3AsIHdoaXRlLCAjZjJmMmYyKTsKICBiYWNrZ3JvdW5kLWltYWdlOiAtby1saW5lYXItZ3JhZGllbnQodG9wLCB3aGl0ZSwgI2YyZjJmMik7CiAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KHRvIGJvdHRvbSwgd2hpdGUsICNmMmYyZjIpOwogIGJhY2tncm91bmQtcmVwZWF0OiByZXBlYXQteDsKICBmaWx0ZXI6IHByb2dpZDpEWEltYWdlVHJhbnNmb3JtLk1pY3Jvc29mdC5ncmFkaWVudChzdGFydENvbG9yc3RyPScjRkZGRkZGRkYnLCBlbmRDb2xvcnN0cj0nI0ZGRjJGMkYyJywgR3JhZGllbnRUeXBlPTApOwogIGJvcmRlcjogMXB4IHNvbGlkICNkNGQ0ZDQ7CiAgLXdlYmtpdC1ib3JkZXItcmFkaXVzOiA0cHg7CiAgLW1vei1ib3JkZXItcmFkaXVzOiA0cHg7CiAgYm9yZGVyLXJhZGl1czogNHB4OwogIC13ZWJraXQtYm94LXNoYWRvdzogMCAxcHggNHB4IHJnYmEoMCwgMCwgMCwgMC4wNjUpOwogIC1tb3otYm94LXNoYWRvdzogMCAxcHggNHB4IHJnYmEoMCwgMCwgMCwgMC4wNjUpOwogIGJveC1zaGFkb3c6IDAgMXB4IDRweCByZ2JhKDAsIDAsIDAsIDAuMDY1KTsKICAqem9vbTogMTsgfQogIC5uYXZiYXItaW5uZXI6YmVmb3JlLCAubmF2YmFyLWlubmVyOmFmdGVyIHsKICAgIGRpc3BsYXk6IHRhYmxlOwogICAgY29udGVudDogIiI7CiAgICBsaW5lLWhlaWdodDogMDsgfQogIC5uYXZiYXItaW5uZXI6YWZ0ZXIgewogICAgY2xlYXI6IGJvdGg7IH0KCi5uYXZiYXIgLmNvbnRhaW5lciB7CiAgd2lkdGg6IGF1dG87IH0KCi5uYXYtY29sbGFwc2UuY29sbGFwc2UgewogIGhlaWdodDogYXV0bzsKICBvdmVyZmxvdzogdmlzaWJsZTsgfQoKLm5hdmJhciAuYnJhbmQgewogIGZsb2F0OiBsZWZ0OwogIGRpc3BsYXk6IGJsb2NrOwogIHBhZGRpbmc6IDEwcHggMjBweCAxMHB4OwogIG1hcmdpbi1sZWZ0OiAtMjBweDsKICBmb250LXNpemU6IDIwcHg7CiAgZm9udC13ZWlnaHQ6IDIwMDsKICBjb2xvcjogIzc3Nzc3NzsKICB0ZXh0LXNoYWRvdzogMCAxcHggMCB3aGl0ZTsgfQogIC5uYXZiYXIgLmJyYW5kOmhvdmVyIHsKICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTsgfQoKLm5hdmJhci10ZXh0IHsKICBtYXJnaW4tYm90dG9tOiAwOwogIGxpbmUtaGVpZ2h0OiA0MHB4OyB9CgoubmF2YmFyLWxpbmsgewogIGNvbG9yOiAjNzc3Nzc3OyB9CiAgLm5hdmJhci1saW5rOmhvdmVyIHsKICAgIGNvbG9yOiAjMzMzMzMzOyB9CgoubmF2YmFyIC5kaXZpZGVyLXZlcnRpY2FsIHsKICBoZWlnaHQ6IDQwcHg7CiAgbWFyZ2luOiAwIDlweDsKICBib3JkZXItbGVmdDogMXB4IHNvbGlkICNmMmYyZjI7CiAgYm9yZGVyLXJpZ2h0OiAxcHggc29saWQgd2hpdGU7IH0KCi5uYXZiYXIgLmJ0biwKLm5hdmJhciAuYnRuLWdyb3VwIHsKICBtYXJnaW4tdG9wOiA1cHg7IH0KCi5uYXZiYXIgLmJ0bi1ncm91cCAuYnRuLAoubmF2YmFyIC5pbnB1dC1wcmVwZW5kIC5idG4sCi5uYXZiYXIgLmlucHV0LWFwcGVuZCAuYnRuIHsKICBtYXJnaW4tdG9wOiAwOyB9CgoubmF2YmFyLWZvcm0gewogIG1hcmdpbi1ib3R0b206IDA7CiAgKnpvb206IDE7IH0KICAubmF2YmFyLWZvcm06YmVmb3JlLCAubmF2YmFyLWZvcm06YWZ0ZXIgewogICAgZGlzcGxheTogdGFibGU7CiAgICBjb250ZW50OiAiIjsKICAgIGxpbmUtaGVpZ2h0OiAwOyB9CiAgLm5hdmJhci1mb3JtOmFmdGVyIHsKICAgIGNsZWFyOiBib3RoOyB9CiAgLm5hdmJhci1mb3JtIGlucHV0LAogIC5uYXZiYXItZm9ybSBzZWxlY3QsCiAgLm5hdmJhci1mb3JtIC5yYWRpbywKICAubmF2YmFyLWZvcm0gLmNoZWNrYm94IHsKICAgIG1hcmdpbi10b3A6IDVweDsgfQogIC5uYXZiYXItZm9ybSBpbnB1dCwKICAubmF2YmFyLWZvcm0gc2VsZWN0LAogIC5uYXZiYXItZm9ybSAuYnRuIHsKICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsKICAgIG1hcmdpbi1ib3R0b206IDA7IH0KICAubmF2YmFyLWZvcm0gaW5wdXRbdHlwZT0iaW1hZ2UiXSwKICAubmF2YmFyLWZvcm0gaW5wdXRbdHlwZT0iY2hlY2tib3giXSwKICAubmF2YmFyLWZvcm0gaW5wdXRbdHlwZT0icmFkaW8iXSB7CiAgICBtYXJnaW4tdG9wOiAzcHg7IH0KICAubmF2YmFyLWZvcm0gLmlucHV0LWFwcGVuZCwKICAubmF2YmFyLWZvcm0gLmlucHV0LXByZXBlbmQgewogICAgbWFyZ2luLXRvcDogNnB4OwogICAgd2hpdGUtc3BhY2U6IG5vd3JhcDsgfQogICAgLm5hdmJhci1mb3JtIC5pbnB1dC1hcHBlbmQgaW5wdXQsCiAgICAubmF2YmFyLWZvcm0gLmlucHV0LXByZXBlbmQgaW5wdXQgewogICAgICBtYXJnaW4tdG9wOiAwOyB9CgoubmF2YmFyLXNlYXJjaCB7CiAgcG9zaXRpb246IHJlbGF0aXZlOwogIGZsb2F0OiBsZWZ0OwogIG1hcmdpbi10b3A6IDVweDsKICBtYXJnaW4tYm90dG9tOiAwOyB9CiAgLm5hdmJhci1zZWFyY2ggLnNlYXJjaC1xdWVyeSB7CiAgICBtYXJnaW4tYm90dG9tOiAwOwogICAgcGFkZGluZzogNHB4IDE0cHg7CiAgICBmb250LWZhbWlseTogIkhlbHZldGljYSBOZXVlIiwgSGVsdmV0aWNhLCBBcmlhbCwgc2Fucy1zZXJpZjsKICAgIGZvbnQtc2l6ZTogMTNweDsKICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7CiAgICBsaW5lLWhlaWdodDogMTsKICAgIC13ZWJraXQtYm9yZGVyLXJhZGl1czogMTVweDsKICAgIC1tb3otYm9yZGVyLXJhZGl1czogMTVweDsKICAgIGJvcmRlci1yYWRpdXM6IDE1cHg7IH0KCi5uYXZiYXItc3RhdGljLXRvcCB7CiAgcG9zaXRpb246IHN0YXRpYzsKICBtYXJnaW4tYm90dG9tOiAwOyB9CiAgLm5hdmJhci1zdGF0aWMtdG9wIC5uYXZiYXItaW5uZXIgewogICAgLXdlYmtpdC1ib3JkZXItcmFkaXVzOiAwOwogICAgLW1vei1ib3JkZXItcmFkaXVzOiAwOwogICAgYm9yZGVyLXJhZGl1czogMDsgfQoKLm5hdmJhci1maXhlZC10b3AsCi5uYXZiYXItZml4ZWQtYm90dG9tIHsKICBwb3NpdGlvbjogZml4ZWQ7CiAgcmlnaHQ6IDA7CiAgbGVmdDogMDsKICB6LWluZGV4OiAxMDMwOwogIG1hcmdpbi1ib3R0b206IDA7IH0KCi5uYXZiYXItZml4ZWQtdG9wIC5uYXZiYXItaW5uZXIsCi5uYXZiYXItc3RhdGljLXRvcCAubmF2YmFyLWlubmVyIHsKICBib3JkZXItd2lkdGg6IDAgMCAxcHg7IH0KCi5uYXZiYXItZml4ZWQtYm90dG9tIC5uYXZiYXItaW5uZXIgewogIGJvcmRlci13aWR0aDogMXB4IDAgMDsgfQoKLm5hdmJhci1maXhlZC10b3AgLm5hdmJhci1pbm5lciwKLm5hdmJhci1maXhlZC1ib3R0b20gLm5hdmJhci1pbm5lciB7CiAgcGFkZGluZy1sZWZ0OiAwOwogIHBhZGRpbmctcmlnaHQ6IDA7CiAgLXdlYmtpdC1ib3JkZXItcmFkaXVzOiAwOwogIC1tb3otYm9yZGVyLXJhZGl1czogMDsKICBib3JkZXItcmFkaXVzOiAwOyB9CgoubmF2YmFyLXN0YXRpYy10b3AgLmNvbnRhaW5lciwKLm5hdmJhci1maXhlZC10b3AgLmNvbnRhaW5lciwKLm5hdmJhci1maXhlZC1ib3R0b20gLmNvbnRhaW5lciB7CiAgd2lkdGg6IDk0MHB4OyB9CgoubmF2YmFyLWZpeGVkLXRvcCB7CiAgdG9wOiAwOyB9CgoubmF2YmFyLWZpeGVkLXRvcCAubmF2YmFyLWlubmVyLAoubmF2YmFyLXN0YXRpYy10b3AgLm5hdmJhci1pbm5lciB7CiAgLXdlYmtpdC1ib3gtc2hhZG93OiAwIDFweCAxMHB4IHJnYmEoMCwgMCwgMCwgMC4xKTsKICAtbW96LWJveC1zaGFkb3c6IDAgMXB4IDEwcHggcmdiYSgwLCAwLCAwLCAwLjEpOwogIGJveC1zaGFkb3c6IDAgMXB4IDEwcHggcmdiYSgwLCAwLCAwLCAwLjEpOyB9CgoubmF2YmFyLWZpeGVkLWJvdHRvbSB7CiAgYm90dG9tOiAwOyB9CiAgLm5hdmJhci1maXhlZC1ib3R0b20gLm5hdmJhci1pbm5lciB7CiAgICAtd2Via2l0LWJveC1zaGFkb3c6IDAgLTFweCAxMHB4IHJnYmEoMCwgMCwgMCwgMC4xKTsKICAgIC1tb3otYm94LXNoYWRvdzogMCAtMXB4IDEwcHggcmdiYSgwLCAwLCAwLCAwLjEpOwogICAgYm94LXNoYWRvdzogMCAtMXB4IDEwcHggcmdiYSgwLCAwLCAwLCAwLjEpOyB9CgoubmF2YmFyIC5uYXYgewogIHBvc2l0aW9uOiByZWxhdGl2ZTsKICBsZWZ0OiAwOwogIGRpc3BsYXk6IGJsb2NrOwogIGZsb2F0OiBsZWZ0OwogIG1hcmdpbjogMCAxMHB4IDAgMDsgfQoKLm5hdmJhciAubmF2LnB1bGwtcmlnaHQgewogIGZsb2F0OiByaWdodDsKICBtYXJnaW4tcmlnaHQ6IDA7IH0KCi5uYXZiYXIgLm5hdiA+IGxpIHsKICBmbG9hdDogbGVmdDsgfQoKLm5hdmJhciAubmF2ID4gbGkgPiBhIHsKICBmbG9hdDogbm9uZTsKICBwYWRkaW5nOiAxMHB4IDE1cHggMTBweDsKICBjb2xvcjogIzc3Nzc3NzsKICB0ZXh0LWRlY29yYXRpb246IG5vbmU7CiAgdGV4dC1zaGFkb3c6IDAgMXB4IDAgd2hpdGU7IH0KCi5uYXZiYXIgLm5hdiAuZHJvcGRvd24tdG9nZ2xlIC5jYXJldCB7CiAgbWFyZ2luLXRvcDogOHB4OyB9CgoubmF2YmFyIC5uYXYgPiBsaSA+IGE6Zm9jdXMsCi5uYXZiYXIgLm5hdiA+IGxpID4gYTpob3ZlciB7CiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7CiAgY29sb3I6ICMzMzMzMzM7CiAgdGV4dC1kZWNvcmF0aW9uOiBub25lOyB9CgoubmF2YmFyIC5uYXYgPiAuYWN0aXZlID4gYSwKLm5hdmJhciAubmF2ID4gLmFjdGl2ZSA+IGE6aG92ZXIsCi5uYXZiYXIgLm5hdiA+IC5hY3RpdmUgPiBhOmZvY3VzIHsKICBjb2xvcjogIzU1NTU1NTsKICB0ZXh0LWRlY29yYXRpb246IG5vbmU7CiAgYmFja2dyb3VuZC1jb2xvcjogI2U2ZTZlNjsKICAtd2Via2l0LWJveC1zaGFkb3c6IGluc2V0IDAgM3B4IDhweCByZ2JhKDAsIDAsIDAsIDAuMTI1KTsKICAtbW96LWJveC1zaGFkb3c6IGluc2V0IDAgM3B4IDhweCByZ2JhKDAsIDAsIDAsIDAuMTI1KTsKICBib3gtc2hhZG93OiBpbnNldCAwIDNweCA4cHggcmdiYSgwLCAwLCAwLCAwLjEyNSk7IH0KCi5uYXZiYXIgLmJ0bi1uYXZiYXIgewogIGRpc3BsYXk6IG5vbmU7CiAgZmxvYXQ6IHJpZ2h0OwogIHBhZGRpbmc6IDdweCAxMHB4OwogIG1hcmdpbi1sZWZ0OiA1cHg7CiAgbWFyZ2luLXJpZ2h0OiA1cHg7CiAgY29sb3I6IHdoaXRlOwogIHRleHQtc2hhZG93OiAwIC0xcHggMCByZ2JhKDAsIDAsIDAsIDAuMjUpOwogIGJhY2tncm91bmQtY29sb3I6ICNlZGVkZWQ7CiAgYmFja2dyb3VuZC1pbWFnZTogLW1vei1saW5lYXItZ3JhZGllbnQodG9wLCAjZjJmMmYyLCAjZTVlNWU1KTsKICBiYWNrZ3JvdW5kLWltYWdlOiAtd2Via2l0LWdyYWRpZW50KGxpbmVhciwgMCAwLCAwIDEwMCUsIGZyb20oI2YyZjJmMiksIHRvKCNlNWU1ZTUpKTsKICBiYWNrZ3JvdW5kLWltYWdlOiAtd2Via2l0LWxpbmVhci1ncmFkaWVudCh0b3AsICNmMmYyZjIsICNlNWU1ZTUpOwogIGJhY2tncm91bmQtaW1hZ2U6IC1vLWxpbmVhci1ncmFkaWVudCh0b3AsICNmMmYyZjIsICNlNWU1ZTUpOwogIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCh0byBib3R0b20sICNmMmYyZjIsICNlNWU1ZTUpOwogIGJhY2tncm91bmQtcmVwZWF0OiByZXBlYXQteDsKICBmaWx0ZXI6IHByb2dpZDpEWEltYWdlVHJhbnNmb3JtLk1pY3Jvc29mdC5ncmFkaWVudChzdGFydENvbG9yc3RyPScjRkZGMkYyRjInLCBlbmRDb2xvcnN0cj0nI0ZGRTVFNUU1JywgR3JhZGllbnRUeXBlPTApOwogIGJvcmRlci1jb2xvcjogI2U1ZTVlNSAjZTVlNWU1ICNiZmJmYmY7CiAgYm9yZGVyLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuMSkgcmdiYSgwLCAwLCAwLCAwLjEpIHJnYmEoMCwgMCwgMCwgMC4yNSk7CiAgKmJhY2tncm91bmQtY29sb3I6ICNlNWU1ZTU7CiAgLyogRGFya2VuIElFNyBidXR0b25zIGJ5IGRlZmF1bHQgc28gdGhleSBzdGFuZCBvdXQgbW9yZSBnaXZlbiB0aGV5IHdvbid0IGhhdmUgYm9yZGVycyAqLwogIGZpbHRlcjogcHJvZ2lkOkRYSW1hZ2VUcmFuc2Zvcm0uTWljcm9zb2Z0LmdyYWRpZW50KGVuYWJsZWQ9ZmFsc2UpOwogIC13ZWJraXQtYm94LXNoYWRvdzogaW5zZXQgMCAxcHggMCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMSksIDAgMXB4IDAgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjA3NSk7CiAgLW1vei1ib3gtc2hhZG93OiBpbnNldCAwIDFweCAwIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4xKSwgMCAxcHggMCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMDc1KTsKICBib3gtc2hhZG93OiBpbnNldCAwIDFweCAwIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4xKSwgMCAxcHggMCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMDc1KTsgfQogIC5uYXZiYXIgLmJ0bi1uYXZiYXI6aG92ZXIsIC5uYXZiYXIgLmJ0bi1uYXZiYXI6YWN0aXZlLCAubmF2YmFyIC5idG4tbmF2YmFyLmFjdGl2ZSwgLm5hdmJhciAuYnRuLW5hdmJhci5kaXNhYmxlZCwgLm5hdmJhciAuYnRuLW5hdmJhcltkaXNhYmxlZF0gewogICAgY29sb3I6IHdoaXRlOwogICAgYmFja2dyb3VuZC1jb2xvcjogI2U1ZTVlNTsKICAgICpiYWNrZ3JvdW5kLWNvbG9yOiAjZDhkOGQ4OyB9CiAgLm5hdmJhciAuYnRuLW5hdmJhcjphY3RpdmUsIC5uYXZiYXIgLmJ0bi1uYXZiYXIuYWN0aXZlIHsKICAgIGJhY2tncm91bmQtY29sb3I6ICNjYmNiY2IgXDk7IH0KCi5uYXZiYXIgLmJ0bi1uYXZiYXIgLmljb24tYmFyIHsKICBkaXNwbGF5OiBibG9jazsKICB3aWR0aDogMThweDsKICBoZWlnaHQ6IDJweDsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjVmNWY1OwogIC13ZWJraXQtYm9yZGVyLXJhZGl1czogMXB4OwogIC1tb3otYm9yZGVyLXJhZGl1czogMXB4OwogIGJvcmRlci1yYWRpdXM6IDFweDsKICAtd2Via2l0LWJveC1zaGFkb3c6IDAgMXB4IDAgcmdiYSgwLCAwLCAwLCAwLjI1KTsKICAtbW96LWJveC1zaGFkb3c6IDAgMXB4IDAgcmdiYSgwLCAwLCAwLCAwLjI1KTsKICBib3gtc2hhZG93OiAwIDFweCAwIHJnYmEoMCwgMCwgMCwgMC4yNSk7IH0KCi5idG4tbmF2YmFyIC5pY29uLWJhciArIC5pY29uLWJhciB7CiAgbWFyZ2luLXRvcDogM3B4OyB9CgoubmF2YmFyIC5uYXYgPiBsaSA+IC5kcm9wZG93bi1tZW51OmJlZm9yZSB7CiAgY29udGVudDogJyc7CiAgZGlzcGxheTogaW5saW5lLWJsb2NrOwogIGJvcmRlci1sZWZ0OiA3cHggc29saWQgdHJhbnNwYXJlbnQ7CiAgYm9yZGVyLXJpZ2h0OiA3cHggc29saWQgdHJhbnNwYXJlbnQ7CiAgYm9yZGVyLWJvdHRvbTogN3B4IHNvbGlkICNjY2M7CiAgYm9yZGVyLWJvdHRvbS1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjIpOwogIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICB0b3A6IC03cHg7CiAgbGVmdDogOXB4OyB9Ci5uYXZiYXIgLm5hdiA+IGxpID4gLmRyb3Bkb3duLW1lbnU6YWZ0ZXIgewogIGNvbnRlbnQ6ICcnOwogIGRpc3BsYXk6IGlubGluZS1ibG9jazsKICBib3JkZXItbGVmdDogNnB4IHNvbGlkIHRyYW5zcGFyZW50OwogIGJvcmRlci1yaWdodDogNnB4IHNvbGlkIHRyYW5zcGFyZW50OwogIGJvcmRlci1ib3R0b206IDZweCBzb2xpZCB3aGl0ZTsKICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgdG9wOiAtNnB4OwogIGxlZnQ6IDEwcHg7IH0KCi5uYXZiYXItZml4ZWQtYm90dG9tIC5uYXYgPiBsaSA+IC5kcm9wZG93bi1tZW51OmJlZm9yZSB7CiAgYm9yZGVyLXRvcDogN3B4IHNvbGlkICNjY2M7CiAgYm9yZGVyLXRvcC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjIpOwogIGJvcmRlci1ib3R0b206IDA7CiAgYm90dG9tOiAtN3B4OwogIHRvcDogYXV0bzsgfQoubmF2YmFyLWZpeGVkLWJvdHRvbSAubmF2ID4gbGkgPiAuZHJvcGRvd24tbWVudTphZnRlciB7CiAgYm9yZGVyLXRvcDogNnB4IHNvbGlkIHdoaXRlOwogIGJvcmRlci1ib3R0b206IDA7CiAgYm90dG9tOiAtNnB4OwogIHRvcDogYXV0bzsgfQoKLm5hdmJhciAubmF2IGxpLmRyb3Bkb3duLm9wZW4gPiAuZHJvcGRvd24tdG9nZ2xlLAoubmF2YmFyIC5uYXYgbGkuZHJvcGRvd24uYWN0aXZlID4gLmRyb3Bkb3duLXRvZ2dsZSwKLm5hdmJhciAubmF2IGxpLmRyb3Bkb3duLm9wZW4uYWN0aXZlID4gLmRyb3Bkb3duLXRvZ2dsZSB7CiAgYmFja2dyb3VuZC1jb2xvcjogI2U2ZTZlNjsKICBjb2xvcjogIzU1NTU1NTsgfQoKLm5hdmJhciAubmF2IGxpLmRyb3Bkb3duID4gLmRyb3Bkb3duLXRvZ2dsZSAuY2FyZXQgewogIGJvcmRlci10b3AtY29sb3I6ICM3Nzc3Nzc7CiAgYm9yZGVyLWJvdHRvbS1jb2xvcjogIzc3Nzc3NzsgfQoKLm5hdmJhciAubmF2IGxpLmRyb3Bkb3duLm9wZW4gPiAuZHJvcGRvd24tdG9nZ2xlIC5jYXJldCwKLm5hdmJhciAubmF2IGxpLmRyb3Bkb3duLmFjdGl2ZSA+IC5kcm9wZG93bi10b2dnbGUgLmNhcmV0LAoubmF2YmFyIC5uYXYgbGkuZHJvcGRvd24ub3Blbi5hY3RpdmUgPiAuZHJvcGRvd24tdG9nZ2xlIC5jYXJldCB7CiAgYm9yZGVyLXRvcC1jb2xvcjogIzU1NTU1NTsKICBib3JkZXItYm90dG9tLWNvbG9yOiAjNTU1NTU1OyB9CgoubmF2YmFyIC5wdWxsLXJpZ2h0ID4gbGkgPiAuZHJvcGRvd24tbWVudSwKLm5hdmJhciAubmF2ID4gbGkgPiAuZHJvcGRvd24tbWVudS5wdWxsLXJpZ2h0IHsKICBsZWZ0OiBhdXRvOwogIHJpZ2h0OiAwOyB9CiAgLm5hdmJhciAucHVsbC1yaWdodCA+IGxpID4gLmRyb3Bkb3duLW1lbnU6YmVmb3JlLAogIC5uYXZiYXIgLm5hdiA+IGxpID4gLmRyb3Bkb3duLW1lbnUucHVsbC1yaWdodDpiZWZvcmUgewogICAgbGVmdDogYXV0bzsKICAgIHJpZ2h0OiAxMnB4OyB9CiAgLm5hdmJhciAucHVsbC1yaWdodCA+IGxpID4gLmRyb3Bkb3duLW1lbnU6YWZ0ZXIsCiAgLm5hdmJhciAubmF2ID4gbGkgPiAuZHJvcGRvd24tbWVudS5wdWxsLXJpZ2h0OmFmdGVyIHsKICAgIGxlZnQ6IGF1dG87CiAgICByaWdodDogMTNweDsgfQogIC5uYXZiYXIgLnB1bGwtcmlnaHQgPiBsaSA+IC5kcm9wZG93bi1tZW51IC5kcm9wZG93bi1tZW51LAogIC5uYXZiYXIgLm5hdiA+IGxpID4gLmRyb3Bkb3duLW1lbnUucHVsbC1yaWdodCAuZHJvcGRvd24tbWVudSB7CiAgICBsZWZ0OiBhdXRvOwogICAgcmlnaHQ6IDEwMCU7CiAgICBtYXJnaW4tbGVmdDogMDsKICAgIG1hcmdpbi1yaWdodDogLTFweDsKICAgIC13ZWJraXQtYm9yZGVyLXJhZGl1czogNnB4IDAgNnB4IDZweDsKICAgIC1tb3otYm9yZGVyLXJhZGl1czogNnB4IDAgNnB4IDZweDsKICAgIGJvcmRlci1yYWRpdXM6IDZweCAwIDZweCA2cHg7IH0KCi5uYXZiYXItaW52ZXJzZSB7CiAgY29sb3I6ICM5OTk5OTk7IH0KICAubmF2YmFyLWludmVyc2UgLm5hdmJhci1pbm5lciB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMWIxYjFiOwogICAgYmFja2dyb3VuZC1pbWFnZTogLW1vei1saW5lYXItZ3JhZGllbnQodG9wLCAjMjIyMjIyLCAjMTExMTExKTsKICAgIGJhY2tncm91bmQtaW1hZ2U6IC13ZWJraXQtZ3JhZGllbnQobGluZWFyLCAwIDAsIDAgMTAwJSwgZnJvbSgjMjIyMjIyKSwgdG8oIzExMTExMSkpOwogICAgYmFja2dyb3VuZC1pbWFnZTogLXdlYmtpdC1saW5lYXItZ3JhZGllbnQodG9wLCAjMjIyMjIyLCAjMTExMTExKTsKICAgIGJhY2tncm91bmQtaW1hZ2U6IC1vLWxpbmVhci1ncmFkaWVudCh0b3AsICMyMjIyMjIsICMxMTExMTEpOwogICAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KHRvIGJvdHRvbSwgIzIyMjIyMiwgIzExMTExMSk7CiAgICBiYWNrZ3JvdW5kLXJlcGVhdDogcmVwZWF0LXg7CiAgICBmaWx0ZXI6IHByb2dpZDpEWEltYWdlVHJhbnNmb3JtLk1pY3Jvc29mdC5ncmFkaWVudChzdGFydENvbG9yc3RyPScjRkYyMjIyMjInLCBlbmRDb2xvcnN0cj0nI0ZGMTExMTExJywgR3JhZGllbnRUeXBlPTApOwogICAgYm9yZGVyLWNvbG9yOiAjMjUyNTI1OyB9CiAgLm5hdmJhci1pbnZlcnNlIC5icmFuZCwKICAubmF2YmFyLWludmVyc2UgLm5hdiA+IGxpID4gYSB7CiAgICBjb2xvcjogIzk5OTk5OTsKICAgIHRleHQtc2hhZG93OiAwIC0xcHggMCByZ2JhKDAsIDAsIDAsIDAuMjUpOyB9CiAgICAubmF2YmFyLWludmVyc2UgLmJyYW5kOmhvdmVyLAogICAgLm5hdmJhci1pbnZlcnNlIC5uYXYgPiBsaSA+IGE6aG92ZXIgewogICAgICBjb2xvcjogd2hpdGU7IH0KICAubmF2YmFyLWludmVyc2UgLm5hdiA+IGxpID4gYTpmb2N1cywKICAubmF2YmFyLWludmVyc2UgLm5hdiA+IGxpID4gYTpob3ZlciB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDsKICAgIGNvbG9yOiB3aGl0ZTsgfQogIC5uYXZiYXItaW52ZXJzZSAubmF2IC5hY3RpdmUgPiBhLAogIC5uYXZiYXItaW52ZXJzZSAubmF2IC5hY3RpdmUgPiBhOmhvdmVyLAogIC5uYXZiYXItaW52ZXJzZSAubmF2IC5hY3RpdmUgPiBhOmZvY3VzIHsKICAgIGNvbG9yOiB3aGl0ZTsKICAgIGJhY2tncm91bmQtY29sb3I6ICMxMTExMTE7IH0KICAubmF2YmFyLWludmVyc2UgLm5hdmJhci1saW5rIHsKICAgIGNvbG9yOiAjOTk5OTk5OyB9CiAgICAubmF2YmFyLWludmVyc2UgLm5hdmJhci1saW5rOmhvdmVyIHsKICAgICAgY29sb3I6IHdoaXRlOyB9CiAgLm5hdmJhci1pbnZlcnNlIC5kaXZpZGVyLXZlcnRpY2FsIHsKICAgIGJvcmRlci1sZWZ0LWNvbG9yOiAjMTExMTExOwogICAgYm9yZGVyLXJpZ2h0LWNvbG9yOiAjMjIyMjIyOyB9CiAgLm5hdmJhci1pbnZlcnNlIC5uYXYgbGkuZHJvcGRvd24ub3BlbiA+IC5kcm9wZG93bi10b2dnbGUsCiAgLm5hdmJhci1pbnZlcnNlIC5uYXYgbGkuZHJvcGRvd24uYWN0aXZlID4gLmRyb3Bkb3duLXRvZ2dsZSwKICAubmF2YmFyLWludmVyc2UgLm5hdiBsaS5kcm9wZG93bi5vcGVuLmFjdGl2ZSA+IC5kcm9wZG93bi10b2dnbGUgewogICAgYmFja2dyb3VuZC1jb2xvcjogIzExMTExMTsKICAgIGNvbG9yOiB3aGl0ZTsgfQogIC5uYXZiYXItaW52ZXJzZSAubmF2IGxpLmRyb3Bkb3duID4gLmRyb3Bkb3duLXRvZ2dsZSAuY2FyZXQgewogICAgYm9yZGVyLXRvcC1jb2xvcjogIzk5OTk5OTsKICAgIGJvcmRlci1ib3R0b20tY29sb3I6ICM5OTk5OTk7IH0KICAubmF2YmFyLWludmVyc2UgLm5hdiBsaS5kcm9wZG93bi5vcGVuID4gLmRyb3Bkb3duLXRvZ2dsZSAuY2FyZXQsCiAgLm5hdmJhci1pbnZlcnNlIC5uYXYgbGkuZHJvcGRvd24uYWN0aXZlID4gLmRyb3Bkb3duLXRvZ2dsZSAuY2FyZXQsCiAgLm5hdmJhci1pbnZlcnNlIC5uYXYgbGkuZHJvcGRvd24ub3Blbi5hY3RpdmUgPiAuZHJvcGRvd24tdG9nZ2xlIC5jYXJldCB7CiAgICBib3JkZXItdG9wLWNvbG9yOiB3aGl0ZTsKICAgIGJvcmRlci1ib3R0b20tY29sb3I6IHdoaXRlOyB9CiAgLm5hdmJhci1pbnZlcnNlIC5uYXZiYXItc2VhcmNoIC5zZWFyY2gtcXVlcnkgewogICAgY29sb3I6IHdoaXRlOwogICAgYmFja2dyb3VuZC1jb2xvcjogIzUxNTE1MTsKICAgIGJvcmRlci1jb2xvcjogIzExMTExMTsKICAgIC13ZWJraXQtYm94LXNoYWRvdzogaW5zZXQgMCAxcHggMnB4IHJnYmEoMCwgMCwgMCwgMC4xKSwgMCAxcHggMCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMTUpOwogICAgLW1vei1ib3gtc2hhZG93OiBpbnNldCAwIDFweCAycHggcmdiYSgwLCAwLCAwLCAwLjEpLCAwIDFweCAwIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4xNSk7CiAgICBib3gtc2hhZG93OiBpbnNldCAwIDFweCAycHggcmdiYSgwLCAwLCAwLCAwLjEpLCAwIDFweCAwIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4xNSk7CiAgICAtd2Via2l0LXRyYW5zaXRpb246IG5vbmU7CiAgICAtbW96LXRyYW5zaXRpb246IG5vbmU7CiAgICAtby10cmFuc2l0aW9uOiBub25lOwogICAgdHJhbnNpdGlvbjogbm9uZTsgfQogICAgLm5hdmJhci1pbnZlcnNlIC5uYXZiYXItc2VhcmNoIC5zZWFyY2gtcXVlcnk6LW1vei1wbGFjZWhvbGRlciB7CiAgICAgIGNvbG9yOiAjY2NjY2NjOyB9CiAgICAubmF2YmFyLWludmVyc2UgLm5hdmJhci1zZWFyY2ggLnNlYXJjaC1xdWVyeTotbXMtaW5wdXQtcGxhY2Vob2xkZXIgewogICAgICBjb2xvcjogI2NjY2NjYzsgfQogICAgLm5hdmJhci1pbnZlcnNlIC5uYXZiYXItc2VhcmNoIC5zZWFyY2gtcXVlcnk6Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXIgewogICAgICBjb2xvcjogI2NjY2NjYzsgfQogICAgLm5hdmJhci1pbnZlcnNlIC5uYXZiYXItc2VhcmNoIC5zZWFyY2gtcXVlcnk6Zm9jdXMsIC5uYXZiYXItaW52ZXJzZSAubmF2YmFyLXNlYXJjaCAuc2VhcmNoLXF1ZXJ5LmZvY3VzZWQgewogICAgICBwYWRkaW5nOiA1cHggMTVweDsKICAgICAgY29sb3I6ICMzMzMzMzM7CiAgICAgIHRleHQtc2hhZG93OiAwIDFweCAwIHdoaXRlOwogICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTsKICAgICAgYm9yZGVyOiAwOwogICAgICAtd2Via2l0LWJveC1zaGFkb3c6IDAgMCAzcHggcmdiYSgwLCAwLCAwLCAwLjE1KTsKICAgICAgLW1vei1ib3gtc2hhZG93OiAwIDAgM3B4IHJnYmEoMCwgMCwgMCwgMC4xNSk7CiAgICAgIGJveC1zaGFkb3c6IDAgMCAzcHggcmdiYSgwLCAwLCAwLCAwLjE1KTsKICAgICAgb3V0bGluZTogMDsgfQogIC5uYXZiYXItaW52ZXJzZSAuYnRuLW5hdmJhciB7CiAgICBjb2xvcjogd2hpdGU7CiAgICB0ZXh0LXNoYWRvdzogMCAtMXB4IDAgcmdiYSgwLCAwLCAwLCAwLjI1KTsKICAgIGJhY2tncm91bmQtY29sb3I6ICMwZTBlMGU7CiAgICBiYWNrZ3JvdW5kLWltYWdlOiAtbW96LWxpbmVhci1ncmFkaWVudCh0b3AsICMxNTE1MTUsICMwNDA0MDQpOwogICAgYmFja2dyb3VuZC1pbWFnZTogLXdlYmtpdC1ncmFkaWVudChsaW5lYXIsIDAgMCwgMCAxMDAlLCBmcm9tKCMxNTE1MTUpLCB0bygjMDQwNDA0KSk7CiAgICBiYWNrZ3JvdW5kLWltYWdlOiAtd2Via2l0LWxpbmVhci1ncmFkaWVudCh0b3AsICMxNTE1MTUsICMwNDA0MDQpOwogICAgYmFja2dyb3VuZC1pbWFnZTogLW8tbGluZWFyLWdyYWRpZW50KHRvcCwgIzE1MTUxNSwgIzA0MDQwNCk7CiAgICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLCAjMTUxNTE1LCAjMDQwNDA0KTsKICAgIGJhY2tncm91bmQtcmVwZWF0OiByZXBlYXQteDsKICAgIGZpbHRlcjogcHJvZ2lkOkRYSW1hZ2VUcmFuc2Zvcm0uTWljcm9zb2Z0LmdyYWRpZW50KHN0YXJ0Q29sb3JzdHI9JyNGRjE1MTUxNScsIGVuZENvbG9yc3RyPScjRkYwNDA0MDQnLCBHcmFkaWVudFR5cGU9MCk7CiAgICBib3JkZXItY29sb3I6ICMwNDA0MDQgIzA0MDQwNCBibGFjazsKICAgIGJvcmRlci1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjEpIHJnYmEoMCwgMCwgMCwgMC4xKSByZ2JhKDAsIDAsIDAsIDAuMjUpOwogICAgKmJhY2tncm91bmQtY29sb3I6ICMwNDA0MDQ7CiAgICAvKiBEYXJrZW4gSUU3IGJ1dHRvbnMgYnkgZGVmYXVsdCBzbyB0aGV5IHN0YW5kIG91dCBtb3JlIGdpdmVuIHRoZXkgd29uJ3QgaGF2ZSBib3JkZXJzICovCiAgICBmaWx0ZXI6IHByb2dpZDpEWEltYWdlVHJhbnNmb3JtLk1pY3Jvc29mdC5ncmFkaWVudChlbmFibGVkPWZhbHNlKTsgfQogICAgLm5hdmJhci1pbnZlcnNlIC5idG4tbmF2YmFyOmhvdmVyLCAubmF2YmFyLWludmVyc2UgLmJ0bi1uYXZiYXI6YWN0aXZlLCAubmF2YmFyLWludmVyc2UgLmJ0bi1uYXZiYXIuYWN0aXZlLCAubmF2YmFyLWludmVyc2UgLmJ0bi1uYXZiYXIuZGlzYWJsZWQsIC5uYXZiYXItaW52ZXJzZSAuYnRuLW5hdmJhcltkaXNhYmxlZF0gewogICAgICBjb2xvcjogd2hpdGU7CiAgICAgIGJhY2tncm91bmQtY29sb3I6ICMwNDA0MDQ7CiAgICAgICpiYWNrZ3JvdW5kLWNvbG9yOiBibGFjazsgfQogICAgLm5hdmJhci1pbnZlcnNlIC5idG4tbmF2YmFyOmFjdGl2ZSwgLm5hdmJhci1pbnZlcnNlIC5idG4tbmF2YmFyLmFjdGl2ZSB7CiAgICAgIGJhY2tncm91bmQtY29sb3I6IGJsYWNrIFw5OyB9CgouYnJlYWRjcnVtYiB7CiAgcGFkZGluZzogOHB4IDE1cHg7CiAgbWFyZ2luOiAwIDAgMjBweDsKICBsaXN0LXN0eWxlOiBub25lOwogIGJhY2tncm91bmQtY29sb3I6ICNmNWY1ZjU7CiAgLXdlYmtpdC1ib3JkZXItcmFkaXVzOiA0cHg7CiAgLW1vei1ib3JkZXItcmFkaXVzOiA0cHg7CiAgYm9yZGVyLXJhZGl1czogNHB4OyB9CiAgLmJyZWFkY3J1bWIgbGkgewogICAgZGlzcGxheTogaW5saW5lLWJsb2NrOwogICAgKmRpc3BsYXk6IGlubGluZTsKICAgIC8qIElFNyBpbmxpbmUtYmxvY2sgaGFjayAqLwogICAgKnpvb206IDE7CiAgICB0ZXh0LXNoYWRvdzogMCAxcHggMCB3aGl0ZTsgfQogIC5icmVhZGNydW1iIC5kaXZpZGVyIHsKICAgIHBhZGRpbmc6IDAgNXB4OwogICAgY29sb3I6ICNjY2M7IH0KICAuYnJlYWRjcnVtYiAuYWN0aXZlIHsKICAgIGNvbG9yOiAjOTk5OTk5OyB9CgoucGFnaW5hdGlvbiB7CiAgbWFyZ2luOiAyMHB4IDA7IH0KCi5wYWdpbmF0aW9uIHVsIHsKICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CiAgKmRpc3BsYXk6IGlubGluZTsKICAvKiBJRTcgaW5saW5lLWJsb2NrIGhhY2sgKi8KICAqem9vbTogMTsKICBtYXJnaW4tbGVmdDogMDsKICBtYXJnaW4tYm90dG9tOiAwOwogIC13ZWJraXQtYm9yZGVyLXJhZGl1czogNHB4OwogIC1tb3otYm9yZGVyLXJhZGl1czogNHB4OwogIGJvcmRlci1yYWRpdXM6IDRweDsKICAtd2Via2l0LWJveC1zaGFkb3c6IDAgMXB4IDJweCByZ2JhKDAsIDAsIDAsIDAuMDUpOwogIC1tb3otYm94LXNoYWRvdzogMCAxcHggMnB4IHJnYmEoMCwgMCwgMCwgMC4wNSk7CiAgYm94LXNoYWRvdzogMCAxcHggMnB4IHJnYmEoMCwgMCwgMCwgMC4wNSk7IH0KCi5wYWdpbmF0aW9uIHVsID4gbGkgewogIGRpc3BsYXk6IGlubGluZTsgfQoKLnBhZ2luYXRpb24gdWwgPiBsaSA+IGEsCi5wYWdpbmF0aW9uIHVsID4gbGkgPiBzcGFuIHsKICBmbG9hdDogbGVmdDsKICBwYWRkaW5nOiA0cHggMTJweDsKICBsaW5lLWhlaWdodDogMjBweDsKICB0ZXh0LWRlY29yYXRpb246IG5vbmU7CiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7CiAgYm9yZGVyOiAxcHggc29saWQgI2RkZGRkZDsKICBib3JkZXItbGVmdC13aWR0aDogMDsgfQoKLnBhZ2luYXRpb24gdWwgPiBsaSA+IGE6aG92ZXIsCi5wYWdpbmF0aW9uIHVsID4gLmFjdGl2ZSA+IGEsCi5wYWdpbmF0aW9uIHVsID4gLmFjdGl2ZSA+IHNwYW4gewogIGJhY2tncm91bmQtY29sb3I6IHdoaXRlc21va2U7IH0KCi5wYWdpbmF0aW9uIHVsID4gLmFjdGl2ZSA+IGEsCi5wYWdpbmF0aW9uIHVsID4gLmFjdGl2ZSA+IHNwYW4gewogIGNvbG9yOiAjOTk5OTk5OwogIGN1cnNvcjogZGVmYXVsdDsgfQoKLnBhZ2luYXRpb24gdWwgPiAuZGlzYWJsZWQgPiBzcGFuLAoucGFnaW5hdGlvbiB1bCA+IC5kaXNhYmxlZCA+IGEsCi5wYWdpbmF0aW9uIHVsID4gLmRpc2FibGVkID4gYTpob3ZlciB7CiAgY29sb3I6ICM5OTk5OTk7CiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7CiAgY3Vyc29yOiBkZWZhdWx0OyB9CgoucGFnaW5hdGlvbiB1bCA+IGxpOmZpcnN0LWNoaWxkID4gYSwKLnBhZ2luYXRpb24gdWwgPiBsaTpmaXJzdC1jaGlsZCA+IHNwYW4gewogIGJvcmRlci1sZWZ0LXdpZHRoOiAxcHg7CiAgLXdlYmtpdC1ib3JkZXItdG9wLWxlZnQtcmFkaXVzOiA0cHg7CiAgLW1vei1ib3JkZXItcmFkaXVzLXRvcGxlZnQ6IDRweDsKICBib3JkZXItdG9wLWxlZnQtcmFkaXVzOiA0cHg7CiAgLXdlYmtpdC1ib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOiA0cHg7CiAgLW1vei1ib3JkZXItcmFkaXVzLWJvdHRvbWxlZnQ6IDRweDsKICBib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOiA0cHg7IH0KCi5wYWdpbmF0aW9uIHVsID4gbGk6bGFzdC1jaGlsZCA+IGEsCi5wYWdpbmF0aW9uIHVsID4gbGk6bGFzdC1jaGlsZCA+IHNwYW4gewogIC13ZWJraXQtYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6IDRweDsKICAtbW96LWJvcmRlci1yYWRpdXMtdG9wcmlnaHQ6IDRweDsKICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogNHB4OwogIC13ZWJraXQtYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6IDRweDsKICAtbW96LWJvcmRlci1yYWRpdXMtYm90dG9tcmlnaHQ6IDRweDsKICBib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czogNHB4OyB9CgoucGFnaW5hdGlvbi1jZW50ZXJlZCB7CiAgdGV4dC1hbGlnbjogY2VudGVyOyB9CgoucGFnaW5hdGlvbi1yaWdodCB7CiAgdGV4dC1hbGlnbjogcmlnaHQ7IH0KCi5wYWdpbmF0aW9uLWxhcmdlIHVsID4gbGkgPiBhLAoucGFnaW5hdGlvbi1sYXJnZSB1bCA+IGxpID4gc3BhbiB7CiAgcGFkZGluZzogMTFweCAxOXB4OwogIGZvbnQtc2l6ZTogMTcuNXB4OyB9Ci5wYWdpbmF0aW9uLWxhcmdlIHVsID4gbGk6Zmlyc3QtY2hpbGQgPiBhLAoucGFnaW5hdGlvbi1sYXJnZSB1bCA+IGxpOmZpcnN0LWNoaWxkID4gc3BhbiB7CiAgLXdlYmtpdC1ib3JkZXItdG9wLWxlZnQtcmFkaXVzOiA2cHg7CiAgLW1vei1ib3JkZXItcmFkaXVzLXRvcGxlZnQ6IDZweDsKICBib3JkZXItdG9wLWxlZnQtcmFkaXVzOiA2cHg7CiAgLXdlYmtpdC1ib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOiA2cHg7CiAgLW1vei1ib3JkZXItcmFkaXVzLWJvdHRvbWxlZnQ6IDZweDsKICBib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOiA2cHg7IH0KLnBhZ2luYXRpb24tbGFyZ2UgdWwgPiBsaTpsYXN0LWNoaWxkID4gYSwKLnBhZ2luYXRpb24tbGFyZ2UgdWwgPiBsaTpsYXN0LWNoaWxkID4gc3BhbiB7CiAgLXdlYmtpdC1ib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogNnB4OwogIC1tb3otYm9yZGVyLXJhZGl1cy10b3ByaWdodDogNnB4OwogIGJvcmRlci10b3AtcmlnaHQtcmFkaXVzOiA2cHg7CiAgLXdlYmtpdC1ib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czogNnB4OwogIC1tb3otYm9yZGVyLXJhZGl1cy1ib3R0b21yaWdodDogNnB4OwogIGJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiA2cHg7IH0KCi5wYWdpbmF0aW9uLW1pbmkgdWwgPiBsaTpmaXJzdC1jaGlsZCA+IGEsCi5wYWdpbmF0aW9uLW1pbmkgdWwgPiBsaTpmaXJzdC1jaGlsZCA+IHNwYW4sCi5wYWdpbmF0aW9uLXNtYWxsIHVsID4gbGk6Zmlyc3QtY2hpbGQgPiBhLAoucGFnaW5hdGlvbi1zbWFsbCB1bCA+IGxpOmZpcnN0LWNoaWxkID4gc3BhbiB7CiAgLXdlYmtpdC1ib3JkZXItdG9wLWxlZnQtcmFkaXVzOiAzcHg7CiAgLW1vei1ib3JkZXItcmFkaXVzLXRvcGxlZnQ6IDNweDsKICBib3JkZXItdG9wLWxlZnQtcmFkaXVzOiAzcHg7CiAgLXdlYmtpdC1ib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOiAzcHg7CiAgLW1vei1ib3JkZXItcmFkaXVzLWJvdHRvbWxlZnQ6IDNweDsKICBib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOiAzcHg7IH0KLnBhZ2luYXRpb24tbWluaSB1bCA+IGxpOmxhc3QtY2hpbGQgPiBhLAoucGFnaW5hdGlvbi1taW5pIHVsID4gbGk6bGFzdC1jaGlsZCA+IHNwYW4sCi5wYWdpbmF0aW9uLXNtYWxsIHVsID4gbGk6bGFzdC1jaGlsZCA+IGEsCi5wYWdpbmF0aW9uLXNtYWxsIHVsID4gbGk6bGFzdC1jaGlsZCA+IHNwYW4gewogIC13ZWJraXQtYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6IDNweDsKICAtbW96LWJvcmRlci1yYWRpdXMtdG9wcmlnaHQ6IDNweDsKICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogM3B4OwogIC13ZWJraXQtYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6IDNweDsKICAtbW96LWJvcmRlci1yYWRpdXMtYm90dG9tcmlnaHQ6IDNweDsKICBib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czogM3B4OyB9CgoucGFnaW5hdGlvbi1zbWFsbCB1bCA+IGxpID4gYSwKLnBhZ2luYXRpb24tc21hbGwgdWwgPiBsaSA+IHNwYW4gewogIHBhZGRpbmc6IDJweCAxMHB4OwogIGZvbnQtc2l6ZTogMTEuOXB4OyB9CgoucGFnaW5hdGlvbi1taW5pIHVsID4gbGkgPiBhLAoucGFnaW5hdGlvbi1taW5pIHVsID4gbGkgPiBzcGFuIHsKICBwYWRkaW5nOiAxcHggNnB4OwogIGZvbnQtc2l6ZTogMTAuNXB4OyB9CgoucGFnZXIgewogIG1hcmdpbjogMjBweCAwOwogIGxpc3Qtc3R5bGU6IG5vbmU7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogICp6b29tOiAxOyB9CiAgLnBhZ2VyOmJlZm9yZSwgLnBhZ2VyOmFmdGVyIHsKICAgIGRpc3BsYXk6IHRhYmxlOwogICAgY29udGVudDogIiI7CiAgICBsaW5lLWhlaWdodDogMDsgfQogIC5wYWdlcjphZnRlciB7CiAgICBjbGVhcjogYm90aDsgfQoKLnBhZ2VyIGxpIHsKICBkaXNwbGF5OiBpbmxpbmU7IH0KCi5wYWdlciBsaSA+IGEsCi5wYWdlciBsaSA+IHNwYW4gewogIGRpc3BsYXk6IGlubGluZS1ibG9jazsKICBwYWRkaW5nOiA1cHggMTRweDsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmOwogIGJvcmRlcjogMXB4IHNvbGlkICNkZGQ7CiAgLXdlYmtpdC1ib3JkZXItcmFkaXVzOiAxNXB4OwogIC1tb3otYm9yZGVyLXJhZGl1czogMTVweDsKICBib3JkZXItcmFkaXVzOiAxNXB4OyB9CgoucGFnZXIgbGkgPiBhOmhvdmVyIHsKICB0ZXh0LWRlY29yYXRpb246IG5vbmU7CiAgYmFja2dyb3VuZC1jb2xvcjogI2Y1ZjVmNTsgfQoKLnBhZ2VyIC5uZXh0ID4gYSwKLnBhZ2VyIC5uZXh0ID4gc3BhbiB7CiAgZmxvYXQ6IHJpZ2h0OyB9CgoucGFnZXIgLnByZXZpb3VzID4gYSwKLnBhZ2VyIC5wcmV2aW91cyA+IHNwYW4gewogIGZsb2F0OiBsZWZ0OyB9CgoucGFnZXIgLmRpc2FibGVkID4gYSwKLnBhZ2VyIC5kaXNhYmxlZCA+IGE6aG92ZXIsCi5wYWdlciAuZGlzYWJsZWQgPiBzcGFuIHsKICBjb2xvcjogIzk5OTk5OTsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmOwogIGN1cnNvcjogZGVmYXVsdDsgfQoKLm1vZGFsLWJhY2tkcm9wIHsKICBwb3NpdGlvbjogZml4ZWQ7CiAgdG9wOiAwOwogIHJpZ2h0OiAwOwogIGJvdHRvbTogMDsKICBsZWZ0OiAwOwogIHotaW5kZXg6IDEwNDA7CiAgYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7IH0KICAubW9kYWwtYmFja2Ryb3AuZmFkZSB7CiAgICBvcGFjaXR5OiAwOyB9CgoubW9kYWwtYmFja2Ryb3AsCi5tb2RhbC1iYWNrZHJvcC5mYWRlLmluIHsKICBvcGFjaXR5OiAwLjg7CiAgZmlsdGVyOiBhbHBoYShvcGFjaXR5PTgwKTsgfQoKLm1vZGFsIHsKICBwb3NpdGlvbjogZml4ZWQ7CiAgdG9wOiA1MCU7CiAgbGVmdDogNTAlOwogIHotaW5kZXg6IDEwNTA7CiAgb3ZlcmZsb3c6IGF1dG87CiAgd2lkdGg6IDU2MHB4OwogIG1hcmdpbjogLTI1MHB4IDAgMCAtMjgwcHg7CiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7CiAgYm9yZGVyOiAxcHggc29saWQgIzk5OTsKICBib3JkZXI6IDFweCBzb2xpZCByZ2JhKDAsIDAsIDAsIDAuMyk7CiAgKmJvcmRlcjogMXB4IHNvbGlkICM5OTk7CiAgLyogSUU2LTcgKi8KICAtd2Via2l0LWJvcmRlci1yYWRpdXM6IDZweDsKICAtbW96LWJvcmRlci1yYWRpdXM6IDZweDsKICBib3JkZXItcmFkaXVzOiA2cHg7CiAgLXdlYmtpdC1ib3gtc2hhZG93OiAwIDNweCA3cHggcmdiYSgwLCAwLCAwLCAwLjMpOwogIC1tb3otYm94LXNoYWRvdzogMCAzcHggN3B4IHJnYmEoMCwgMCwgMCwgMC4zKTsKICBib3gtc2hhZG93OiAwIDNweCA3cHggcmdiYSgwLCAwLCAwLCAwLjMpOwogIC13ZWJraXQtYmFja2dyb3VuZC1jbGlwOiBwYWRkaW5nLWJveDsKICAtbW96LWJhY2tncm91bmQtY2xpcDogcGFkZGluZy1ib3g7CiAgYmFja2dyb3VuZC1jbGlwOiBwYWRkaW5nLWJveDsKICBvdXRsaW5lOiBub25lOyB9CiAgLm1vZGFsLmZhZGUgewogICAgLXdlYmtpdC10cmFuc2l0aW9uOiBvcGFjaXR5IDAuM3MgbGluZWFyLCB0b3AgMC4zcyBlYXNlLW91dDsKICAgIC1tb3otdHJhbnNpdGlvbjogb3BhY2l0eSAwLjNzIGxpbmVhciwgdG9wIDAuM3MgZWFzZS1vdXQ7CiAgICAtby10cmFuc2l0aW9uOiBvcGFjaXR5IDAuM3MgbGluZWFyLCB0b3AgMC4zcyBlYXNlLW91dDsKICAgIHRyYW5zaXRpb246IG9wYWNpdHkgMC4zcyBsaW5lYXIsIHRvcCAwLjNzIGVhc2Utb3V0OwogICAgdG9wOiAtMjUlOyB9CiAgLm1vZGFsLmZhZGUuaW4gewogICAgdG9wOiA1MCU7IH0KCi5tb2RhbC1oZWFkZXIgewogIHBhZGRpbmc6IDlweCAxNXB4OwogIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZWVlOyB9CiAgLm1vZGFsLWhlYWRlciAuY2xvc2UgewogICAgbWFyZ2luLXRvcDogMnB4OyB9CiAgLm1vZGFsLWhlYWRlciBoMyB7CiAgICBtYXJnaW46IDA7CiAgICBsaW5lLWhlaWdodDogMzBweDsgfQoKLm1vZGFsLWJvZHkgewogIG92ZXJmbG93LXk6IGF1dG87CiAgbWF4LWhlaWdodDogNDAwcHg7CiAgcGFkZGluZzogMTVweDsgfQoKLm1vZGFsLWZvcm0gewogIG1hcmdpbi1ib3R0b206IDA7IH0KCi5tb2RhbC1mb290ZXIgewogIHBhZGRpbmc6IDE0cHggMTVweCAxNXB4OwogIG1hcmdpbi1ib3R0b206IDA7CiAgdGV4dC1hbGlnbjogcmlnaHQ7CiAgYmFja2dyb3VuZC1jb2xvcjogI2Y1ZjVmNTsKICBib3JkZXItdG9wOiAxcHggc29saWQgI2RkZDsKICAtd2Via2l0LWJvcmRlci1yYWRpdXM6IDAgMCA2cHggNnB4OwogIC1tb3otYm9yZGVyLXJhZGl1czogMCAwIDZweCA2cHg7CiAgYm9yZGVyLXJhZGl1czogMCAwIDZweCA2cHg7CiAgLXdlYmtpdC1ib3gtc2hhZG93OiBpbnNldCAwIDFweCAwIHdoaXRlOwogIC1tb3otYm94LXNoYWRvdzogaW5zZXQgMCAxcHggMCB3aGl0ZTsKICBib3gtc2hhZG93OiBpbnNldCAwIDFweCAwIHdoaXRlOwogICp6b29tOiAxOyB9CiAgLm1vZGFsLWZvb3RlcjpiZWZvcmUsIC5tb2RhbC1mb290ZXI6YWZ0ZXIgewogICAgZGlzcGxheTogdGFibGU7CiAgICBjb250ZW50OiAiIjsKICAgIGxpbmUtaGVpZ2h0OiAwOyB9CiAgLm1vZGFsLWZvb3RlcjphZnRlciB7CiAgICBjbGVhcjogYm90aDsgfQogIC5tb2RhbC1mb290ZXIgLmJ0biArIC5idG4gewogICAgbWFyZ2luLWxlZnQ6IDVweDsKICAgIG1hcmdpbi1ib3R0b206IDA7IH0KICAubW9kYWwtZm9vdGVyIC5idG4tZ3JvdXAgLmJ0biArIC5idG4gewogICAgbWFyZ2luLWxlZnQ6IC0xcHg7IH0KICAubW9kYWwtZm9vdGVyIC5idG4tYmxvY2sgKyAuYnRuLWJsb2NrIHsKICAgIG1hcmdpbi1sZWZ0OiAwOyB9CgoudG9vbHRpcCB7CiAgcG9zaXRpb246IGFic29sdXRlOwogIHotaW5kZXg6IDEwMzA7CiAgZGlzcGxheTogYmxvY2s7CiAgdmlzaWJpbGl0eTogdmlzaWJsZTsKICBwYWRkaW5nOiA1cHg7CiAgZm9udC1zaXplOiAxMXB4OwogIG9wYWNpdHk6IDA7CiAgZmlsdGVyOiBhbHBoYShvcGFjaXR5PTApOyB9CiAgLnRvb2x0aXAuaW4gewogICAgb3BhY2l0eTogMC44OwogICAgZmlsdGVyOiBhbHBoYShvcGFjaXR5PTgwKTsgfQogIC50b29sdGlwLnRvcCB7CiAgICBtYXJnaW4tdG9wOiAtM3B4OyB9CiAgLnRvb2x0aXAucmlnaHQgewogICAgbWFyZ2luLWxlZnQ6IDNweDsgfQogIC50b29sdGlwLmJvdHRvbSB7CiAgICBtYXJnaW4tdG9wOiAzcHg7IH0KICAudG9vbHRpcC5sZWZ0IHsKICAgIG1hcmdpbi1sZWZ0OiAtM3B4OyB9CgoudG9vbHRpcC1pbm5lciB7CiAgbWF4LXdpZHRoOiAyMDBweDsKICBwYWRkaW5nOiAzcHggOHB4OwogIGNvbG9yOiB3aGl0ZTsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgdGV4dC1kZWNvcmF0aW9uOiBub25lOwogIGJhY2tncm91bmQtY29sb3I6IGJsYWNrOwogIC13ZWJraXQtYm9yZGVyLXJhZGl1czogNHB4OwogIC1tb3otYm9yZGVyLXJhZGl1czogNHB4OwogIGJvcmRlci1yYWRpdXM6IDRweDsgfQoKLnRvb2x0aXAtYXJyb3cgewogIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICB3aWR0aDogMDsKICBoZWlnaHQ6IDA7CiAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudDsKICBib3JkZXItc3R5bGU6IHNvbGlkOyB9CgoudG9vbHRpcC50b3AgLnRvb2x0aXAtYXJyb3cgewogIGJvdHRvbTogMDsKICBsZWZ0OiA1MCU7CiAgbWFyZ2luLWxlZnQ6IC01cHg7CiAgYm9yZGVyLXdpZHRoOiA1cHggNXB4IDA7CiAgYm9yZGVyLXRvcC1jb2xvcjogYmxhY2s7IH0KLnRvb2x0aXAucmlnaHQgLnRvb2x0aXAtYXJyb3cgewogIHRvcDogNTAlOwogIGxlZnQ6IDA7CiAgbWFyZ2luLXRvcDogLTVweDsKICBib3JkZXItd2lkdGg6IDVweCA1cHggNXB4IDA7CiAgYm9yZGVyLXJpZ2h0LWNvbG9yOiBibGFjazsgfQoudG9vbHRpcC5sZWZ0IC50b29sdGlwLWFycm93IHsKICB0b3A6IDUwJTsKICByaWdodDogMDsKICBtYXJnaW4tdG9wOiAtNXB4OwogIGJvcmRlci13aWR0aDogNXB4IDAgNXB4IDVweDsKICBib3JkZXItbGVmdC1jb2xvcjogYmxhY2s7IH0KLnRvb2x0aXAuYm90dG9tIC50b29sdGlwLWFycm93IHsKICB0b3A6IDA7CiAgbGVmdDogNTAlOwogIG1hcmdpbi1sZWZ0OiAtNXB4OwogIGJvcmRlci13aWR0aDogMCA1cHggNXB4OwogIGJvcmRlci1ib3R0b20tY29sb3I6IGJsYWNrOyB9CgoucG9wb3ZlciB7CiAgcG9zaXRpb246IGFic29sdXRlOwogIHRvcDogMDsKICBsZWZ0OiAwOwogIHotaW5kZXg6IDEwMTA7CiAgZGlzcGxheTogbm9uZTsKICB3aWR0aDogMjM2cHg7CiAgcGFkZGluZzogMXB4OwogIGJhY2tncm91bmQtY29sb3I6IHdoaXRlOwogIC13ZWJraXQtYmFja2dyb3VuZC1jbGlwOiBwYWRkaW5nLWJveDsKICAtbW96LWJhY2tncm91bmQtY2xpcDogcGFkZGluZzsKICBiYWNrZ3JvdW5kLWNsaXA6IHBhZGRpbmctYm94OwogIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7CiAgYm9yZGVyOiAxcHggc29saWQgcmdiYSgwLCAwLCAwLCAwLjIpOwogIC13ZWJraXQtYm9yZGVyLXJhZGl1czogNnB4OwogIC1tb3otYm9yZGVyLXJhZGl1czogNnB4OwogIGJvcmRlci1yYWRpdXM6IDZweDsKICAtd2Via2l0LWJveC1zaGFkb3c6IDAgNXB4IDEwcHggcmdiYSgwLCAwLCAwLCAwLjIpOwogIC1tb3otYm94LXNoYWRvdzogMCA1cHggMTBweCByZ2JhKDAsIDAsIDAsIDAuMik7CiAgYm94LXNoYWRvdzogMCA1cHggMTBweCByZ2JhKDAsIDAsIDAsIDAuMik7IH0KICAucG9wb3Zlci50b3AgewogICAgbWFyZ2luLXRvcDogLTEwcHg7IH0KICAucG9wb3Zlci5yaWdodCB7CiAgICBtYXJnaW4tbGVmdDogMTBweDsgfQogIC5wb3BvdmVyLmJvdHRvbSB7CiAgICBtYXJnaW4tdG9wOiAxMHB4OyB9CiAgLnBvcG92ZXIubGVmdCB7CiAgICBtYXJnaW4tbGVmdDogLTEwcHg7IH0KCi5wb3BvdmVyLXRpdGxlIHsKICBtYXJnaW46IDA7CiAgcGFkZGluZzogOHB4IDE0cHg7CiAgZm9udC1zaXplOiAxNHB4OwogIGZvbnQtd2VpZ2h0OiBub3JtYWw7CiAgbGluZS1oZWlnaHQ6IDE4cHg7CiAgYmFja2dyb3VuZC1jb2xvcjogI2Y3ZjdmNzsKICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2ViZWJlYjsKICAtd2Via2l0LWJvcmRlci1yYWRpdXM6IDVweCA1cHggMCAwOwogIC1tb3otYm9yZGVyLXJhZGl1czogNXB4IDVweCAwIDA7CiAgYm9yZGVyLXJhZGl1czogNXB4IDVweCAwIDA7IH0KCi5wb3BvdmVyLWNvbnRlbnQgewogIHBhZGRpbmc6IDlweCAxNHB4OyB9CiAgLnBvcG92ZXItY29udGVudCBwLCAucG9wb3Zlci1jb250ZW50IHVsLCAucG9wb3Zlci1jb250ZW50IG9sIHsKICAgIG1hcmdpbi1ib3R0b206IDA7IH0KCi5wb3BvdmVyIC5hcnJvdywKLnBvcG92ZXIgLmFycm93OmFmdGVyIHsKICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgZGlzcGxheTogaW5saW5lLWJsb2NrOwogIHdpZHRoOiAwOwogIGhlaWdodDogMDsKICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50OwogIGJvcmRlci1zdHlsZTogc29saWQ7IH0KCi5wb3BvdmVyIC5hcnJvdzphZnRlciB7CiAgY29udGVudDogIiI7CiAgei1pbmRleDogLTE7IH0KCi5wb3BvdmVyLnRvcCAuYXJyb3cgewogIGJvdHRvbTogLTEwcHg7CiAgbGVmdDogNTAlOwogIG1hcmdpbi1sZWZ0OiAtMTBweDsKICBib3JkZXItd2lkdGg6IDEwcHggMTBweCAwOwogIGJvcmRlci10b3AtY29sb3I6IHdoaXRlOyB9CiAgLnBvcG92ZXIudG9wIC5hcnJvdzphZnRlciB7CiAgICBib3JkZXItd2lkdGg6IDExcHggMTFweCAwOwogICAgYm9yZGVyLXRvcC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjI1KTsKICAgIGJvdHRvbTogLTFweDsKICAgIGxlZnQ6IC0xMXB4OyB9Ci5wb3BvdmVyLnJpZ2h0IC5hcnJvdyB7CiAgdG9wOiA1MCU7CiAgbGVmdDogLTEwcHg7CiAgbWFyZ2luLXRvcDogLTEwcHg7CiAgYm9yZGVyLXdpZHRoOiAxMHB4IDEwcHggMTBweCAwOwogIGJvcmRlci1yaWdodC1jb2xvcjogd2hpdGU7IH0KICAucG9wb3Zlci5yaWdodCAuYXJyb3c6YWZ0ZXIgewogICAgYm9yZGVyLXdpZHRoOiAxMXB4IDExcHggMTFweCAwOwogICAgYm9yZGVyLXJpZ2h0LWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuMjUpOwogICAgYm90dG9tOiAtMTFweDsKICAgIGxlZnQ6IC0xcHg7IH0KLnBvcG92ZXIuYm90dG9tIC5hcnJvdyB7CiAgdG9wOiAtMTBweDsKICBsZWZ0OiA1MCU7CiAgbWFyZ2luLWxlZnQ6IC0xMHB4OwogIGJvcmRlci13aWR0aDogMCAxMHB4IDEwcHg7CiAgYm9yZGVyLWJvdHRvbS1jb2xvcjogd2hpdGU7IH0KICAucG9wb3Zlci5ib3R0b20gLmFycm93OmFmdGVyIHsKICAgIGJvcmRlci13aWR0aDogMCAxMXB4IDExcHg7CiAgICBib3JkZXItYm90dG9tLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuMjUpOwogICAgdG9wOiAtMXB4OwogICAgbGVmdDogLTExcHg7IH0KLnBvcG92ZXIubGVmdCAuYXJyb3cgewogIHRvcDogNTAlOwogIHJpZ2h0OiAtMTBweDsKICBtYXJnaW4tdG9wOiAtMTBweDsKICBib3JkZXItd2lkdGg6IDEwcHggMCAxMHB4IDEwcHg7CiAgYm9yZGVyLWxlZnQtY29sb3I6IHdoaXRlOyB9CiAgLnBvcG92ZXIubGVmdCAuYXJyb3c6YWZ0ZXIgewogICAgYm9yZGVyLXdpZHRoOiAxMXB4IDAgMTFweCAxMXB4OwogICAgYm9yZGVyLWxlZnQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC4yNSk7CiAgICBib3R0b206IC0xMXB4OwogICAgcmlnaHQ6IC0xcHg7IH0KCi50aHVtYm5haWxzIHsKICBtYXJnaW4tbGVmdDogLTIwcHg7CiAgbGlzdC1zdHlsZTogbm9uZTsKICAqem9vbTogMTsgfQogIC50aHVtYm5haWxzOmJlZm9yZSwgLnRodW1ibmFpbHM6YWZ0ZXIgewogICAgZGlzcGxheTogdGFibGU7CiAgICBjb250ZW50OiAiIjsKICAgIGxpbmUtaGVpZ2h0OiAwOyB9CiAgLnRodW1ibmFpbHM6YWZ0ZXIgewogICAgY2xlYXI6IGJvdGg7IH0KCi5yb3ctZmx1aWQgLnRodW1ibmFpbHMgewogIG1hcmdpbi1sZWZ0OiAwOyB9CgoudGh1bWJuYWlscyA+IGxpIHsKICBmbG9hdDogbGVmdDsKICBtYXJnaW4tYm90dG9tOiAyMHB4OwogIG1hcmdpbi1sZWZ0OiAyMHB4OyB9CgoudGh1bWJuYWlsIHsKICBkaXNwbGF5OiBibG9jazsKICBwYWRkaW5nOiA0cHg7CiAgbGluZS1oZWlnaHQ6IDIwcHg7CiAgYm9yZGVyOiAxcHggc29saWQgI2RkZDsKICAtd2Via2l0LWJvcmRlci1yYWRpdXM6IDRweDsKICAtbW96LWJvcmRlci1yYWRpdXM6IDRweDsKICBib3JkZXItcmFkaXVzOiA0cHg7CiAgLXdlYmtpdC1ib3gtc2hhZG93OiAwIDFweCAzcHggcmdiYSgwLCAwLCAwLCAwLjA1NSk7CiAgLW1vei1ib3gtc2hhZG93OiAwIDFweCAzcHggcmdiYSgwLCAwLCAwLCAwLjA1NSk7CiAgYm94LXNoYWRvdzogMCAxcHggM3B4IHJnYmEoMCwgMCwgMCwgMC4wNTUpOwogIC13ZWJraXQtdHJhbnNpdGlvbjogYWxsIDAuMnMgZWFzZS1pbi1vdXQ7CiAgLW1vei10cmFuc2l0aW9uOiBhbGwgMC4ycyBlYXNlLWluLW91dDsKICAtby10cmFuc2l0aW9uOiBhbGwgMC4ycyBlYXNlLWluLW91dDsKICB0cmFuc2l0aW9uOiBhbGwgMC4ycyBlYXNlLWluLW91dDsgfQoKYS50aHVtYm5haWw6aG92ZXIgewogIGJvcmRlci1jb2xvcjogIzAwMDBlZTsKICAtd2Via2l0LWJveC1zaGFkb3c6IDAgMXB4IDRweCByZ2JhKDAsIDEwNSwgMjE0LCAwLjI1KTsKICAtbW96LWJveC1zaGFkb3c6IDAgMXB4IDRweCByZ2JhKDAsIDEwNSwgMjE0LCAwLjI1KTsKICBib3gtc2hhZG93OiAwIDFweCA0cHggcmdiYSgwLCAxMDUsIDIxNCwgMC4yNSk7IH0KCi50aHVtYm5haWwgPiBpbWcgewogIGRpc3BsYXk6IGJsb2NrOwogIG1heC13aWR0aDogMTAwJTsKICBtYXJnaW4tbGVmdDogYXV0bzsKICBtYXJnaW4tcmlnaHQ6IGF1dG87IH0KCi50aHVtYm5haWwgLmNhcHRpb24gewogIHBhZGRpbmc6IDlweDsKICBjb2xvcjogIzU1NTU1NTsgfQoKLm1lZGlhLAoubWVkaWEtYm9keSB7CiAgb3ZlcmZsb3c6IGhpZGRlbjsKICAqb3ZlcmZsb3c6IHZpc2libGU7CiAgem9vbTogMTsgfQoKLm1lZGlhLAoubWVkaWEgLm1lZGlhIHsKICBtYXJnaW4tdG9wOiAxNXB4OyB9CgoubWVkaWE6Zmlyc3QtY2hpbGQgewogIG1hcmdpbi10b3A6IDA7IH0KCi5tZWRpYS1vYmplY3QgewogIGRpc3BsYXk6IGJsb2NrOyB9CgoubWVkaWEtaGVhZGluZyB7CiAgbWFyZ2luOiAwIDAgNXB4OyB9CgoubWVkaWEgLnB1bGwtbGVmdCB7CiAgbWFyZ2luLXJpZ2h0OiAxMHB4OyB9CgoubWVkaWEgLnB1bGwtcmlnaHQgewogIG1hcmdpbi1sZWZ0OiAxMHB4OyB9CgoubWVkaWEtbGlzdCB7CiAgbWFyZ2luLWxlZnQ6IDA7CiAgbGlzdC1zdHlsZTogbm9uZTsgfQoKLmxhYmVsLAouYmFkZ2UgewogIGRpc3BsYXk6IGlubGluZS1ibG9jazsKICBwYWRkaW5nOiAycHggNHB4OwogIGZvbnQtc2l6ZTogMTEuODQ0cHg7CiAgZm9udC13ZWlnaHQ6IGJvbGQ7CiAgbGluZS1oZWlnaHQ6IDE0cHg7CiAgY29sb3I6IHdoaXRlOwogIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTsKICB3aGl0ZS1zcGFjZTogbm93cmFwOwogIHRleHQtc2hhZG93OiAwIC0xcHggMCByZ2JhKDAsIDAsIDAsIDAuMjUpOwogIGJhY2tncm91bmQtY29sb3I6ICM5OTk5OTk7IH0KCi5sYWJlbCB7CiAgLXdlYmtpdC1ib3JkZXItcmFkaXVzOiAzcHg7CiAgLW1vei1ib3JkZXItcmFkaXVzOiAzcHg7CiAgYm9yZGVyLXJhZGl1czogM3B4OyB9CgouYmFkZ2UgewogIHBhZGRpbmctbGVmdDogOXB4OwogIHBhZGRpbmctcmlnaHQ6IDlweDsKICAtd2Via2l0LWJvcmRlci1yYWRpdXM6IDlweDsKICAtbW96LWJvcmRlci1yYWRpdXM6IDlweDsKICBib3JkZXItcmFkaXVzOiA5cHg7IH0KCmEubGFiZWw6aG92ZXIsIGEuYmFkZ2U6aG92ZXIgewogIGNvbG9yOiB3aGl0ZTsKICB0ZXh0LWRlY29yYXRpb246IG5vbmU7CiAgY3Vyc29yOiBwb2ludGVyOyB9CgoubGFiZWwtaW1wb3J0YW50LCAuYmFkZ2UtaW1wb3J0YW50IHsKICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTsgfQoKLmxhYmVsLWltcG9ydGFudFtocmVmXSwgLmJhZGdlLWltcG9ydGFudFtocmVmXSB7CiAgYmFja2dyb3VuZC1jb2xvcjogI2U2ZTZlNjsgfQoKLmxhYmVsLXdhcm5pbmcsIC5iYWRnZS13YXJuaW5nIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjg5NDA2OyB9CgoubGFiZWwtd2FybmluZ1tocmVmXSwgLmJhZGdlLXdhcm5pbmdbaHJlZl0gewogIGJhY2tncm91bmQtY29sb3I6ICNjNjc2MDU7IH0KCi5sYWJlbC1zdWNjZXNzLCAuYmFkZ2Utc3VjY2VzcyB7CiAgYmFja2dyb3VuZC1jb2xvcjogIzQ2ODg0NzsgfQoKLmxhYmVsLXN1Y2Nlc3NbaHJlZl0sIC5iYWRnZS1zdWNjZXNzW2hyZWZdIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzU2NjM1OyB9CgoubGFiZWwtaW5mbywgLmJhZGdlLWluZm8gewogIGJhY2tncm91bmQtY29sb3I6ICMzMzMzMzM7IH0KCi5sYWJlbC1pbmZvW2hyZWZdLCAuYmFkZ2UtaW5mb1tocmVmXSB7CiAgYmFja2dyb3VuZC1jb2xvcjogIzFhMWExYTsgfQoKLmxhYmVsLWludmVyc2UsIC5iYWRnZS1pbnZlcnNlIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzMzMzMzOyB9CgoubGFiZWwtaW52ZXJzZVtocmVmXSwgLmJhZGdlLWludmVyc2VbaHJlZl0gewogIGJhY2tncm91bmQtY29sb3I6ICMxYTFhMWE7IH0KCi5idG4gLmxhYmVsLAouYnRuIC5iYWRnZSB7CiAgcG9zaXRpb246IHJlbGF0aXZlOwogIHRvcDogLTFweDsgfQoKLmJ0bi1taW5pIC5sYWJlbCwKLmJ0bi1taW5pIC5iYWRnZSB7CiAgdG9wOiAwOyB9CgpALXdlYmtpdC1rZXlmcmFtZXMgcHJvZ3Jlc3MtYmFyLXN0cmlwZXMgewogIGZyb20gewogICAgYmFja2dyb3VuZC1wb3NpdGlvbjogNDBweCAwOyB9CgogIHRvIHsKICAgIGJhY2tncm91bmQtcG9zaXRpb246IDAgMDsgfSB9CgpALW1vei1rZXlmcmFtZXMgcHJvZ3Jlc3MtYmFyLXN0cmlwZXMgewogIGZyb20gewogICAgYmFja2dyb3VuZC1wb3NpdGlvbjogNDBweCAwOyB9CgogIHRvIHsKICAgIGJhY2tncm91bmQtcG9zaXRpb246IDAgMDsgfSB9CgpALW1zLWtleWZyYW1lcyBwcm9ncmVzcy1iYXItc3RyaXBlcyB7CiAgZnJvbSB7CiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiA0MHB4IDA7IH0KCiAgdG8gewogICAgYmFja2dyb3VuZC1wb3NpdGlvbjogMCAwOyB9IH0KCkAtby1rZXlmcmFtZXMgcHJvZ3Jlc3MtYmFyLXN0cmlwZXMgewogIGZyb20gewogICAgYmFja2dyb3VuZC1wb3NpdGlvbjogMCAwOyB9CgogIHRvIHsKICAgIGJhY2tncm91bmQtcG9zaXRpb246IDQwcHggMDsgfSB9CgpAa2V5ZnJhbWVzIHByb2dyZXNzLWJhci1zdHJpcGVzIHsKICBmcm9tIHsKICAgIGJhY2tncm91bmQtcG9zaXRpb246IDQwcHggMDsgfQoKICB0byB7CiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAwIDA7IH0gfQoKLnByb2dyZXNzIHsKICBvdmVyZmxvdzogaGlkZGVuOwogIGhlaWdodDogMjBweDsKICBtYXJnaW4tYm90dG9tOiAyMHB4OwogIGJhY2tncm91bmQtY29sb3I6ICNmNmY2ZjY7CiAgYmFja2dyb3VuZC1pbWFnZTogLW1vei1saW5lYXItZ3JhZGllbnQodG9wLCB3aGl0ZXNtb2tlLCAjZjlmOWY5KTsKICBiYWNrZ3JvdW5kLWltYWdlOiAtd2Via2l0LWdyYWRpZW50KGxpbmVhciwgMCAwLCAwIDEwMCUsIGZyb20od2hpdGVzbW9rZSksIHRvKCNmOWY5ZjkpKTsKICBiYWNrZ3JvdW5kLWltYWdlOiAtd2Via2l0LWxpbmVhci1ncmFkaWVudCh0b3AsIHdoaXRlc21va2UsICNmOWY5ZjkpOwogIGJhY2tncm91bmQtaW1hZ2U6IC1vLWxpbmVhci1ncmFkaWVudCh0b3AsIHdoaXRlc21va2UsICNmOWY5ZjkpOwogIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCh0byBib3R0b20sIHdoaXRlc21va2UsICNmOWY5ZjkpOwogIGJhY2tncm91bmQtcmVwZWF0OiByZXBlYXQteDsKICBmaWx0ZXI6IHByb2dpZDpEWEltYWdlVHJhbnNmb3JtLk1pY3Jvc29mdC5ncmFkaWVudChzdGFydENvbG9yc3RyPScjRkZGNUY1RjUnLCBlbmRDb2xvcnN0cj0nI0ZGRjlGOUY5JywgR3JhZGllbnRUeXBlPTApOwogIC13ZWJraXQtYm94LXNoYWRvdzogaW5zZXQgMCAxcHggMnB4IHJnYmEoMCwgMCwgMCwgMC4xKTsKICAtbW96LWJveC1zaGFkb3c6IGluc2V0IDAgMXB4IDJweCByZ2JhKDAsIDAsIDAsIDAuMSk7CiAgYm94LXNoYWRvdzogaW5zZXQgMCAxcHggMnB4IHJnYmEoMCwgMCwgMCwgMC4xKTsKICAtd2Via2l0LWJvcmRlci1yYWRpdXM6IDRweDsKICAtbW96LWJvcmRlci1yYWRpdXM6IDRweDsKICBib3JkZXItcmFkaXVzOiA0cHg7IH0KCi5wcm9ncmVzcyAuYmFyIHsKICB3aWR0aDogMCU7CiAgaGVpZ2h0OiAxMDAlOwogIGNvbG9yOiB3aGl0ZTsKICBmbG9hdDogbGVmdDsKICBmb250LXNpemU6IDEycHg7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIHRleHQtc2hhZG93OiAwIC0xcHggMCByZ2JhKDAsIDAsIDAsIDAuMjUpOwogIGJhY2tncm91bmQtY29sb3I6ICMwZTkwZDI7CiAgYmFja2dyb3VuZC1pbWFnZTogLW1vei1saW5lYXItZ3JhZGllbnQodG9wLCAjMTQ5YmRmLCAjMDQ4MGJlKTsKICBiYWNrZ3JvdW5kLWltYWdlOiAtd2Via2l0LWdyYWRpZW50KGxpbmVhciwgMCAwLCAwIDEwMCUsIGZyb20oIzE0OWJkZiksIHRvKCMwNDgwYmUpKTsKICBiYWNrZ3JvdW5kLWltYWdlOiAtd2Via2l0LWxpbmVhci1ncmFkaWVudCh0b3AsICMxNDliZGYsICMwNDgwYmUpOwogIGJhY2tncm91bmQtaW1hZ2U6IC1vLWxpbmVhci1ncmFkaWVudCh0b3AsICMxNDliZGYsICMwNDgwYmUpOwogIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCh0byBib3R0b20sICMxNDliZGYsICMwNDgwYmUpOwogIGJhY2tncm91bmQtcmVwZWF0OiByZXBlYXQteDsKICBmaWx0ZXI6IHByb2dpZDpEWEltYWdlVHJhbnNmb3JtLk1pY3Jvc29mdC5ncmFkaWVudChzdGFydENvbG9yc3RyPScjRkYxNDlCREYnLCBlbmRDb2xvcnN0cj0nI0ZGMDQ4MEJFJywgR3JhZGllbnRUeXBlPTApOwogIC13ZWJraXQtYm94LXNoYWRvdzogaW5zZXQgMCAtMXB4IDAgcmdiYSgwLCAwLCAwLCAwLjE1KTsKICAtbW96LWJveC1zaGFkb3c6IGluc2V0IDAgLTFweCAwIHJnYmEoMCwgMCwgMCwgMC4xNSk7CiAgYm94LXNoYWRvdzogaW5zZXQgMCAtMXB4IDAgcmdiYSgwLCAwLCAwLCAwLjE1KTsKICAtd2Via2l0LWJveC1zaXppbmc6IGJvcmRlci1ib3g7CiAgLW1vei1ib3gtc2l6aW5nOiBib3JkZXItYm94OwogIGJveC1zaXppbmc6IGJvcmRlci1ib3g7CiAgLXdlYmtpdC10cmFuc2l0aW9uOiB3aWR0aCAwLjZzIGVhc2U7CiAgLW1vei10cmFuc2l0aW9uOiB3aWR0aCAwLjZzIGVhc2U7CiAgLW8tdHJhbnNpdGlvbjogd2lkdGggMC42cyBlYXNlOwogIHRyYW5zaXRpb246IHdpZHRoIDAuNnMgZWFzZTsgfQoKLnByb2dyZXNzIC5iYXIgKyAuYmFyIHsKICAtd2Via2l0LWJveC1zaGFkb3c6IGluc2V0IDFweCAwIDAgcmdiYSgwLCAwLCAwLCAwLjE1KSwgaW5zZXQgMCAtMXB4IDAgcmdiYSgwLCAwLCAwLCAwLjE1KTsKICAtbW96LWJveC1zaGFkb3c6IGluc2V0IDFweCAwIDAgcmdiYSgwLCAwLCAwLCAwLjE1KSwgaW5zZXQgMCAtMXB4IDAgcmdiYSgwLCAwLCAwLCAwLjE1KTsKICBib3gtc2hhZG93OiBpbnNldCAxcHggMCAwIHJnYmEoMCwgMCwgMCwgMC4xNSksIGluc2V0IDAgLTFweCAwIHJnYmEoMCwgMCwgMCwgMC4xNSk7IH0KCi5wcm9ncmVzcy1zdHJpcGVkIC5iYXIgewogIGJhY2tncm91bmQtY29sb3I6ICMxNDliZGY7CiAgYmFja2dyb3VuZC1pbWFnZTogLXdlYmtpdC1ncmFkaWVudChsaW5lYXIsIDAgMTAwJSwgMTAwJSAwLCBjb2xvci1zdG9wKDAuMjUsIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4xNSkpLCBjb2xvci1zdG9wKDAuMjUsIHRyYW5zcGFyZW50KSwgY29sb3Itc3RvcCgwLjUsIHRyYW5zcGFyZW50KSwgY29sb3Itc3RvcCgwLjUsIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4xNSkpLCBjb2xvci1zdG9wKDAuNzUsIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4xNSkpLCBjb2xvci1zdG9wKDAuNzUsIHRyYW5zcGFyZW50KSwgdG8odHJhbnNwYXJlbnQpKTsKICBiYWNrZ3JvdW5kLWltYWdlOiAtd2Via2l0LWxpbmVhci1ncmFkaWVudCg0NWRlZywgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjE1KSAyNSUsIHRyYW5zcGFyZW50IDI1JSwgdHJhbnNwYXJlbnQgNTAlLCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMTUpIDUwJSwgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjE1KSA3NSUsIHRyYW5zcGFyZW50IDc1JSwgdHJhbnNwYXJlbnQpOwogIGJhY2tncm91bmQtaW1hZ2U6IC1tb3otbGluZWFyLWdyYWRpZW50KDQ1ZGVnLCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMTUpIDI1JSwgdHJhbnNwYXJlbnQgMjUlLCB0cmFuc3BhcmVudCA1MCUsIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4xNSkgNTAlLCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMTUpIDc1JSwgdHJhbnNwYXJlbnQgNzUlLCB0cmFuc3BhcmVudCk7CiAgYmFja2dyb3VuZC1pbWFnZTogLW8tbGluZWFyLWdyYWRpZW50KDQ1ZGVnLCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMTUpIDI1JSwgdHJhbnNwYXJlbnQgMjUlLCB0cmFuc3BhcmVudCA1MCUsIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4xNSkgNTAlLCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMTUpIDc1JSwgdHJhbnNwYXJlbnQgNzUlLCB0cmFuc3BhcmVudCk7CiAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KDQ1ZGVnLCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMTUpIDI1JSwgdHJhbnNwYXJlbnQgMjUlLCB0cmFuc3BhcmVudCA1MCUsIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4xNSkgNTAlLCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMTUpIDc1JSwgdHJhbnNwYXJlbnQgNzUlLCB0cmFuc3BhcmVudCk7CiAgLXdlYmtpdC1iYWNrZ3JvdW5kLXNpemU6IDQwcHggNDBweDsKICAtbW96LWJhY2tncm91bmQtc2l6ZTogNDBweCA0MHB4OwogIC1vLWJhY2tncm91bmQtc2l6ZTogNDBweCA0MHB4OwogIGJhY2tncm91bmQtc2l6ZTogNDBweCA0MHB4OyB9CgoucHJvZ3Jlc3MuYWN0aXZlIC5iYXIgewogIC13ZWJraXQtYW5pbWF0aW9uOiBwcm9ncmVzcy1iYXItc3RyaXBlcyAycyBsaW5lYXIgaW5maW5pdGU7CiAgLW1vei1hbmltYXRpb246IHByb2dyZXNzLWJhci1zdHJpcGVzIDJzIGxpbmVhciBpbmZpbml0ZTsKICAtbXMtYW5pbWF0aW9uOiBwcm9ncmVzcy1iYXItc3RyaXBlcyAycyBsaW5lYXIgaW5maW5pdGU7CiAgLW8tYW5pbWF0aW9uOiBwcm9ncmVzcy1iYXItc3RyaXBlcyAycyBsaW5lYXIgaW5maW5pdGU7CiAgYW5pbWF0aW9uOiBwcm9ncmVzcy1iYXItc3RyaXBlcyAycyBsaW5lYXIgaW5maW5pdGU7IH0KCi5wcm9ncmVzcy1kYW5nZXIgLmJhciwgLnByb2dyZXNzIC5iYXItZGFuZ2VyIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZGU1MTRjOwogIGJhY2tncm91bmQtaW1hZ2U6IC1tb3otbGluZWFyLWdyYWRpZW50KHRvcCwgI2VlNWY1YiwgI2M0M2MzNSk7CiAgYmFja2dyb3VuZC1pbWFnZTogLXdlYmtpdC1ncmFkaWVudChsaW5lYXIsIDAgMCwgMCAxMDAlLCBmcm9tKCNlZTVmNWIpLCB0bygjYzQzYzM1KSk7CiAgYmFja2dyb3VuZC1pbWFnZTogLXdlYmtpdC1saW5lYXItZ3JhZGllbnQodG9wLCAjZWU1ZjViLCAjYzQzYzM1KTsKICBiYWNrZ3JvdW5kLWltYWdlOiAtby1saW5lYXItZ3JhZGllbnQodG9wLCAjZWU1ZjViLCAjYzQzYzM1KTsKICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLCAjZWU1ZjViLCAjYzQzYzM1KTsKICBiYWNrZ3JvdW5kLXJlcGVhdDogcmVwZWF0LXg7CiAgZmlsdGVyOiBwcm9naWQ6RFhJbWFnZVRyYW5zZm9ybS5NaWNyb3NvZnQuZ3JhZGllbnQoc3RhcnRDb2xvcnN0cj0nI0ZGRUU1RjVCJywgZW5kQ29sb3JzdHI9JyNGRkM0M0MzNScsIEdyYWRpZW50VHlwZT0wKTsgfQoKLnByb2dyZXNzLWRhbmdlci5wcm9ncmVzcy1zdHJpcGVkIC5iYXIsIC5wcm9ncmVzcy1zdHJpcGVkIC5iYXItZGFuZ2VyIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWU1ZjViOwogIGJhY2tncm91bmQtaW1hZ2U6IC13ZWJraXQtZ3JhZGllbnQobGluZWFyLCAwIDEwMCUsIDEwMCUgMCwgY29sb3Itc3RvcCgwLjI1LCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMTUpKSwgY29sb3Itc3RvcCgwLjI1LCB0cmFuc3BhcmVudCksIGNvbG9yLXN0b3AoMC41LCB0cmFuc3BhcmVudCksIGNvbG9yLXN0b3AoMC41LCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMTUpKSwgY29sb3Itc3RvcCgwLjc1LCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMTUpKSwgY29sb3Itc3RvcCgwLjc1LCB0cmFuc3BhcmVudCksIHRvKHRyYW5zcGFyZW50KSk7CiAgYmFja2dyb3VuZC1pbWFnZTogLXdlYmtpdC1saW5lYXItZ3JhZGllbnQoNDVkZWcsIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4xNSkgMjUlLCB0cmFuc3BhcmVudCAyNSUsIHRyYW5zcGFyZW50IDUwJSwgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjE1KSA1MCUsIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4xNSkgNzUlLCB0cmFuc3BhcmVudCA3NSUsIHRyYW5zcGFyZW50KTsKICBiYWNrZ3JvdW5kLWltYWdlOiAtbW96LWxpbmVhci1ncmFkaWVudCg0NWRlZywgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjE1KSAyNSUsIHRyYW5zcGFyZW50IDI1JSwgdHJhbnNwYXJlbnQgNTAlLCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMTUpIDUwJSwgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjE1KSA3NSUsIHRyYW5zcGFyZW50IDc1JSwgdHJhbnNwYXJlbnQpOwogIGJhY2tncm91bmQtaW1hZ2U6IC1vLWxpbmVhci1ncmFkaWVudCg0NWRlZywgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjE1KSAyNSUsIHRyYW5zcGFyZW50IDI1JSwgdHJhbnNwYXJlbnQgNTAlLCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMTUpIDUwJSwgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjE1KSA3NSUsIHRyYW5zcGFyZW50IDc1JSwgdHJhbnNwYXJlbnQpOwogIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCg0NWRlZywgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjE1KSAyNSUsIHRyYW5zcGFyZW50IDI1JSwgdHJhbnNwYXJlbnQgNTAlLCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMTUpIDUwJSwgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjE1KSA3NSUsIHRyYW5zcGFyZW50IDc1JSwgdHJhbnNwYXJlbnQpOyB9CgoucHJvZ3Jlc3Mtc3VjY2VzcyAuYmFyLCAucHJvZ3Jlc3MgLmJhci1zdWNjZXNzIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjNWRiOTVkOwogIGJhY2tncm91bmQtaW1hZ2U6IC1tb3otbGluZWFyLWdyYWRpZW50KHRvcCwgIzYyYzQ2MiwgIzU3YTk1Nyk7CiAgYmFja2dyb3VuZC1pbWFnZTogLXdlYmtpdC1ncmFkaWVudChsaW5lYXIsIDAgMCwgMCAxMDAlLCBmcm9tKCM2MmM0NjIpLCB0bygjNTdhOTU3KSk7CiAgYmFja2dyb3VuZC1pbWFnZTogLXdlYmtpdC1saW5lYXItZ3JhZGllbnQodG9wLCAjNjJjNDYyLCAjNTdhOTU3KTsKICBiYWNrZ3JvdW5kLWltYWdlOiAtby1saW5lYXItZ3JhZGllbnQodG9wLCAjNjJjNDYyLCAjNTdhOTU3KTsKICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLCAjNjJjNDYyLCAjNTdhOTU3KTsKICBiYWNrZ3JvdW5kLXJlcGVhdDogcmVwZWF0LXg7CiAgZmlsdGVyOiBwcm9naWQ6RFhJbWFnZVRyYW5zZm9ybS5NaWNyb3NvZnQuZ3JhZGllbnQoc3RhcnRDb2xvcnN0cj0nI0ZGNjJDNDYyJywgZW5kQ29sb3JzdHI9JyNGRjU3QTk1NycsIEdyYWRpZW50VHlwZT0wKTsgfQoKLnByb2dyZXNzLXN1Y2Nlc3MucHJvZ3Jlc3Mtc3RyaXBlZCAuYmFyLCAucHJvZ3Jlc3Mtc3RyaXBlZCAuYmFyLXN1Y2Nlc3MgewogIGJhY2tncm91bmQtY29sb3I6ICM2MmM0NjI7CiAgYmFja2dyb3VuZC1pbWFnZTogLXdlYmtpdC1ncmFkaWVudChsaW5lYXIsIDAgMTAwJSwgMTAwJSAwLCBjb2xvci1zdG9wKDAuMjUsIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4xNSkpLCBjb2xvci1zdG9wKDAuMjUsIHRyYW5zcGFyZW50KSwgY29sb3Itc3RvcCgwLjUsIHRyYW5zcGFyZW50KSwgY29sb3Itc3RvcCgwLjUsIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4xNSkpLCBjb2xvci1zdG9wKDAuNzUsIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4xNSkpLCBjb2xvci1zdG9wKDAuNzUsIHRyYW5zcGFyZW50KSwgdG8odHJhbnNwYXJlbnQpKTsKICBiYWNrZ3JvdW5kLWltYWdlOiAtd2Via2l0LWxpbmVhci1ncmFkaWVudCg0NWRlZywgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjE1KSAyNSUsIHRyYW5zcGFyZW50IDI1JSwgdHJhbnNwYXJlbnQgNTAlLCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMTUpIDUwJSwgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjE1KSA3NSUsIHRyYW5zcGFyZW50IDc1JSwgdHJhbnNwYXJlbnQpOwogIGJhY2tncm91bmQtaW1hZ2U6IC1tb3otbGluZWFyLWdyYWRpZW50KDQ1ZGVnLCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMTUpIDI1JSwgdHJhbnNwYXJlbnQgMjUlLCB0cmFuc3BhcmVudCA1MCUsIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4xNSkgNTAlLCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMTUpIDc1JSwgdHJhbnNwYXJlbnQgNzUlLCB0cmFuc3BhcmVudCk7CiAgYmFja2dyb3VuZC1pbWFnZTogLW8tbGluZWFyLWdyYWRpZW50KDQ1ZGVnLCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMTUpIDI1JSwgdHJhbnNwYXJlbnQgMjUlLCB0cmFuc3BhcmVudCA1MCUsIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4xNSkgNTAlLCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMTUpIDc1JSwgdHJhbnNwYXJlbnQgNzUlLCB0cmFuc3BhcmVudCk7CiAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KDQ1ZGVnLCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMTUpIDI1JSwgdHJhbnNwYXJlbnQgMjUlLCB0cmFuc3BhcmVudCA1MCUsIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4xNSkgNTAlLCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMTUpIDc1JSwgdHJhbnNwYXJlbnQgNzUlLCB0cmFuc3BhcmVudCk7IH0KCi5wcm9ncmVzcy1pbmZvIC5iYXIsIC5wcm9ncmVzcyAuYmFyLWluZm8gewogIGJhY2tncm91bmQtY29sb3I6ICM0Y2IyZDA7CiAgYmFja2dyb3VuZC1pbWFnZTogLW1vei1saW5lYXItZ3JhZGllbnQodG9wLCAjNWJjMGRlLCAjMzM5YmI5KTsKICBiYWNrZ3JvdW5kLWltYWdlOiAtd2Via2l0LWdyYWRpZW50KGxpbmVhciwgMCAwLCAwIDEwMCUsIGZyb20oIzViYzBkZSksIHRvKCMzMzliYjkpKTsKICBiYWNrZ3JvdW5kLWltYWdlOiAtd2Via2l0LWxpbmVhci1ncmFkaWVudCh0b3AsICM1YmMwZGUsICMzMzliYjkpOwogIGJhY2tncm91bmQtaW1hZ2U6IC1vLWxpbmVhci1ncmFkaWVudCh0b3AsICM1YmMwZGUsICMzMzliYjkpOwogIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCh0byBib3R0b20sICM1YmMwZGUsICMzMzliYjkpOwogIGJhY2tncm91bmQtcmVwZWF0OiByZXBlYXQteDsKICBmaWx0ZXI6IHByb2dpZDpEWEltYWdlVHJhbnNmb3JtLk1pY3Jvc29mdC5ncmFkaWVudChzdGFydENvbG9yc3RyPScjRkY1QkMwREUnLCBlbmRDb2xvcnN0cj0nI0ZGMzM5QkI5JywgR3JhZGllbnRUeXBlPTApOyB9CgoucHJvZ3Jlc3MtaW5mby5wcm9ncmVzcy1zdHJpcGVkIC5iYXIsIC5wcm9ncmVzcy1zdHJpcGVkIC5iYXItaW5mbyB7CiAgYmFja2dyb3VuZC1jb2xvcjogIzViYzBkZTsKICBiYWNrZ3JvdW5kLWltYWdlOiAtd2Via2l0LWdyYWRpZW50KGxpbmVhciwgMCAxMDAlLCAxMDAlIDAsIGNvbG9yLXN0b3AoMC4yNSwgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjE1KSksIGNvbG9yLXN0b3AoMC4yNSwgdHJhbnNwYXJlbnQpLCBjb2xvci1zdG9wKDAuNSwgdHJhbnNwYXJlbnQpLCBjb2xvci1zdG9wKDAuNSwgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjE1KSksIGNvbG9yLXN0b3AoMC43NSwgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjE1KSksIGNvbG9yLXN0b3AoMC43NSwgdHJhbnNwYXJlbnQpLCB0byh0cmFuc3BhcmVudCkpOwogIGJhY2tncm91bmQtaW1hZ2U6IC13ZWJraXQtbGluZWFyLWdyYWRpZW50KDQ1ZGVnLCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMTUpIDI1JSwgdHJhbnNwYXJlbnQgMjUlLCB0cmFuc3BhcmVudCA1MCUsIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4xNSkgNTAlLCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMTUpIDc1JSwgdHJhbnNwYXJlbnQgNzUlLCB0cmFuc3BhcmVudCk7CiAgYmFja2dyb3VuZC1pbWFnZTogLW1vei1saW5lYXItZ3JhZGllbnQoNDVkZWcsIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4xNSkgMjUlLCB0cmFuc3BhcmVudCAyNSUsIHRyYW5zcGFyZW50IDUwJSwgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjE1KSA1MCUsIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4xNSkgNzUlLCB0cmFuc3BhcmVudCA3NSUsIHRyYW5zcGFyZW50KTsKICBiYWNrZ3JvdW5kLWltYWdlOiAtby1saW5lYXItZ3JhZGllbnQoNDVkZWcsIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4xNSkgMjUlLCB0cmFuc3BhcmVudCAyNSUsIHRyYW5zcGFyZW50IDUwJSwgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjE1KSA1MCUsIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4xNSkgNzUlLCB0cmFuc3BhcmVudCA3NSUsIHRyYW5zcGFyZW50KTsKICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQoNDVkZWcsIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4xNSkgMjUlLCB0cmFuc3BhcmVudCAyNSUsIHRyYW5zcGFyZW50IDUwJSwgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjE1KSA1MCUsIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4xNSkgNzUlLCB0cmFuc3BhcmVudCA3NSUsIHRyYW5zcGFyZW50KTsgfQoKLnByb2dyZXNzLXdhcm5pbmcgLmJhciwgLnByb2dyZXNzIC5iYXItd2FybmluZyB7CiAgYmFja2dyb3VuZC1jb2xvcjogI2Y5YTgzNDsKICBiYWNrZ3JvdW5kLWltYWdlOiAtbW96LWxpbmVhci1ncmFkaWVudCh0b3AsICNmYmI0NTAsICNmODk0MDYpOwogIGJhY2tncm91bmQtaW1hZ2U6IC13ZWJraXQtZ3JhZGllbnQobGluZWFyLCAwIDAsIDAgMTAwJSwgZnJvbSgjZmJiNDUwKSwgdG8oI2Y4OTQwNikpOwogIGJhY2tncm91bmQtaW1hZ2U6IC13ZWJraXQtbGluZWFyLWdyYWRpZW50KHRvcCwgI2ZiYjQ1MCwgI2Y4OTQwNik7CiAgYmFja2dyb3VuZC1pbWFnZTogLW8tbGluZWFyLWdyYWRpZW50KHRvcCwgI2ZiYjQ1MCwgI2Y4OTQwNik7CiAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KHRvIGJvdHRvbSwgI2ZiYjQ1MCwgI2Y4OTQwNik7CiAgYmFja2dyb3VuZC1yZXBlYXQ6IHJlcGVhdC14OwogIGZpbHRlcjogcHJvZ2lkOkRYSW1hZ2VUcmFuc2Zvcm0uTWljcm9zb2Z0LmdyYWRpZW50KHN0YXJ0Q29sb3JzdHI9JyNGRkZCQjQ1MCcsIGVuZENvbG9yc3RyPScjRkZGODk0MDYnLCBHcmFkaWVudFR5cGU9MCk7IH0KCi5wcm9ncmVzcy13YXJuaW5nLnByb2dyZXNzLXN0cmlwZWQgLmJhciwgLnByb2dyZXNzLXN0cmlwZWQgLmJhci13YXJuaW5nIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmJiNDUwOwogIGJhY2tncm91bmQtaW1hZ2U6IC13ZWJraXQtZ3JhZGllbnQobGluZWFyLCAwIDEwMCUsIDEwMCUgMCwgY29sb3Itc3RvcCgwLjI1LCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMTUpKSwgY29sb3Itc3RvcCgwLjI1LCB0cmFuc3BhcmVudCksIGNvbG9yLXN0b3AoMC41LCB0cmFuc3BhcmVudCksIGNvbG9yLXN0b3AoMC41LCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMTUpKSwgY29sb3Itc3RvcCgwLjc1LCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMTUpKSwgY29sb3Itc3RvcCgwLjc1LCB0cmFuc3BhcmVudCksIHRvKHRyYW5zcGFyZW50KSk7CiAgYmFja2dyb3VuZC1pbWFnZTogLXdlYmtpdC1saW5lYXItZ3JhZGllbnQoNDVkZWcsIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4xNSkgMjUlLCB0cmFuc3BhcmVudCAyNSUsIHRyYW5zcGFyZW50IDUwJSwgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjE1KSA1MCUsIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4xNSkgNzUlLCB0cmFuc3BhcmVudCA3NSUsIHRyYW5zcGFyZW50KTsKICBiYWNrZ3JvdW5kLWltYWdlOiAtbW96LWxpbmVhci1ncmFkaWVudCg0NWRlZywgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjE1KSAyNSUsIHRyYW5zcGFyZW50IDI1JSwgdHJhbnNwYXJlbnQgNTAlLCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMTUpIDUwJSwgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjE1KSA3NSUsIHRyYW5zcGFyZW50IDc1JSwgdHJhbnNwYXJlbnQpOwogIGJhY2tncm91bmQtaW1hZ2U6IC1vLWxpbmVhci1ncmFkaWVudCg0NWRlZywgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjE1KSAyNSUsIHRyYW5zcGFyZW50IDI1JSwgdHJhbnNwYXJlbnQgNTAlLCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMTUpIDUwJSwgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjE1KSA3NSUsIHRyYW5zcGFyZW50IDc1JSwgdHJhbnNwYXJlbnQpOwogIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCg0NWRlZywgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjE1KSAyNSUsIHRyYW5zcGFyZW50IDI1JSwgdHJhbnNwYXJlbnQgNTAlLCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMTUpIDUwJSwgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjE1KSA3NSUsIHRyYW5zcGFyZW50IDc1JSwgdHJhbnNwYXJlbnQpOyB9CgouYWNjb3JkaW9uIHsKICBtYXJnaW4tYm90dG9tOiAyMHB4OyB9CgouYWNjb3JkaW9uLWdyb3VwIHsKICBtYXJnaW4tYm90dG9tOiAycHg7CiAgYm9yZGVyOiAxcHggc29saWQgI2U1ZTVlNTsKICAtd2Via2l0LWJvcmRlci1yYWRpdXM6IDRweDsKICAtbW96LWJvcmRlci1yYWRpdXM6IDRweDsKICBib3JkZXItcmFkaXVzOiA0cHg7IH0KCi5hY2NvcmRpb24taGVhZGluZyB7CiAgYm9yZGVyLWJvdHRvbTogMDsgfQoKLmFjY29yZGlvbi1oZWFkaW5nIC5hY2NvcmRpb24tdG9nZ2xlIHsKICBkaXNwbGF5OiBibG9jazsKICBwYWRkaW5nOiA4cHggMTVweDsgfQoKLmFjY29yZGlvbi10b2dnbGUgewogIGN1cnNvcjogcG9pbnRlcjsgfQoKLmFjY29yZGlvbi1ib2R5ewogIGhlaWdodDogYXV0bzsgIH0KCi5hY2NvcmRpb24taW5uZXIgewogIHBhZGRpbmc6IDlweCAxNXB4OwogIGJvcmRlci10b3A6IDFweCBzb2xpZCAjZTVlNWU1OyB9CgouY2Fyb3VzZWwgewogIHBvc2l0aW9uOiByZWxhdGl2ZTsKICBtYXJnaW4tYm90dG9tOiAyMHB4OwogIGxpbmUtaGVpZ2h0OiAxOyB9CgouY2Fyb3VzZWwtaW5uZXIgewogIG92ZXJmbG93OiBoaWRkZW47CiAgd2lkdGg6IDEwMCU7CiAgcG9zaXRpb246IHJlbGF0aXZlOyB9CgouY2Fyb3VzZWwgLml0ZW0gewogIGRpc3BsYXk6IG5vbmU7CiAgcG9zaXRpb246IHJlbGF0aXZlOwogIC13ZWJraXQtdHJhbnNpdGlvbjogMC42cyBlYXNlLWluLW91dCBsZWZ0OwogIC1tb3otdHJhbnNpdGlvbjogMC42cyBlYXNlLWluLW91dCBsZWZ0OwogIC1vLXRyYW5zaXRpb246IDAuNnMgZWFzZS1pbi1vdXQgbGVmdDsKICB0cmFuc2l0aW9uOiAwLjZzIGVhc2UtaW4tb3V0IGxlZnQ7IH0KLmNhcm91c2VsIC5pdGVtID4gaW1nIHsKICBkaXNwbGF5OiBibG9jazsKICBsaW5lLWhlaWdodDogMTsgfQouY2Fyb3VzZWwgLmFjdGl2ZSwKLmNhcm91c2VsIC5uZXh0LAouY2Fyb3VzZWwgLnByZXYgewogIGRpc3BsYXk6IGJsb2NrOyB9Ci5jYXJvdXNlbCAuYWN0aXZlIHsKICBsZWZ0OiAwOyB9Ci5jYXJvdXNlbCAubmV4dCwKLmNhcm91c2VsIC5wcmV2IHsKICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgdG9wOiAwOwogIHdpZHRoOiAxMDAlOyB9Ci5jYXJvdXNlbCAubmV4dCB7CiAgbGVmdDogMTAwJTsgfQouY2Fyb3VzZWwgLnByZXYgewogIGxlZnQ6IC0xMDAlOyB9Ci5jYXJvdXNlbCAubmV4dC5sZWZ0LAouY2Fyb3VzZWwgLnByZXYucmlnaHQgewogIGxlZnQ6IDA7IH0KLmNhcm91c2VsIC5hY3RpdmUubGVmdCB7CiAgbGVmdDogLTEwMCU7IH0KLmNhcm91c2VsIC5hY3RpdmUucmlnaHQgewogIGxlZnQ6IDEwMCU7IH0KCi5jYXJvdXNlbC1jb250cm9sIHsKICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgdG9wOiA0MCU7CiAgbGVmdDogMTVweDsKICB3aWR0aDogNDBweDsKICBoZWlnaHQ6IDQwcHg7CiAgbWFyZ2luLXRvcDogLTIwcHg7CiAgZm9udC1zaXplOiA2MHB4OwogIGZvbnQtd2VpZ2h0OiAxMDA7CiAgbGluZS1oZWlnaHQ6IDMwcHg7CiAgY29sb3I6IHdoaXRlOwogIHRleHQtYWxpZ246IGNlbnRlcjsKICBiYWNrZ3JvdW5kOiAjMjIyMjIyOwogIGJvcmRlcjogM3B4IHNvbGlkIHdoaXRlOwogIC13ZWJraXQtYm9yZGVyLXJhZGl1czogMjNweDsKICAtbW96LWJvcmRlci1yYWRpdXM6IDIzcHg7CiAgYm9yZGVyLXJhZGl1czogMjNweDsKICBvcGFjaXR5OiAwLjU7CiAgZmlsdGVyOiBhbHBoYShvcGFjaXR5PTUwKTsgfQogIC5jYXJvdXNlbC1jb250cm9sLnJpZ2h0IHsKICAgIGxlZnQ6IGF1dG87CiAgICByaWdodDogMTVweDsgfQogIC5jYXJvdXNlbC1jb250cm9sOmhvdmVyIHsKICAgIGNvbG9yOiB3aGl0ZTsKICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTsKICAgIG9wYWNpdHk6IDAuOTsKICAgIGZpbHRlcjogYWxwaGEob3BhY2l0eT05MCk7IH0KCi5jYXJvdXNlbC1jYXB0aW9uIHsKICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgbGVmdDogMDsKICByaWdodDogMDsKICBib3R0b206IDA7CiAgcGFkZGluZzogMTVweDsKICBiYWNrZ3JvdW5kOiAjMzMzMzMzOwogIGJhY2tncm91bmQ6IHJnYmEoMCwgMCwgMCwgMC43NSk7IH0KCi5jYXJvdXNlbC1jYXB0aW9uIGg0LAouY2Fyb3VzZWwtY2FwdGlvbiBwIHsKICBjb2xvcjogd2hpdGU7CiAgbGluZS1oZWlnaHQ6IDIwcHg7IH0KCi5jYXJvdXNlbC1jYXB0aW9uIGg0IHsKICBtYXJnaW46IDAgMCA1cHg7IH0KCi5jYXJvdXNlbC1jYXB0aW9uIHAgewogIG1hcmdpbi1ib3R0b206IDA7IH0KCi5oZXJvLXVuaXQgewogIHBhZGRpbmc6IDYwcHg7CiAgbWFyZ2luLWJvdHRvbTogMzBweDsKICBmb250LXNpemU6IDE4cHg7CiAgZm9udC13ZWlnaHQ6IDIwMDsKICBsaW5lLWhlaWdodDogMzBweDsKICBjb2xvcjogaW5oZXJpdDsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWVlZWVlOwogIC13ZWJraXQtYm9yZGVyLXJhZGl1czogNnB4OwogIC1tb3otYm9yZGVyLXJhZGl1czogNnB4OwogIGJvcmRlci1yYWRpdXM6IDZweDsgfQogIC5oZXJvLXVuaXQgaDEgewogICAgbWFyZ2luLWJvdHRvbTogMDsKICAgIGZvbnQtc2l6ZTogNjBweDsKICAgIGxpbmUtaGVpZ2h0OiAxOwogICAgY29sb3I6IGluaGVyaXQ7CiAgICBsZXR0ZXItc3BhY2luZzogLTFweDsgfQogIC5oZXJvLXVuaXQgbGkgewogICAgbGluZS1oZWlnaHQ6IDMwcHg7IH0KCi5wdWxsLXJpZ2h0IHsKICBmbG9hdDogcmlnaHQ7IH0KCi5wdWxsLWxlZnQgewogIGZsb2F0OiBsZWZ0OyB9CgouaGlkZSB7CiAgZGlzcGxheTogbm9uZTsgfQoKLnNob3cgewogIGRpc3BsYXk6IGJsb2NrOyB9CgouaW52aXNpYmxlIHsKICB2aXNpYmlsaXR5OiBoaWRkZW47IH0KCi5hZmZpeCB7CiAgcG9zaXRpb246IGZpeGVkOyB9CgouY2xlYXJmaXggewogICp6b29tOiAxOyB9CiAgLmNsZWFyZml4OmJlZm9yZSwgLmNsZWFyZml4OmFmdGVyIHsKICAgIGRpc3BsYXk6IHRhYmxlOwogICAgY29udGVudDogIiI7CiAgICBsaW5lLWhlaWdodDogMDsgfQogIC5jbGVhcmZpeDphZnRlciB7CiAgICBjbGVhcjogYm90aDsgfQoKLmhpZGUtdGV4dCB7CiAgZm9udDogMC8wIGE7CiAgY29sb3I6IHRyYW5zcGFyZW50OwogIHRleHQtc2hhZG93OiBub25lOwogIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50OwogIGJvcmRlcjogMDsgfQoKLmlucHV0LWJsb2NrLWxldmVsIHsKICBkaXNwbGF5OiBibG9jazsKICB3aWR0aDogMTAwJTsKICBtaW4taGVpZ2h0OiAzMHB4OwogIC13ZWJraXQtYm94LXNpemluZzogYm9yZGVyLWJveDsKICAtbW96LWJveC1zaXppbmc6IGJvcmRlci1ib3g7CiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgfQoKLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCioKKiAgT3ZlcnJpZGVzIHRvIHRoZSBlbnRpcmUgZnJhbWV3b3JrICsgYW55IGN1c3RvbSB2YXJpYWJsZXMKKgoqLwoud2VsbCB7CiAgYm9yZGVyOiAwOwogIHBhZGRpbmc6IDEycHggMCAwIDA7CiAgYmFja2dyb3VuZDogI0VCRUJFRDsKICAtd2Via2l0LWJvcmRlci1yYWRpdXM6IDA7CiAgLW1vei1ib3JkZXItcmFkaXVzOiAwOwogIGJvcmRlci1yYWRpdXM6IDA7CiAgLXdlYmtpdC1ib3gtc2hhZG93OiBub25lOwogIC1tb3otYm94LXNoYWRvdzogbm9uZTsKICBib3gtc2hhZG93OiBub25lOyB9CgphLCBhOmxpbmssCmE6dmlzaXRlZCB7CiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7IH0KCmEuYnRuLAouYnRuIHsKICB0ZXh0LWRlY29yYXRpb246IG5vbmU7CiAgZm9udC1zaXplOiA5MyU7CiAgYm9yZGVyOiAxcHggc29saWQgI2Q0ZDRkNDsKICBib3JkZXItY29sb3I6ICNkNGQ0ZDQgI2QyZDJkMiAjYzZjNmM2ICNkNGQ0ZDQ7CiAgYm9yZGVyLXJhZGl1czogMnB4OwogIC1tb3otYm9yZGVyLXJhZGl1czogMnB4OwogIC13ZWJraXQtYm9yZGVyLXJhZGl1czogMnB4OwogIGNvbG9yOiAjMzMzOyB9CgphLmJ0bjpsaW5rLAphLmJ0bjp2aXNpdGVkLAouYnRuLAouYnRuOmxpbmssCi5idG46dmlzaXRlZCB7CiAgYmFja2dyb3VuZDogI2Q1ZDVkNSB1cmwoLi4vLi4vLi4vaW1hZ2VzL2J1dHRvbl9ncmV5X2JnLmdpZikgcmVwZWF0LXggMCA1MCU7IH0KCmEuYnRuOmhvdmVyLAphLmJ0bjphY3RpdmUsCi5idG46aG92ZXIsCi5idG46YWN0aXZlIHsKICBiYWNrZ3JvdW5kOiAjZDVkNWQ1IHVybCguLi8uLi8uLi9pbWFnZXMvYnV0dG9uX2dyZXlfYWN0aXZlX2JnLmdpZikgcmVwZWF0LXggMCA1MCU7IH0KCi5hbGVydCB7CiAgLXdlYmtpdC1ib3JkZXItcmFkaXVzOiAwOwogIC1tb3otYm9yZGVyLXJhZGl1czogMDsKICBib3JkZXItcmFkaXVzOiAwOyB9CgouYnRuLWdyb3VwIGlucHV0IHsKICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgZmxvYXQ6IGxlZnQ7CiAgbWFyZ2luLWJvdHRvbTogMDsgfQoKLmJ0bi1ncm91cCAuYnRuOmZpcnN0LWNoaWxkIHsKICAtd2Via2l0LWJvcmRlci1yYWRpdXM6IDJweDsKICAtbW96LWJvcmRlci1yYWRpdXM6IDJweDsKICBib3JkZXItcmFkaXVzOiAycHg7IH0KCi5idG4tZ3JvdXAgLmJ0bjpsYXN0LWNoaWxkLAouYnRuLWdyb3VwIC5kcm9wZG93bi10b2dnbGUgewogIC13ZWJraXQtYm9yZGVyLXJhZGl1czogMnB4OwogIC1tb3otYm9yZGVyLXJhZGl1czogMnB4OwogIGJvcmRlci1yYWRpdXM6IDJweDsgfQoKLmJ0bi10b29sYmFyIHsKICBwb3NpdGlvbjogcmVsYXRpdmU7IH0KCi5idG4tZ3JvdXAub3BlbiAuZHJvcGRvd24tbWVudSB7CiAgLXdlYmtpdC1ib3JkZXItcmFkaXVzOiAycHg7CiAgLW1vei1ib3JkZXItcmFkaXVzOiAycHg7CiAgYm9yZGVyLXJhZGl1czogMnB4OwogICp3aWR0aDogMjM1cHg7IH0KCmZvcm0gewogIG1hcmdpbi10b3A6IDI0cHg7IH0KCi5mb3JtLWhvcml6b250YWwgewogIC8qIGllNyBvbmx5ICovIH0KICAuZm9ybS1ob3Jpem9udGFsIC5jb250cm9sLWxhYmVsIHsKICAgIHdpZHRoOiAyNDBweDsgfQogIC5mb3JtLWhvcml6b250YWwgLmNvbnRyb2xzIHsKICAgIG1hcmdpbi1sZWZ0OiAyNjBweDsgfQogIC5mb3JtLWhvcml6b250YWwgLmNvbnRyb2xzIHsKICAgICpwYWRkaW5nLWxlZnQ6IDEwcHg7IH0KICAuZm9ybS1ob3Jpem9udGFsIC5jb250cm9sLWdyb3VwIHsKICAgIG1hcmdpbi1ib3R0b206IDhweDsgfQogIC5mb3JtLWhvcml6b250YWwgLmZvcm0tYWN0aW9ucyB7CiAgICBwYWRkaW5nLWxlZnQ6IDI2MHB4OwogICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7IH0KCmZpZWxkc2V0IHsKICBtYXJnaW4tdG9wOiAzMnB4OwogIGJvcmRlci10b3A6IDFweCBzb2xpZCAjZGFkYWRhOyB9CgpsZWdlbmQgewogIHdpZHRoOiBpbmhlcml0OwogIGZvbnQtc2l6ZTogMTA4JTsKICBmb250LXdlaWdodDogbm9ybWFsOwogIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50OwogIGxpbmUtaGVpZ2h0OiAxLjU7CiAgY29sb3I6ICMxOTUyYmI7CiAgbWFyZ2luOiAxMnB4IDA7CiAgcGFkZGluZy1yaWdodDogNXB4OwogIGJvcmRlcjogMDsgfQoKLndlbGwuZm9ybS1ob3Jpem9udGFsIHsKICBtYXJnaW4tdG9wOiAwOyB9Cgoud2VsbC5mb3JtLWhvcml6b250YWwgZmllbGRzZXQgewogIGJvcmRlci10b3A6IDA7CiAgbWFyZ2luLXRvcDogMDsgfQoKLmZvcm0taG9yaXpvbnRhbC1zbWFsbC1sYWJlbHMgLmNvbnRyb2wtbGFiZWwgewogIHdpZHRoOiAxNTBweDsgfQoKLmZvcm0taG9yaXpvbnRhbC1zbWFsbC1sYWJlbHMgLmNvbnRyb2xzIHsKICBtYXJnaW4tbGVmdDogMTcwcHg7IH0KCi5mb3JtLWhvcml6b250YWwtc21hbGwtbGFiZWxzIC5mb3JtLWFjdGlvbnMgewogIHBhZGRpbmctbGVmdDogMTcwcHg7IH0KCi53cmFwX2FsbF9wa2dzX3NlYXJjaCAuYWxsX3BrZ3Nfc2VhcmNoIHsKICBtYXJnaW46IDA7IH0KCi5uYXYtdGFicywKLm5hdi1waWxscyB7CiAgKnpvb206IDE7IH0KICAubmF2LXRhYnM6YmVmb3JlLCAubmF2LXRhYnM6YWZ0ZXIsCiAgLm5hdi1waWxsczpiZWZvcmUsCiAgLm5hdi1waWxsczphZnRlciB7CiAgICBkaXNwbGF5OiB0YWJsZTsKICAgIGNvbnRlbnQ6ICIiOwogICAgbGluZS1oZWlnaHQ6IDA7IH0KICAubmF2LXRhYnM6YWZ0ZXIsCiAgLm5hdi1waWxsczphZnRlciB7CiAgICBjbGVhcjogYm90aDsgfQoKLm5hdi10YWJzID4gbGksCi5uYXYtcGlsbHMgPiBsaSB7CiAgZmxvYXQ6IGxlZnQ7IH0KCi5uYXYtdGFicyA+IGxpID4gYSwKLm5hdi1waWxscyA+IGxpID4gYSB7CiAgdGV4dC1kZWNvcmF0aW9uOiBub25lOwogIHBhZGRpbmctcmlnaHQ6IDEycHg7CiAgcGFkZGluZy1sZWZ0OiAxMnB4OwogIG1hcmdpbi1yaWdodDogMnB4OwogIGxpbmUtaGVpZ2h0OiAxNHB4OyB9CgoubmF2LXRhYnMgewogIG1hcmdpbjogMjRweCAwIDMycHg7CiAgbWluLXdpZHRoOiAxMDI0cHg7CiAgLyogIGJhY2tncm91bmQ6ICNmZmYgdXJsKC4uLy4uLy4uLy4uL2ltYWdlcy90YWJzX2JnLmdpZikgcmVwZWF0LXggMCAxMDAlOyovCiAgYmFja2dyb3VuZC1jb2xvcjogI0U4RThFQTsKICBiYWNrZ3JvdW5kOiAtd2Via2l0LWdyYWRpZW50KGxpbmVhciwgMCUgMCUsIDAlIDEwMCUsIGZyb20od2hpdGUpLCB0bygjZThlOGVhKSk7CiAgYmFja2dyb3VuZDogLW1vei1saW5lYXItZ3JhZGllbnQodG9wLCB3aGl0ZSAwJSwgI2U4ZThlYSAxMDAlKTsKICBmaWx0ZXI6IHByb2dpZDpEWEltYWdlVHJhbnNmb3JtLk1pY3Jvc29mdC5ncmFkaWVudChzdGFydENvbG9yc3RyPSNmZmZmZmZmZixlbmRDb2xvcnN0cj0jZmZlOGU4ZWEpOwogIC1tcy1maWx0ZXI6ICJwcm9naWQ6RFhJbWFnZVRyYW5zZm9ybS5NaWNyb3NvZnQuZ3JhZGllbnQoc3RhcnRDb2xvcnN0cj0jZmZmZmZmZmYsZW5kQ29sb3JzdHI9I2ZmZThlOGVhKSI7CiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNhOGE4YTg7IH0KCi5uYXYtdGFicyA+IGxpIHsKICBtYXJnaW4tYm90dG9tOiAtMXB4OyB9CgoubmF2LXRhYnMgPiBsaSA+IGEgewogIHBhZGRpbmctdG9wOiA1cHg7CiAgcGFkZGluZy1ib3R0b206IDVweDsKICBtYXJnaW4tbGVmdDogNHB4OwogIGJvcmRlcjogMXB4IHNvbGlkICNhOGE4YTg7CiAgYmFja2dyb3VuZDogI2U2ZTllYzsKICBmb250LXNpemU6IDEzcHg7CiAgZm9udC13ZWlnaHQ6IGJvbGQ7CiAgY29sb3I6ICMzODQwNTA7CiAgLXdlYmtpdC1ib3JkZXItcmFkaXVzOiA0cHggNHB4IDAgMDsKICAtbW96LWJvcmRlci1yYWRpdXM6IDRweCA0cHggMCAwOwogIGJvcmRlci1yYWRpdXM6IDRweCA0cHggMCAwOyB9CiAgLm5hdi10YWJzID4gbGkgPiBhOmhvdmVyIHsKICAgIGJvcmRlcjogMXB4IHNvbGlkICNhOGE4YTg7CiAgICBiYWNrZ3JvdW5kOiAjZmZmOyB9CgoubmF2LXRhYnMgPiAuYWN0aXZlID4gYSwKLm5hdi10YWJzID4gLmFjdGl2ZSA+IGE6aG92ZXIgewogIGNvbG9yOiAjMTQxRDMwOwogIGJvcmRlcjogMXB4IHNvbGlkICNhOGE4YTg7CiAgYm9yZGVyLWJvdHRvbS1jb2xvcjogdHJhbnNwYXJlbnQ7CiAgY3Vyc29yOiBkZWZhdWx0OyB9CgouZHJvcGRvd24tbWVudSB7CiAgYmFja2dyb3VuZC1jb2xvcjogI2YwZjBmMjsgfQoKLmRyb3Bkb3duLW1lbnUgbGkgewogIGJhY2tncm91bmQtY29sb3I6ICNmMGYwZjI7CiAgb3ZlcmZsb3c6IGhpZGRlbjsKICBsZXR0ZXItc3BhY2luZzogMXB4OyB9CgouZHJvcGRvd24tbWVudSBhIHsKICB0ZXh0LWRlY29yYXRpb246IG5vbmU7CiAgYm9yZGVyOiAxcHggc29saWQgI2ZmZjsKICBib3JkZXItbGVmdDogMDsKICBib3JkZXItcmlnaHQ6IDA7CiAgY29sb3I6ICMzMzM7CiAgbGluZS1oZWlnaHQ6IDEuODsgfQoKLmRyb3Bkb3duLW1lbnUgbGkgPiBhOmhvdmVyLAouZHJvcGRvd24tbWVudSAuYWN0aXZlID4gYSwKLmRyb3Bkb3duLW1lbnUgLmFjdGl2ZSA+IGE6aG92ZXIgewogIHRleHQtZGVjb3JhdGlvbjogbm9uZTsKICBiYWNrZ3JvdW5kOiAjMzQzOTQ1OwogIGNvbG9yOiAjZmZmOwogIGJvcmRlcjogMXB4IHNvbGlkICM0NDQ7CiAgYmFja2dyb3VuZC1pbWFnZTogLW1vei1saW5lYXItZ3JhZGllbnQodG9wLCAjNjc2Yzc5LCAjMzQzOTQ1KTsKICBiYWNrZ3JvdW5kLWltYWdlOiAtd2Via2l0LWdyYWRpZW50KGxpbmVhciwgbGVmdCB0b3AsIGxlZnQgYm90dG9tLCBmcm9tKCM2NzZjNzkpLCB0bygjMzQzOTQ1KSk7CiAgZmlsdGVyOiBwcm9naWQ6RFhJbWFnZVRyYW5zZm9ybS5NaWNyb3NvZnQuZ3JhZGllbnQoc3RhcnRDb2xvcnN0cj0jZmY2NzZjNzksZW5kQ29sb3JzdHI9I2ZmMzQzOTQ1KTsKICAtbXMtZmlsdGVyOiAicHJvZ2lkOkRYSW1hZ2VUcmFuc2Zvcm0uTWljcm9zb2Z0LmdyYWRpZW50KHN0YXJ0Q29sb3JzdHI9I2ZmNjc2Yzc5LGVuZENvbG9yc3RyPSNmZjM0Mzk0NSkiOyB9CgouYnRuIHsKICBmb250LWZhbWlseTogVmVyZGFuYSwgaGVsdmV0aWNhLCBzYW5zLXNlcmlmOwogIGxpbmUtaGVpZ2h0OiAxNnB4OyB9CgojYmQgLmNvbnRyb2xzIHsKICAqem9vbTogMTAwJTsKICAvKklFNzoga2VlcHMgdGhlIHBhaXIgbGVmdC1hbGlnbmVkIGJ1dCBkZXN0cm95cyBvdGhlciBpbnB1dHMsIG1pbi13aWR0aDowOyBzYW1lIHRoaW5nKi8KICAqbWFyZ2luOiAwOwogIC8qSUU3OiBmaXhlcyBvdGhlciBpbnB1dHMqLyB9CgojYmQgLmlucHV0LWFwcGVuZCBpbnB1dCB7CiAgKm1hcmdpbjogMHB4OwogIC8qa2VlcHMgdGhlIGVsZW1lbnRzIG9uIHRoZSByaWdodCBzaWRlKi8gfQoKI2JkIC5pbnB1dC1hcHBlbmQgLmFkZC1vbiB7CiAgKm1hcmdpbjogMCAwIDAgLTFweDsKICAvKmtlZXBzIHRoZSBhZGQtb24gYXR0YWNoZWQgdG8gdGhlIHJpZ2h0IHNpZGUgb2YgdGhlIGlucHV0Ki8gfQoKLmRpbSB7CiAgY29sb3I6ICM5OTk7IH0KCi8qIHBhZ2UgbGlua3MgKi8KLnBhZ2luYXRpb24tcGFkZGluZyB7CiAgaGVpZ2h0OiAyOHB4OyB9CgoucGFnaW5hdGlvbiBsaSB7CiAgbGluZS1oZWlnaHQ6IDE7CiAgcGFkZGluZy1sZWZ0OiA2cHg7IH0KCi5wYWdpbmF0aW9uIHVsID4gbGkgPiBhIHsKICBjb2xvcjogIzYxNzc5NjsKICAvKiBkYXJrIGJsdWUtZ3JleSAqLwogIGxpbmUtaGVpZ2h0OiAxOwogIGJvcmRlcjogMXB4IHNvbGlkIHRyYW5zcGFyZW50OwogIHBhZGRpbmc6IDNweCA0cHg7CiAgdGV4dC1kZWNvcmF0aW9uOiBub25lOwogIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50OyB9CgoucGFnaW5hdGlvbiB1bCA+IGxpID4gYTpob3ZlciB7CiAgY29sb3I6ICM2MTc3OTY7CiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7CiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7IH0KCi5wYWdpbmF0aW9uIC5hY3RpdmUgYSB7CiAgYm9yZGVyOiAxcHggc29saWQgIzYxNzc5NjsKICBjb2xvcjogIzYxNzc5NjsKICBmb250LXdlaWdodDogYm9sZDsgfQoKLnBhZ2luYXRpb24gLmRpc2FibGVkIHsKICBjb2xvcjogI2RkZDsgfQoKLnBhZ2luYXRpb24gLmRpc2FibGVkIGE6aG92ZXIgewogIHRleHQtZGVjb3JhdGlvbjogbm9uZTsgfQoKLnBhZ2luYXRpb24gdWwgewogIC13ZWJraXQtYm94LXNoYWRvdzogbm9uZTsKICAtbW96LWJveC1zaGFkb3c6IG5vbmU7CiAgYm94LXNoYWRvdzogbm9uZTsgfQoKdGFibGUudGFibGUgdGhlYWQgdGggewogIGZvbnQtc2l6ZTogODUlOwogIGNvbG9yOiAjMzMzOwogIGxldHRlci1zcGFjaW5nOiAxcHg7CiAgYmFja2dyb3VuZC1jb2xvcjogI2ViZWJlZDsKICBib3JkZXI6IDFweCBzb2xpZCAjZDlkOWRiOwogIGJvcmRlci1yaWdodDogbm9uZTsKICBib3JkZXItbGVmdDogbm9uZTsKICBmb250LXdlaWdodDogYm9sZDsgfQogIHRhYmxlLnRhYmxlIHRoZWFkIHRoIGE6bGluaywgdGFibGUudGFibGUgdGhlYWQgdGggYTp2aXNpdGVkIHsKICAgIGNvbG9yOiAjMzMzOyB9Cgp0YWJsZS50YWJsZSB0aGVhZCB0aC5zb3J0LWtleSB7CiAgY29sb3I6ICM5ZDI2MWQ7IH0KCi5icmVhZGNydW1iIGxpIHsKICAqZGlzcGxheTogaW5saW5lOwogIC8qIElFNyBpbmxpbmUtYmxvY2sgaGFjayAqLwogICp6b29tOiAxOyB9CgoubGFiZWwtaW1wb3J0YW50IHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjY2MwMDAwOyB9CgoubGFiZWwtaW1wb3J0YW50OmhvdmVyIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjY2MwMDAwOyB9CgoubGFiZWwtd2FybmluZzpob3ZlciB7CiAgYmFja2dyb3VuZC1jb2xvcjogI2Y4OTQwNjsgfQoKLm5hdi1saXN0IHsKICBwYWRkaW5nOiAwOyB9CgoubmF2LWxpc3QgPiBsaSA+IGEgewogIHBhZGRpbmc6IDAgMCAwIDEwcHg7IH0KCi5uYXYtbGlzdCA+IC5hY3RpdmUgYSwKLm5hdi1saXN0ID4gLmFjdGl2ZSBhOmhvdmVyIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzQzOTQ1OyB9CgouaW5wdXQtYXBwZW5kLCAuaW5wdXQtcHJlcGVuZCB7CiAgZm9udC1zaXplOiBpbmhlcml0OyB9CiAgLmlucHV0LWFwcGVuZCBpbnB1dFt0eXBlPSJyYWRpbyJdLCAuaW5wdXQtYXBwZW5kIGlucHV0W3R5cGU9ImNoZWNrYm94Il0sIC5pbnB1dC1wcmVwZW5kIGlucHV0W3R5cGU9InJhZGlvIl0sIC5pbnB1dC1wcmVwZW5kIGlucHV0W3R5cGU9ImNoZWNrYm94Il0gewogICAgbWFyZ2luLXRvcDogOHB4OwogICAgdmVydGljYWwtYWxpZ246IHRvcDsgfQoKLmZvcm0taG9yaXpvbnRhbCAuaGVscC1ibG9jaywgLmZvcm0taG9yaXpvbnRhbCAuaGVscC1pbmxpbmUgewogIG1hcmdpbjogNXB4IDA7IH0KCi5mb3JtLWNvbmRlbnNlZCAuY29udHJvbC1ncm91cCB7CiAgbWFyZ2luLXRvcDogMDsKICBtYXJnaW4tYm90dG9tOiA1cHg7IH0KLmZvcm0tY29uZGVuc2VkIGZpZWxkc2V0IHsKICBib3JkZXI6IG5vbmU7IH0KCi51bmVkaXRhYmxlLWlucHV0IHsKICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDsKICBib3JkZXI6IG5vbmUgIWltcG9ydGFudDsKICBib3gtc2hhZG93OiBub25lOwogIGN1cnNvcjogYXV0bzsKICB3aWR0aDogYXV0bzsgfQoKaDEsIGgyLCBoMywgaDQsIGg1LCBoNiB7CiAgZm9udC13ZWlnaHQ6IG5vcm1hbDsKICBsaW5lLWhlaWdodDogbm9ybWFsOwogIG1hcmdpbi1ib3R0b206IDIwcHg7IH0KICBoMSBzbWFsbCwgaDIgc21hbGwsIGgzIHNtYWxsLCBoNCBzbWFsbCwgaDUgc21hbGwsIGg2IHNtYWxsIHsKICAgIHBhZGRpbmctbGVmdDogOHB4OyB9CgpoMSB7CiAgZm9udC1zaXplOiAyMHB4OyB9CiAgaDEgc21hbGwgewogICAgZm9udC1zaXplOiAxNXB4OyB9CgpoMiB7CiAgZm9udC1zaXplOiAxOHB4OyB9CiAgaDIgc21hbGwgewogICAgZm9udC1zaXplOiAxNHB4OyB9CgpoMyB7CiAgZm9udC1zaXplOiAxNnB4IHNtYWxsOwogICAgZm9udC1zaXplLWZvbnQtc2l6ZTogMTNweDsgfQoKLnRhYmxlIHRoIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWJlYmVkOyB9Ci50YWJsZSB0Ym9keSB0cjpob3ZlciB0ZCB7CiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7IH0KLnRhYmxlIHRib2R5IHRyOmhvdmVyIHRoIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWJlYmVkOyB9Cg==
      name: Aspera Faspex - /aspera/faspex/stylesheets/third-party/bootstrap/bootstrap.css
      description: 'Fetched from URL: https://69.46.153.12/aspera/faspex/stylesheets/third-party/bootstrap/bootstrap.css'
      content_type: text/css
      server: Apache
      status_code: "200"
      headers:
        - 'X-Xss-Protection: 1; mode=block'
        - 'X-Frame-Options: SAMEORIGIN'
        - 'Content-Security-Policy: script-src ''self'' ''unsafe-inline'' ''unsafe-eval'' https://local.connectme.us https://d3gcli72yxqn2z.cloudfront.net; frame-ancestors ''none'''
        - 'Last-Modified: Thu, 26 May 2022 07:08:26 GMT'
        - 'Etag: "1fbfa-5dfe4db292e80"'
        - 'Accept-Ranges: bytes'
        - 'Content-Length: 130042'
        - 'Strict-Transport-Security: max-age=63072000; includeSubdomains; preload'
        - 'X-Content-Type-Options: nosniff'
      created_at: 2024-11-01T19:07:15.986028Z
      updated_at: 2024-11-01T19:07:15.985544Z
      ext_version: 0
      ext_uuid: f4069107-12da-440e-b4b4-732b46e8d5fa
    - id: 442
      data: 
      name: Aspera Faspex - /aspera/faspex
      description: 'Fetched from URL: https://69.46.153.12/aspera/faspex'
      content_type: text/html; charset=utf-8
      server: Apache
      status_code: "200"
      headers:
        - 'X-Frame-Options: SAMEORIGIN'
        - 'Content-Length: 9802'
        - 'Content-Security-Policy: script-src ''self'' ''unsafe-inline'' ''unsafe-eval'' https://local.connectme.us https://d3gcli72yxqn2z.cloudfront.net; frame-ancestors ''none'''
        - 'Status: 200'
        - 'X-Runtime: 150'
        - 'Etag: "e70a26691ebcef628cc08f2a46863d41"'
        - 'Set-Cookie: _aspera_faspex_session=BAh7CDoPc2Vzc2lvbl9pZCIlMTE0MzU4ZThkZDhiOGNiMGM0OGUzMmUyMjA0MDc1YjA6EF9jc3JmX3Rva2VuSSIxM1VWMEp5QkRvNDUxY3k5dnpxYlp5Q0Z4WmxRUlN2WkZMakQvdU5xQVZTWT0GOgZFRkkiCmZsYXNoBjsHRklDOidBY3Rpb25Db250cm9sbGVyOjpGbGFzaDo6Rmxhc2hIYXNoewY6CmVycm9ySSIABjsHRgY6CkB1c2VkewY7CUY%3D--1f43fb2a43fc72b26d8c05adb3a81f862b38f48b; path=/aspera/faspex; secure; HttpOnly'
        - 'Strict-Transport-Security: max-age=63072000; includeSubdomains; preload'
        - 'X-Content-Type-Options: nosniff'
        - 'Pragma: no-cache'
        - 'Cache-Control: no-cache, no-store, max-age=0, must-revalidate'
        - 'Access-Control-Allow-Origin: https://69.46.153.12/aspera/faspex/'
        - 'X-Xss-Protection: 1; mode=block'
      created_at: 2024-11-01T19:07:08.279755Z
      updated_at: 2024-11-01T19:07:08.279624Z
      ext_version: 0
      ext_uuid: 5844dfef-d2ce-4b96-bf64-7c12cc79e070
    - id: 452
      data: LyogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQogKiBib290c3RyYXAtY29sbGFwc2UuanMgdjIuMC4xCiAqIGh0dHA6Ly90d2l0dGVyLmdpdGh1Yi5jb20vYm9vdHN0cmFwL2phdmFzY3JpcHQuaHRtbCNjb2xsYXBzZQogKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09CiAqIENvcHlyaWdodCAyMDEyIFR3aXR0ZXIsIEluYy4KICoKICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlICJMaWNlbnNlIik7CiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS4KICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0CiAqCiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMAogKgogKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlCiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuICJBUyBJUyIgQkFTSVMsCiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLgogKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kCiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLgogKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi8KCiFmdW5jdGlvbiggJCApewoKICAidXNlIHN0cmljdCIKCiAgdmFyIENvbGxhcHNlID0gZnVuY3Rpb24gKCBlbGVtZW50LCBvcHRpb25zICkgewogIAl0aGlzLiRlbGVtZW50ID0gJChlbGVtZW50KQogICAgdGhpcy5vcHRpb25zID0gJC5leHRlbmQoe30sICQuZm4uY29sbGFwc2UuZGVmYXVsdHMsIG9wdGlvbnMpCgogICAgaWYgKHRoaXMub3B0aW9uc1sicGFyZW50Il0pIHsKICAgICAgdGhpcy4kcGFyZW50ID0gJCh0aGlzLm9wdGlvbnNbInBhcmVudCJdKQogICAgfQoKICAgIHRoaXMub3B0aW9ucy50b2dnbGUgJiYgdGhpcy50b2dnbGUoKQogIH0KCiAgQ29sbGFwc2UucHJvdG90eXBlID0gewoKICAgIGNvbnN0cnVjdG9yOiBDb2xsYXBzZQoKICAsIGRpbWVuc2lvbjogZnVuY3Rpb24gKCkgewogICAgICB2YXIgaGFzV2lkdGggPSB0aGlzLiRlbGVtZW50Lmhhc0NsYXNzKCd3aWR0aCcpCiAgICAgIHJldHVybiBoYXNXaWR0aCA/ICd3aWR0aCcgOiAnaGVpZ2h0JwogICAgfQoKICAsIHNob3c6IGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIGRpbWVuc2lvbiA9IHRoaXMuZGltZW5zaW9uKCkKICAgICAgICAsIHNjcm9sbCA9ICQuY2FtZWxDYXNlKFsnc2Nyb2xsJywgZGltZW5zaW9uXS5qb2luKCctJykpCiAgICAgICAgLCBhY3RpdmVzID0gdGhpcy4kcGFyZW50ICYmIHRoaXMuJHBhcmVudC5maW5kKCcuaW4nKQogICAgICAgICwgaGFzRGF0YQoKICAgICAgaWYgKGFjdGl2ZXMgJiYgYWN0aXZlcy5sZW5ndGgpIHsKICAgICAgICBoYXNEYXRhID0gYWN0aXZlcy5kYXRhKCdjb2xsYXBzZScpCiAgICAgICAgYWN0aXZlcy5jb2xsYXBzZSgnaGlkZScpCiAgICAgICAgaGFzRGF0YSB8fCBhY3RpdmVzLmRhdGEoJ2NvbGxhcHNlJywgbnVsbCkKICAgICAgfQoKICAgICAgdGhpcy4kZWxlbWVudFtkaW1lbnNpb25dKDApCiAgICAgIHRoaXMudHJhbnNpdGlvbignYWRkQ2xhc3MnLCAnc2hvdycsICdzaG93bicpCiAgICAgIHRoaXMuJGVsZW1lbnRbZGltZW5zaW9uXSh0aGlzLiRlbGVtZW50WzBdW3Njcm9sbF0pCgogICAgfQoKICAsIGhpZGU6IGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIGRpbWVuc2lvbiA9IHRoaXMuZGltZW5zaW9uKCkKICAgICAgdGhpcy5yZXNldCh0aGlzLiRlbGVtZW50W2RpbWVuc2lvbl0oKSkKICAgICAgdGhpcy50cmFuc2l0aW9uKCdyZW1vdmVDbGFzcycsICdoaWRlJywgJ2hpZGRlbicpCiAgICAgIHRoaXMuJGVsZW1lbnRbZGltZW5zaW9uXSgwKQogICAgfQoKICAsIHJlc2V0OiBmdW5jdGlvbiAoIHNpemUgKSB7CiAgICAgIHZhciBkaW1lbnNpb24gPSB0aGlzLmRpbWVuc2lvbigpCgogICAgICB0aGlzLiRlbGVtZW50CiAgICAgICAgLnJlbW92ZUNsYXNzKCdjb2xsYXBzZScpCiAgICAgICAgW2RpbWVuc2lvbl0oc2l6ZSB8fCAnYXV0bycpCiAgICAgICAgWzBdLm9mZnNldFdpZHRoCgogICAgICB0aGlzLiRlbGVtZW50LmFkZENsYXNzKCdjb2xsYXBzZScpCiAgICB9CgogICwgdHJhbnNpdGlvbjogZnVuY3Rpb24gKCBtZXRob2QsIHN0YXJ0RXZlbnQsIGNvbXBsZXRlRXZlbnQgKSB7CiAgICAgIHZhciB0aGF0ID0gdGhpcwogICAgICAgICwgY29tcGxldGUgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIGlmIChzdGFydEV2ZW50ID09ICdzaG93JykgdGhhdC5yZXNldCgpCiAgICAgICAgICAgIHRoYXQuJGVsZW1lbnQudHJpZ2dlcihjb21wbGV0ZUV2ZW50KQogICAgICAgICAgfQoKICAgICAgdGhpcy4kZWxlbWVudAogICAgICAgIC50cmlnZ2VyKHN0YXJ0RXZlbnQpCiAgICAgICAgW21ldGhvZF0oJ2luJykKCiAgICAgICQuc3VwcG9ydC50cmFuc2l0aW9uICYmIHRoaXMuJGVsZW1lbnQuaGFzQ2xhc3MoJ2NvbGxhcHNlJykgPwogICAgICAgIHRoaXMuJGVsZW1lbnQub25lKCQuc3VwcG9ydC50cmFuc2l0aW9uLmVuZCwgY29tcGxldGUpIDoKICAgICAgICBjb21wbGV0ZSgpCiAgCX0KCiAgLCB0b2dnbGU6IGZ1bmN0aW9uICgpIHsKICAgICAgdGhpc1t0aGlzLiRlbGVtZW50Lmhhc0NsYXNzKCdpbicpID8gJ2hpZGUnIDogJ3Nob3cnXSgpCiAgCX0KCiAgfQoKICAvKiBDT0xMQVBTSUJMRSBQTFVHSU4gREVGSU5JVElPTgogICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovCgogICQuZm4uY29sbGFwc2UgPSBmdW5jdGlvbiAoIG9wdGlvbiApIHsKICAgIHJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24gKCkgewogICAgICB2YXIgJHRoaXMgPSAkKHRoaXMpCiAgICAgICAgLCBkYXRhID0gJHRoaXMuZGF0YSgnY29sbGFwc2UnKQogICAgICAgICwgb3B0aW9ucyA9IHR5cGVvZiBvcHRpb24gPT0gJ29iamVjdCcgJiYgb3B0aW9uCiAgICAgIGlmICghZGF0YSkgJHRoaXMuZGF0YSgnY29sbGFwc2UnLCAoZGF0YSA9IG5ldyBDb2xsYXBzZSh0aGlzLCBvcHRpb25zKSkpCiAgICAgIGlmICh0eXBlb2Ygb3B0aW9uID09ICdzdHJpbmcnKSBkYXRhW29wdGlvbl0oKQogICAgfSkKICB9CgogICQuZm4uY29sbGFwc2UuZGVmYXVsdHMgPSB7CiAgICB0b2dnbGU6IHRydWUKICB9CgogICQuZm4uY29sbGFwc2UuQ29uc3RydWN0b3IgPSBDb2xsYXBzZQoKCiAvKiBDT0xMQVBTSUJMRSBEQVRBLUFQSQogICogPT09PT09PT09PT09PT09PT09PT0gKi8KCiAgJChmdW5jdGlvbiAoKSB7CiAgICAkKCdib2R5Jykub24oJ2NsaWNrLmNvbGxhcHNlLmRhdGEtYXBpJywgJ1tkYXRhLXRvZ2dsZT1jb2xsYXBzZV0nLCBmdW5jdGlvbiAoIGUgKSB7CiAgICAgIHZhciAkdGhpcyA9ICQodGhpcyksIGhyZWYKICAgICAgICAsIHRhcmdldCA9ICR0aGlzLmF0dHIoJ2RhdGEtdGFyZ2V0JykKICAgICAgICAgIHx8IGUucHJldmVudERlZmF1bHQoKQogICAgICAgICAgfHwgKGhyZWYgPSAkdGhpcy5hdHRyKCdocmVmJykpICYmIGhyZWYucmVwbGFjZSgvLiooPz0jW15cc10rJCkvLCAnJykgLy9zdHJpcCBmb3IgaWU3CiAgICAgICAgLCBvcHRpb24gPSAkKHRhcmdldCkuZGF0YSgnY29sbGFwc2UnKSA/ICd0b2dnbGUnIDogJHRoaXMuZGF0YSgpCiAgICAgICQodGFyZ2V0KS5jb2xsYXBzZShvcHRpb24pCiAgICB9KQogIH0pCgp9KCB3aW5kb3cualF1ZXJ5ICk7
      name: Aspera Faspex - /aspera/faspex/javascripts/third-party/bootstrap/bootstrap-collapse.js
      description: 'Fetched from URL: https://69.46.153.12/aspera/faspex/javascripts/third-party/bootstrap/bootstrap-collapse.js'
      content_type: application/javascript
      server: Apache
      status_code: "200"
      headers:
        - 'X-Content-Type-Options: nosniff'
        - 'Etag: "f48-5dfe4db292e80"'
        - 'Accept-Ranges: bytes'
        - 'Content-Length: 3912'
        - 'X-Xss-Protection: 1; mode=block'
        - 'X-Frame-Options: SAMEORIGIN'
        - 'Strict-Transport-Security: max-age=63072000; includeSubdomains; preload'
        - 'Last-Modified: Thu, 26 May 2022 07:08:26 GMT'
        - 'Content-Security-Policy: script-src ''self'' ''unsafe-inline'' ''unsafe-eval'' https://local.connectme.us https://d3gcli72yxqn2z.cloudfront.net; frame-ancestors ''none'''
      created_at: 2024-11-01T19:07:10.939115Z
      updated_at: 2024-11-01T19:07:10.938881Z
      ext_version: 0
      ext_uuid: 3ce44ee0-aa66-4ade-8d52-c79fc434daa5
    - id: 459
      data: 
      name: Aspera Faspex - /aspera/faspex/javascripts/third-party/jquery-3.5.0.min.js
      description: 'Fetched from URL: https://69.46.153.12/aspera/faspex/javascripts/third-party/jquery-3.5.0.min.js'
      content_type: application/javascript
      server: Apache
      status_code: "200"
      headers:
        - 'Last-Modified: Wed, 11 May 2022 14:14:56 GMT'
        - 'Accept-Ranges: bytes'
        - 'Content-Length: 89492'
        - 'Content-Security-Policy: script-src ''self'' ''unsafe-inline'' ''unsafe-eval'' https://local.connectme.us https://d3gcli72yxqn2z.cloudfront.net; frame-ancestors ''none'''
        - 'X-Xss-Protection: 1; mode=block'
        - 'X-Frame-Options: SAMEORIGIN'
        - 'Strict-Transport-Security: max-age=63072000; includeSubdomains; preload'
        - 'X-Content-Type-Options: nosniff'
        - 'Etag: "15d94-5debd10d2f800"'
      created_at: 2024-11-01T19:07:13.688873Z
      updated_at: 2024-11-01T19:07:13.688404Z
      ext_version: 0
      ext_uuid: 5224a535-a2fb-49fb-890e-527da42dd78e
    - id: 471
      data: 
      name: Aspera Faspex - /aspera/faspex/javascripts/third-party/mustache-2.3.0.min.js
      description: 'Fetched from URL: https://69.46.153.12/aspera/faspex/javascripts/third-party/mustache-2.3.0.min.js'
      content_type: application/javascript
      server: Apache
      status_code: "200"
      headers:
        - 'X-Content-Type-Options: nosniff'
        - 'Last-Modified: Thu, 26 May 2022 07:08:26 GMT'
        - 'Etag: "2538-5dfe4db292e80"'
        - 'Accept-Ranges: bytes'
        - 'X-Xss-Protection: 1; mode=block'
        - 'X-Frame-Options: SAMEORIGIN'
        - 'Strict-Transport-Security: max-age=63072000; includeSubdomains; preload'
        - 'Content-Length: 9528'
        - 'Content-Security-Policy: script-src ''self'' ''unsafe-inline'' ''unsafe-eval'' https://local.connectme.us https://d3gcli72yxqn2z.cloudfront.net; frame-ancestors ''none'''
      created_at: 2024-11-01T19:07:16.747232Z
      updated_at: 2024-11-01T19:07:16.746987Z
      ext_version: 0
      ext_uuid: 57b09e0c-e523-4fd7-9366-3831abd139a2
    - id: 473
      data: Ly8gc2NyaXB0LmFjdWxvLnVzIHNjcmlwdGFjdWxvdXMuanMgdjEuOS4wLCBUaHUgRGVjIDIzIDE2OjU0OjQ4IC0wNTAwIDIwMTAKCi8vIENvcHlyaWdodCAoYykgMjAwNS0yMDEwIFRob21hcyBGdWNocyAoaHR0cDovL3NjcmlwdC5hY3Vsby51cywgaHR0cDovL21pci5hY3Vsby51cykKLy8KLy8gUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nCi8vIGEgY29weSBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZQovLyAiU29mdHdhcmUiKSwgdG8gZGVhbCBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nCi8vIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUgcmlnaHRzIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCwKLy8gZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGwgY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvCi8vIHBlcm1pdCBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0bwovLyB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6Ci8vCi8vIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlCi8vIGluY2x1ZGVkIGluIGFsbCBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLgovLwovLyBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgIkFTIElTIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwKLy8gRVhQUkVTUyBPUiBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GCi8vIE1FUkNIQU5UQUJJTElUWSwgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5ECi8vIE5PTklORlJJTkdFTUVOVC4gSU4gTk8gRVZFTlQgU0hBTEwgVEhFIEFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUKLy8gTElBQkxFIEZPUiBBTlkgQ0xBSU0sIERBTUFHRVMgT1IgT1RIRVIgTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTgovLyBPRiBDT05UUkFDVCwgVE9SVCBPUiBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSwgT1VUIE9GIE9SIElOIENPTk5FQ1RJT04KLy8gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTiBUSEUgU09GVFdBUkUuCi8vCi8vIEZvciBkZXRhaWxzLCBzZWUgdGhlIHNjcmlwdC5hY3Vsby51cyB3ZWIgc2l0ZTogaHR0cDovL3NjcmlwdC5hY3Vsby51cy8KCnZhciBTY3JpcHRhY3Vsb3VzID0gewogIFZlcnNpb246ICcxLjkuMCcsCiAgcmVxdWlyZTogZnVuY3Rpb24obGlicmFyeU5hbWUpIHsKICAgIHRyeXsKICAgICAgLy8gaW5zZXJ0aW5nIHZpYSBET00gZmFpbHMgaW4gU2FmYXJpIDIuMCwgc28gYnJ1dGUgZm9yY2UgYXBwcm9hY2gKICAgICAgZG9jdW1lbnQud3JpdGUoJzxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9IicrbGlicmFyeU5hbWUrJyI+PFwvc2NyaXB0PicpOwogICAgfSBjYXRjaChlKSB7CiAgICAgIC8vIGZvciB4aHRtbCt4bWwgc2VydmVkIGNvbnRlbnQsIGZhbGwgYmFjayB0byBET00gbWV0aG9kcwogICAgICB2YXIgc2NyaXB0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc2NyaXB0Jyk7CiAgICAgIHNjcmlwdC50eXBlID0gJ3RleHQvamF2YXNjcmlwdCc7CiAgICAgIHNjcmlwdC5zcmMgPSBsaWJyYXJ5TmFtZTsKICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ2hlYWQnKVswXS5hcHBlbmRDaGlsZChzY3JpcHQpOwogICAgfQogIH0sCiAgUkVRVUlSRURfUFJPVE9UWVBFOiAnMS42LjAuMycsCiAgbG9hZDogZnVuY3Rpb24oKSB7CiAgICBmdW5jdGlvbiBjb252ZXJ0VmVyc2lvblN0cmluZyh2ZXJzaW9uU3RyaW5nKSB7CiAgICAgIHZhciB2ID0gdmVyc2lvblN0cmluZy5yZXBsYWNlKC9fLip8XC4vZywgJycpOwogICAgICB2ID0gcGFyc2VJbnQodiArICcwJy50aW1lcyg0LXYubGVuZ3RoKSk7CiAgICAgIHJldHVybiB2ZXJzaW9uU3RyaW5nLmluZGV4T2YoJ18nKSA+IC0xID8gdi0xIDogdjsKICAgIH0KCiAgICBpZigodHlwZW9mIFByb3RvdHlwZT09J3VuZGVmaW5lZCcpIHx8CiAgICAgICAodHlwZW9mIEVsZW1lbnQgPT0gJ3VuZGVmaW5lZCcpIHx8CiAgICAgICAodHlwZW9mIEVsZW1lbnQuTWV0aG9kcz09J3VuZGVmaW5lZCcpIHx8CiAgICAgICAoY29udmVydFZlcnNpb25TdHJpbmcoUHJvdG90eXBlLlZlcnNpb24pIDwKICAgICAgICBjb252ZXJ0VmVyc2lvblN0cmluZyhTY3JpcHRhY3Vsb3VzLlJFUVVJUkVEX1BST1RPVFlQRSkpKQogICAgICAgdGhyb3coInNjcmlwdC5hY3Vsby51cyByZXF1aXJlcyB0aGUgUHJvdG90eXBlIEphdmFTY3JpcHQgZnJhbWV3b3JrID49ICIgKwogICAgICAgIFNjcmlwdGFjdWxvdXMuUkVRVUlSRURfUFJPVE9UWVBFKTsKCiAgICB2YXIganMgPSAvc2NyaXB0YWN1bG91c1wuanMoXD8uKik/JC87CiAgICAkJCgnc2NyaXB0W3NyY10nKS5maW5kQWxsKGZ1bmN0aW9uKHMpIHsKICAgICAgcmV0dXJuIHMuc3JjLm1hdGNoKGpzKTsKICAgIH0pLmVhY2goZnVuY3Rpb24ocykgewogICAgICB2YXIgcGF0aCA9IHMuc3JjLnJlcGxhY2UoanMsICcnKSwKICAgICAgaW5jbHVkZXMgPSBzLnNyYy5tYXRjaCgvXD8uKmxvYWQ9KFthLXosXSopLyk7CiAgICAgIChpbmNsdWRlcyA/IGluY2x1ZGVzWzFdIDogJ2J1aWxkZXIsZWZmZWN0cyxkcmFnZHJvcCxjb250cm9scyxzbGlkZXIsc291bmQnKS5zcGxpdCgnLCcpLmVhY2goCiAgICAgICBmdW5jdGlvbihpbmNsdWRlKSB7IFNjcmlwdGFjdWxvdXMucmVxdWlyZShwYXRoK2luY2x1ZGUrJy5qcycpIH0pOwogICAgfSk7CiAgfQp9OwoKU2NyaXB0YWN1bG91cy5sb2FkKCk7
      name: Aspera Faspex - /aspera/faspex/javascripts/scriptaculous.js
      description: 'Fetched from URL: https://69.46.153.12/aspera/faspex/javascripts/scriptaculous.js'
      content_type: application/javascript
      server: Apache
      status_code: "200"
      headers:
        - 'Accept-Ranges: bytes'
        - 'X-Frame-Options: SAMEORIGIN'
        - 'Strict-Transport-Security: max-age=63072000; includeSubdomains; preload'
        - 'X-Content-Type-Options: nosniff'
        - 'Last-Modified: Thu, 26 May 2022 07:08:26 GMT'
        - 'Etag: "b73-5dfe4db292e80"'
        - 'Content-Length: 2931'
        - 'Content-Security-Policy: script-src ''self'' ''unsafe-inline'' ''unsafe-eval'' https://local.connectme.us https://d3gcli72yxqn2z.cloudfront.net; frame-ancestors ''none'''
        - 'X-Xss-Protection: 1; mode=block'
      created_at: 2024-11-01T19:07:17.248483Z
      updated_at: 2024-11-01T19:07:17.248365Z
      ext_version: 0
      ext_uuid: e5eb4c76-d73d-447e-8d1f-6ec22c5205d9
    - id: 460
      data: LyogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09CiAqIGJvb3RzdHJhcC1tb2RhbC5qcyB2Mi4wLjIKICogaHR0cDovL3R3aXR0ZXIuZ2l0aHViLmNvbS9ib290c3RyYXAvamF2YXNjcmlwdC5odG1sI21vZGFscwogKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KICogQ29weXJpZ2h0IDIwMTIgVHdpdHRlciwgSW5jLgogKgogKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxpY2Vuc2UiKTsKICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLgogKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQKICoKICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wCiAqCiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmUKICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gIkFTIElTIiBCQVNJUywKICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuCiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQKICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuCiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqLwoKCiFmdW5jdGlvbiggJCApewoKICAidXNlIHN0cmljdCIKCiAvKiBNT0RBTCBDTEFTUyBERUZJTklUSU9OCiAgKiA9PT09PT09PT09PT09PT09PT09PT09ICovCgogIHZhciBNb2RhbCA9IGZ1bmN0aW9uICggY29udGVudCwgb3B0aW9ucyApIHsKICAgIHRoaXMub3B0aW9ucyA9IG9wdGlvbnMKICAgIHRoaXMuJGVsZW1lbnQgPSAkKGNvbnRlbnQpCiAgICAgIC5kZWxlZ2F0ZSgnW2RhdGEtZGlzbWlzcz0ibW9kYWwiXScsICdjbGljay5kaXNtaXNzLm1vZGFsJywgJC5wcm94eSh0aGlzLmhpZGUsIHRoaXMpKQogIH0KCiAgTW9kYWwucHJvdG90eXBlID0gewoKICAgICAgY29uc3RydWN0b3I6IE1vZGFsCgogICAgLCB0b2dnbGU6IGZ1bmN0aW9uICgpIHsKICAgICAgICByZXR1cm4gdGhpc1shdGhpcy5pc1Nob3duID8gJ3Nob3cnIDogJ2hpZGUnXSgpCiAgICAgIH0KCiAgICAsIHNob3c6IGZ1bmN0aW9uICgpIHsKICAgICAgICB2YXIgdGhhdCA9IHRoaXMKCiAgICAgICAgaWYgKHRoaXMuaXNTaG93bikgcmV0dXJuCgogICAgICAgICQoJ2JvZHknKS5hZGRDbGFzcygnbW9kYWwtb3BlbicpCgogICAgICAgIHRoaXMuaXNTaG93biA9IHRydWUKICAgICAgICB0aGlzLiRlbGVtZW50LnRyaWdnZXIoJ3Nob3cnKQoKICAgICAgICBlc2NhcGUuY2FsbCh0aGlzKQogICAgICAgIGJhY2tkcm9wLmNhbGwodGhpcywgZnVuY3Rpb24gKCkgewogICAgICAgICAgdmFyIHRyYW5zaXRpb24gPSAkLnN1cHBvcnQudHJhbnNpdGlvbiAmJiB0aGF0LiRlbGVtZW50Lmhhc0NsYXNzKCdmYWRlJykKCiAgICAgICAgICAhdGhhdC4kZWxlbWVudC5wYXJlbnQoKS5sZW5ndGggJiYgdGhhdC4kZWxlbWVudC5hcHBlbmRUbyhkb2N1bWVudC5ib2R5KSAvL2Rvbid0IG1vdmUgbW9kYWxzIGRvbSBwb3NpdGlvbgoKICAgICAgICAgIHRoYXQuJGVsZW1lbnQKICAgICAgICAgICAgLnNob3coKQoKICAgICAgICAgIGlmICh0cmFuc2l0aW9uKSB7CiAgICAgICAgICAgIHRoYXQuJGVsZW1lbnRbMF0ub2Zmc2V0V2lkdGggLy8gZm9yY2UgcmVmbG93CiAgICAgICAgICB9CgogICAgICAgICAgdGhhdC4kZWxlbWVudC5hZGRDbGFzcygnaW4nKQoKICAgICAgICAgIHRyYW5zaXRpb24gPwogICAgICAgICAgICB0aGF0LiRlbGVtZW50Lm9uZSgkLnN1cHBvcnQudHJhbnNpdGlvbi5lbmQsIGZ1bmN0aW9uICgpIHsgdGhhdC4kZWxlbWVudC50cmlnZ2VyKCdzaG93bicpIH0pIDoKICAgICAgICAgICAgdGhhdC4kZWxlbWVudC50cmlnZ2VyKCdzaG93bicpCgogICAgICAgIH0pCiAgICAgIH0KCiAgICAsIGhpZGU6IGZ1bmN0aW9uICggZSApIHsKICAgICAgICBlICYmIGUucHJldmVudERlZmF1bHQoKQoKICAgICAgICBpZiAoIXRoaXMuaXNTaG93bikgcmV0dXJuCgogICAgICAgIHZhciB0aGF0ID0gdGhpcwogICAgICAgIHRoaXMuaXNTaG93biA9IGZhbHNlCgogICAgICAgICQoJ2JvZHknKS5yZW1vdmVDbGFzcygnbW9kYWwtb3BlbicpCgogICAgICAgIGVzY2FwZS5jYWxsKHRoaXMpCgogICAgICAgIHRoaXMuJGVsZW1lbnQKICAgICAgICAgIC50cmlnZ2VyKCdoaWRlJykKICAgICAgICAgIC5yZW1vdmVDbGFzcygnaW4nKQoKICAgICAgICAkLnN1cHBvcnQudHJhbnNpdGlvbiAmJiB0aGlzLiRlbGVtZW50Lmhhc0NsYXNzKCdmYWRlJykgPwogICAgICAgICAgaGlkZVdpdGhUcmFuc2l0aW9uLmNhbGwodGhpcykgOgogICAgICAgICAgaGlkZU1vZGFsLmNhbGwodGhpcykKICAgICAgfQoKICB9CgoKIC8qIE1PREFMIFBSSVZBVEUgTUVUSE9EUwogICogPT09PT09PT09PT09PT09PT09PT09ICovCgogIGZ1bmN0aW9uIGhpZGVXaXRoVHJhbnNpdGlvbigpIHsKICAgIHZhciB0aGF0ID0gdGhpcwogICAgICAsIHRpbWVvdXQgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsKICAgICAgICAgIHRoYXQuJGVsZW1lbnQub2ZmKCQuc3VwcG9ydC50cmFuc2l0aW9uLmVuZCkKICAgICAgICAgIGhpZGVNb2RhbC5jYWxsKHRoYXQpCiAgICAgICAgfSwgNTAwKQoKICAgIHRoaXMuJGVsZW1lbnQub25lKCQuc3VwcG9ydC50cmFuc2l0aW9uLmVuZCwgZnVuY3Rpb24gKCkgewogICAgICBjbGVhclRpbWVvdXQodGltZW91dCkKICAgICAgaGlkZU1vZGFsLmNhbGwodGhhdCkKICAgIH0pCiAgfQoKICBmdW5jdGlvbiBoaWRlTW9kYWwoIHRoYXQgKSB7CiAgICB0aGlzLiRlbGVtZW50CiAgICAgIC5oaWRlKCkKICAgICAgLnRyaWdnZXIoJ2hpZGRlbicpCgogICAgYmFja2Ryb3AuY2FsbCh0aGlzKQogIH0KCiAgZnVuY3Rpb24gYmFja2Ryb3AoIGNhbGxiYWNrICkgewogICAgdmFyIHRoYXQgPSB0aGlzCiAgICAgICwgYW5pbWF0ZSA9IHRoaXMuJGVsZW1lbnQuaGFzQ2xhc3MoJ2ZhZGUnKSA/ICdmYWRlJyA6ICcnCgogICAgaWYgKHRoaXMuaXNTaG93biAmJiB0aGlzLm9wdGlvbnMuYmFja2Ryb3ApIHsKICAgICAgdmFyIGRvQW5pbWF0ZSA9ICQuc3VwcG9ydC50cmFuc2l0aW9uICYmIGFuaW1hdGUKCiAgICAgIHRoaXMuJGJhY2tkcm9wID0gJCgnPGRpdiBjbGFzcz0ibW9kYWwtYmFja2Ryb3AgJyArIGFuaW1hdGUgKyAnIiAvPicpCiAgICAgICAgLmFwcGVuZFRvKGRvY3VtZW50LmJvZHkpCgogICAgICBpZiAodGhpcy5vcHRpb25zLmJhY2tkcm9wICE9ICdzdGF0aWMnKSB7CiAgICAgICAgdGhpcy4kYmFja2Ryb3AuY2xpY2soJC5wcm94eSh0aGlzLmhpZGUsIHRoaXMpKQogICAgICB9CgogICAgICBpZiAoZG9BbmltYXRlKSB0aGlzLiRiYWNrZHJvcFswXS5vZmZzZXRXaWR0aCAvLyBmb3JjZSByZWZsb3cKCiAgICAgIHRoaXMuJGJhY2tkcm9wLmFkZENsYXNzKCdpbicpCgogICAgICBkb0FuaW1hdGUgPwogICAgICAgIHRoaXMuJGJhY2tkcm9wLm9uZSgkLnN1cHBvcnQudHJhbnNpdGlvbi5lbmQsIGNhbGxiYWNrKSA6CiAgICAgICAgY2FsbGJhY2soKQoKICAgIH0gZWxzZSBpZiAoIXRoaXMuaXNTaG93biAmJiB0aGlzLiRiYWNrZHJvcCkgewogICAgICB0aGlzLiRiYWNrZHJvcC5yZW1vdmVDbGFzcygnaW4nKQoKICAgICAgJC5zdXBwb3J0LnRyYW5zaXRpb24gJiYgdGhpcy4kZWxlbWVudC5oYXNDbGFzcygnZmFkZScpPwogICAgICAgIHRoaXMuJGJhY2tkcm9wLm9uZSgkLnN1cHBvcnQudHJhbnNpdGlvbi5lbmQsICQucHJveHkocmVtb3ZlQmFja2Ryb3AsIHRoaXMpKSA6CiAgICAgICAgcmVtb3ZlQmFja2Ryb3AuY2FsbCh0aGlzKQoKICAgIH0gZWxzZSBpZiAoY2FsbGJhY2spIHsKICAgICAgY2FsbGJhY2soKQogICAgfQogIH0KCiAgZnVuY3Rpb24gcmVtb3ZlQmFja2Ryb3AoKSB7CiAgICB0aGlzLiRiYWNrZHJvcC5yZW1vdmUoKQogICAgdGhpcy4kYmFja2Ryb3AgPSBudWxsCiAgfQoKICBmdW5jdGlvbiBlc2NhcGUoKSB7CiAgICB2YXIgdGhhdCA9IHRoaXMKICAgIGlmICh0aGlzLmlzU2hvd24gJiYgdGhpcy5vcHRpb25zLmtleWJvYXJkKSB7CiAgICAgICQoZG9jdW1lbnQpLm9uKCdrZXl1cC5kaXNtaXNzLm1vZGFsJywgZnVuY3Rpb24gKCBlICkgewogICAgICAgIGUud2hpY2ggPT0gMjcgJiYgdGhhdC5oaWRlKCkKICAgICAgfSkKICAgIH0gZWxzZSBpZiAoIXRoaXMuaXNTaG93bikgewogICAgICAkKGRvY3VtZW50KS5vZmYoJ2tleXVwLmRpc21pc3MubW9kYWwnKQogICAgfQogIH0KCgogLyogTU9EQUwgUExVR0lOIERFRklOSVRJT04KICAqID09PT09PT09PT09PT09PT09PT09PT09ICovCgogICQuZm4ubW9kYWwgPSBmdW5jdGlvbiAoIG9wdGlvbiApIHsKICAgIHJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24gKCkgewogICAgICB2YXIgJHRoaXMgPSAkKHRoaXMpCiAgICAgICAgLCBkYXRhID0gJHRoaXMuZGF0YSgnbW9kYWwnKQogICAgICAgICwgb3B0aW9ucyA9ICQuZXh0ZW5kKHt9LCAkLmZuLm1vZGFsLmRlZmF1bHRzLCAkdGhpcy5kYXRhKCksIHR5cGVvZiBvcHRpb24gPT0gJ29iamVjdCcgJiYgb3B0aW9uKQogICAgICBpZiAoIWRhdGEpICR0aGlzLmRhdGEoJ21vZGFsJywgKGRhdGEgPSBuZXcgTW9kYWwodGhpcywgb3B0aW9ucykpKQogICAgICBpZiAodHlwZW9mIG9wdGlvbiA9PSAnc3RyaW5nJykgZGF0YVtvcHRpb25dKCkKICAgICAgZWxzZSBpZiAob3B0aW9ucy5zaG93KSBkYXRhLnNob3coKQogICAgfSkKICB9CgogICQuZm4ubW9kYWwuZGVmYXVsdHMgPSB7CiAgICAgIGJhY2tkcm9wOiB0cnVlCiAgICAsIGtleWJvYXJkOiB0cnVlCiAgICAsIHNob3c6IHRydWUKICB9CgogICQuZm4ubW9kYWwuQ29uc3RydWN0b3IgPSBNb2RhbAoKCiAvKiBNT0RBTCBEQVRBLUFQSQogICogPT09PT09PT09PT09PT0gKi8KCiAgJChmdW5jdGlvbiAoKSB7CiAgICAkKCdib2R5Jykub24oJ2NsaWNrLm1vZGFsLmRhdGEtYXBpJywgJ1tkYXRhLXRvZ2dsZT0ibW9kYWwiXScsIGZ1bmN0aW9uICggZSApIHsKICAgICAgdmFyICR0aGlzID0gJCh0aGlzKSwgaHJlZgogICAgICAgICwgJHRhcmdldCA9ICQoJHRoaXMuYXR0cignZGF0YS10YXJnZXQnKSB8fCAoaHJlZiA9ICR0aGlzLmF0dHIoJ2hyZWYnKSkgJiYgaHJlZi5yZXBsYWNlKC8uKig/PSNbXlxzXSskKS8sICcnKSkgLy9zdHJpcCBmb3IgaWU3CiAgICAgICAgLCBvcHRpb24gPSAkdGFyZ2V0LmRhdGEoJ21vZGFsJykgPyAndG9nZ2xlJyA6ICQuZXh0ZW5kKHt9LCAkdGFyZ2V0LmRhdGEoKSwgJHRoaXMuZGF0YSgpKQoKICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpCiAgICAgICR0YXJnZXQubW9kYWwob3B0aW9uKQogICAgfSkKICB9KQoKfSggd2luZG93LmpRdWVyeSApOw==
      name: Aspera Faspex - /aspera/faspex/javascripts/third-party/bootstrap/bootstrap-modal.js
      description: 'Fetched from URL: https://69.46.153.12/aspera/faspex/javascripts/third-party/bootstrap/bootstrap-modal.js'
      content_type: application/javascript
      server: Apache
      status_code: "200"
      headers:
        - 'X-Frame-Options: SAMEORIGIN'
        - 'Accept-Ranges: bytes'
        - 'X-Xss-Protection: 1; mode=block'
        - 'Strict-Transport-Security: max-age=63072000; includeSubdomains; preload'
        - 'X-Content-Type-Options: nosniff'
        - 'Last-Modified: Thu, 26 May 2022 07:08:26 GMT'
        - 'Etag: "15a3-5dfe4db292e80"'
        - 'Content-Length: 5539'
        - 'Content-Security-Policy: script-src ''self'' ''unsafe-inline'' ''unsafe-eval'' https://local.connectme.us https://d3gcli72yxqn2z.cloudfront.net; frame-ancestors ''none'''
      created_at: 2024-11-01T19:07:13.9502Z
      updated_at: 2024-11-01T19:07:13.949996Z
      ext_version: 0
      ext_uuid: dbf0ca5e-d460-4881-9556-b516120914e4
    - id: 445
      data: PCFET0NUWVBFIGh0bWw+CjxodG1sPgogIDxoZWFkPgogICAgPG1ldGEgaHR0cC1lcXVpdj0iWC1VQS1Db21wYXRpYmxlIiBjb250ZW50PSJJRT1lZGdlLGNocm9tZT0xIiAvPgo8dGl0bGU+QXNwZXJhIEZhc3BleDwvdGl0bGU+CjxtZXRhIGh0dHAtZXF1aXY9IkNvbnRlbnQtVHlwZSIgY29udGVudD0idGV4dC9odG1sOyBjaGFyc2V0PXV0Zi04Ii8+CjxtZXRhIG5hbWU9InJvYm90cyIgY29udGVudD0ibm9pbmRleCwgbm9mb2xsb3ciLz4KPGxpbmsgcmVsPSJzaG9ydGN1dCBpY29uIiBocmVmPSJodHRwczovLzY5LjQ2LjE1My4xMi9hc3BlcmEvZmFzcGV4L2ltYWdlcy9mYXZpY29uLmljbz8xNjUzNTQ4OTA2IiB0eXBlPSJpbWFnZS94LWljb24iIC8+CjxsaW5rIGhyZWY9Imh0dHBzOi8vNjkuNDYuMTUzLjEyL2FzcGVyYS9mYXNwZXgvc3R5bGVzaGVldHMvdGhpcmQtcGFydHkvYm9vdHN0cmFwL2Jvb3RzdHJhcC5jc3M/MTY1MzU0ODkwNiIgbWVkaWE9InNjcmVlbiIgcmVsPSJzdHlsZXNoZWV0IiB0eXBlPSJ0ZXh0L2NzcyIgLz4KPGxpbmsgaHJlZj0iaHR0cHM6Ly82OS40Ni4xNTMuMTIvYXNwZXJhL2Zhc3BleC9zdHlsZXNoZWV0cy9mYXNwZXguY3NzPzE2NTM1NDg5MDYiIG1lZGlhPSJhbGwiIHJlbD0ic3R5bGVzaGVldCIgdHlwZT0idGV4dC9jc3MiIC8+CjxsaW5rIGhyZWY9Imh0dHBzOi8vNjkuNDYuMTUzLjEyL2FzcGVyYS9mYXNwZXgvc3R5bGVzaGVldHMvY29ubmVjdF9hdXRvX2luc3RhbGwuY3NzPzE2NTM1NDg5MDYiIG1lZGlhPSJhbGwiIHJlbD0ic3R5bGVzaGVldCIgdHlwZT0idGV4dC9jc3MiIC8+CgogIDxsaW5rIGhyZWY9Imh0dHBzOi8vNjkuNDYuMTUzLjEyL2FzcGVyYS9mYXNwZXgvc3R5bGVzaGVldHMvbG9naW4vbmV3LmNzcz8xNjUzNTQ4OTA2IiBtZWRpYT0ic2NyZWVuIiByZWw9InN0eWxlc2hlZXQiIHR5cGU9InRleHQvY3NzIiAvPgoKCjwhLS0gVGhlIGFzcGVyYV9mYXNwZXhfdXJpIGlzIHVzZWQgYnkgc29tZSBvZiB0aGUgamF2YXNjcmlwdCBpbmNsdWRlcywgc2hvdWxkIGJlIHJlbmRlcmVkIGJlZm9yZSBvdGhlciBpbmNsdWRlcyAtLT4KPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogIHZhciBhc3BlcmFfZmFzcGV4X3VyaV9uYW1lc3BhY2UgPSAiL2FzcGVyYS9mYXNwZXgiOwo8L3NjcmlwdD4KCjxzY3JpcHQgc3JjPSJodHRwczovLzY5LjQ2LjE1My4xMi9hc3BlcmEvZmFzcGV4L2phdmFzY3JpcHRzL3Byb3RvdHlwZS5qcz8xNjUzNTQ4OTA2IiB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPjwvc2NyaXB0Pgo8c2NyaXB0IHNyYz0iaHR0cHM6Ly82OS40Ni4xNTMuMTIvYXNwZXJhL2Zhc3BleC9qYXZhc2NyaXB0cy90aGlyZC1wYXJ0eS9qcXVlcnktMy41LjAubWluLmpzPzE2NTIyNzg0OTYiIHR5cGU9InRleHQvamF2YXNjcmlwdCI+PC9zY3JpcHQ+CjxzY3JpcHQgc3JjPSJodHRwczovLzY5LjQ2LjE1My4xMi9hc3BlcmEvZmFzcGV4L2phdmFzY3JpcHRzL3RoaXJkLXBhcnR5L2pxdWVyeS11aS5taW4uanM/MTY3ODk4NTA4NiIgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij48L3NjcmlwdD4KPHNjcmlwdCBzcmM9Imh0dHBzOi8vNjkuNDYuMTUzLjEyL2FzcGVyYS9mYXNwZXgvamF2YXNjcmlwdHMvdGhpcmQtcGFydHkvSUNhbkhhei5taW4uanM/MTY1MzU0ODkwNiIgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij48L3NjcmlwdD4KPHNjcmlwdCBzcmM9Imh0dHBzOi8vNjkuNDYuMTUzLjEyL2FzcGVyYS9mYXNwZXgvamF2YXNjcmlwdHMvdGhpcmQtcGFydHkvbXVzdGFjaGUtMi4zLjAubWluLmpzPzE2NTM1NDg5MDYiIHR5cGU9InRleHQvamF2YXNjcmlwdCI+PC9zY3JpcHQ+CjxzY3JpcHQgc3JjPSJodHRwczovLzY5LjQ2LjE1My4xMi9hc3BlcmEvZmFzcGV4L2phdmFzY3JpcHRzL3RoaXJkLXBhcnR5L2Jvb3RzdHJhcC9ib290c3RyYXAtZHJvcGRvd24uanM/MTY1MzU0ODkwNiIgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij48L3NjcmlwdD4KPHNjcmlwdCBzcmM9Imh0dHBzOi8vNjkuNDYuMTUzLjEyL2FzcGVyYS9mYXNwZXgvamF2YXNjcmlwdHMvdGhpcmQtcGFydHkvYm9vdHN0cmFwL2Jvb3RzdHJhcC1jb2xsYXBzZS5qcz8xNjUzNTQ4OTA2IiB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPjwvc2NyaXB0Pgo8c2NyaXB0IHNyYz0iaHR0cHM6Ly82OS40Ni4xNTMuMTIvYXNwZXJhL2Zhc3BleC9qYXZhc2NyaXB0cy90aGlyZC1wYXJ0eS9ib290c3RyYXAvYm9vdHN0cmFwLW1vZGFsLmpzPzE2NTM1NDg5MDYiIHR5cGU9InRleHQvamF2YXNjcmlwdCI+PC9zY3JpcHQ+CjxzY3JpcHQgc3JjPSJodHRwczovLzY5LjQ2LjE1My4xMi9hc3BlcmEvZmFzcGV4L2phdmFzY3JpcHRzL3RoaXJkLXBhcnR5L2Jvb3RzdHJhcC9ib290c3RyYXAtdHJhbnNpdGlvbi5qcz8xNjUzNTQ4OTA2IiB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPjwvc2NyaXB0Pgo8c2NyaXB0IHNyYz0iaHR0cHM6Ly82OS40Ni4xNTMuMTIvYXNwZXJhL2Zhc3BleC9qYXZhc2NyaXB0cy90aGlyZC1wYXJ0eS9qUXVlcnktVUktRGF0ZS1SYW5nZS1QaWNrZXIvZGF0ZS5qcz8xNjUzNTQ4OTA2IiB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPjwvc2NyaXB0Pgo8c2NyaXB0IHNyYz0iaHR0cHM6Ly82OS40Ni4xNTMuMTIvYXNwZXJhL2Zhc3BleC9qYXZhc2NyaXB0cy90aGlyZC1wYXJ0eS9qUXVlcnktVUktRGF0ZS1SYW5nZS1QaWNrZXIvZGF0ZXJhbmdlcGlja2VyLmpRdWVyeS5qcz8xNjUzNTQ4OTA2IiB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPjwvc2NyaXB0Pgo8c2NyaXB0IHNyYz0iaHR0cHM6Ly82OS40Ni4xNTMuMTIvYXNwZXJhL2Zhc3BleC9qYXZhc2NyaXB0cy90aGlyZC1wYXJ0eS9zcGxpdC5qcz8xNjUzNTQ4OTA2IiB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPjwvc2NyaXB0Pgo8c2NyaXB0IHNyYz0iaHR0cHM6Ly82OS40Ni4xNTMuMTIvYXNwZXJhL2Zhc3BleC9qYXZhc2NyaXB0cy90aGlyZC1wYXJ0eS91bmRlcnNjb3JlLW1pbi5qcz8xNjUzNTQ4OTA2IiB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPjwvc2NyaXB0Pgo8c2NyaXB0IHNyYz0iaHR0cHM6Ly82OS40Ni4xNTMuMTIvYXNwZXJhL2Zhc3BleC9qYXZhc2NyaXB0cy90aGlyZC1wYXJ0eS9qcXVlcnkucGxhY2Vob2xkZXIubWluLmpzPzE2NTM1NDg5MDYiIHR5cGU9InRleHQvamF2YXNjcmlwdCI+PC9zY3JpcHQ+Cgo8c2NyaXB0IHNyYz0iaHR0cHM6Ly82OS40Ni4xNTMuMTIvYXNwZXJhL2Zhc3BleC9qYXZhc2NyaXB0cy90aGlyZC1wYXJ0eS9qcXVlcnktdWktb3ZlcnJpZGVzLmpzPzE2NTM1NDg5MDYiIHR5cGU9InRleHQvamF2YXNjcmlwdCI+PC9zY3JpcHQ+Cgo8c2NyaXB0PgogIHZhciAkaiA9IGpRdWVyeS5ub0NvbmZsaWN0KCk7CgogIC8vIFBvb3IgbWFuJ3Mgc3Byb2NrZXRzLiBSZXBsYWNlIHRoaXMgd2l0aCB0aGUgYXNzZXQgcGlwZWxpbmUuCiAgLy8gVE9ETzogZmluZCBvdXQgaG93IHRvIGdldCBwYXRoIHRvIGltYWdlcyBkaXJlY3RvcnkgYW5kIG1ha2UgYSBmdW5jdGlvbiBpbWFnZVVybChpbWFnZSkge30KICB2YXIgQXBwID0gewogICAgc3Bpbm5lckltYWdlOiAnPGltZyBhbHQ9IlNwaW5uZXIiIHNyYz0iaHR0cHM6Ly82OS40Ni4xNTMuMTIvYXNwZXJhL2Zhc3BleC9pbWFnZXMvc3Bpbm5lci5naWY/MTY1MzU0ODkwNiIgLz4nLAogICAgY2hlY2ttYXJrSW1hZ2U6ICc8aW1nIGFsdD0iQ2hlY2ttYXJrIiBzcmM9Imh0dHBzOi8vNjkuNDYuMTUzLjEyL2FzcGVyYS9mYXNwZXgvaW1hZ2VzL2NoZWNrbWFyay5wbmc/MTY1MzU0ODkwNiIgLz4nCiAgfTsKPC9zY3JpcHQ+Cgo8c2NyaXB0IHNyYz0iaHR0cHM6Ly82OS40Ni4xNTMuMTIvYXNwZXJhL2Zhc3BleC9qYXZhc2NyaXB0cy9zY3JpcHRhY3Vsb3VzLmpzPzE2NTM1NDg5MDYiIHR5cGU9InRleHQvamF2YXNjcmlwdCI+PC9zY3JpcHQ+Cgo8c2NyaXB0IHNyYz0iaHR0cHM6Ly82OS40Ni4xNTMuMTIvYXNwZXJhL2Zhc3BleC9qYXZhc2NyaXB0cy91dGlscy5qcz8xNjUzNTQ4OTA2IiB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPjwvc2NyaXB0Pgo8c2NyaXB0IHNyYz0iaHR0cHM6Ly82OS40Ni4xNTMuMTIvYXNwZXJhL2Zhc3BleC9qYXZhc2NyaXB0cy91dGlscy9kaWFsb2cuanM/MTY1MzU0ODkwNiIgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij48L3NjcmlwdD4KPHNjcmlwdCBzcmM9Imh0dHBzOi8vNjkuNDYuMTUzLjEyL2FzcGVyYS9mYXNwZXgvamF2YXNjcmlwdHMvYXBwbGljYXRpb24uanM/MTY1MzU0ODkwNiIgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij48L3NjcmlwdD4KPHNjcmlwdCBzcmM9Imh0dHBzOi8vNjkuNDYuMTUzLjEyL2FzcGVyYS9mYXNwZXgvamF2YXNjcmlwdHMvc2hhcmVkL2hpZ2hsaWdodF90ZXh0LmpzPzE2NTM1NDg5MDYiIHR5cGU9InRleHQvamF2YXNjcmlwdCI+PC9zY3JpcHQ+Cgo8IS0tW2lmIElFXT4KICA8c2NyaXB0IHNyYz0iaHR0cHM6Ly82OS40Ni4xNTMuMTIvYXNwZXJhL2Zhc3BleC9qYXZhc2NyaXB0cy9pZV9kcm9wX2ZpeC5qcz8xNjUzNTQ4OTA2IiB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPjwvc2NyaXB0Pgo8IVtlbmRpZl0tLT4KCjxzY3JpcHQgc3JjPSJodHRwczovLzY5LjQ2LjE1My4xMi9hc3BlcmEvZmFzcGV4L2phdmFzY3JpcHRzL2ZyYW1lX2J1c3QuanM/MTY1MzU0ODkwNiIgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij48L3NjcmlwdD4KCjxtZXRhIG5hbWU9ImNzcmYtcGFyYW0iIGNvbnRlbnQ9ImF1dGhlbnRpY2l0eV90b2tlbiIvPgo8bWV0YSBuYW1lPSJjc3JmLXRva2VuIiBjb250ZW50PSJaQWFhaTl2aUlIWXBXZEp6bG1nRENXbG92bFN0R0ZkaTBXemwyU1pBVVlJPSIvPgoKPCEtLSBPcHRpb25hbCBjdXN0b21pemF0aW9uIGZpbGUgLSBFbnN1cmUgaXQgaXMgaW5jbHVkZWQgYWZ0ZXIgYWxsIG90aGVyIENTUyBmaWxlcyAtLT4KCgoKICA8L2hlYWQ+CgogIDxib2R5IGRhdGEtZ2xvYmFsLXNldHRpbmdzPSJ7JnF1b3Q7bWluaW11bV9jb25uZWN0X3ZlcnNpb24mcXVvdDs6JnF1b3Q7My45LjAmcXVvdDssJnF1b3Q7cHJlZmVyX2h0dHBfY29ubmVjdCZxdW90OzpmYWxzZSwmcXVvdDtkaXNhYmxlX2h0dHBfdHJhbnNmZXImcXVvdDs6dHJ1ZX0iIGRhdGEtcHJlZmVyZW5jZXM9InsmcXVvdDtzdXBwcmVzc19jb25uZWN0X2luc3RhbGxfZGlhbG9nJnF1b3Q7OnRydWV9Ij4KCiAgICA8ZGl2IGlkPSJoZWFkZXIiPgogIDxhIGhyZWY9IiNza2lwX3RvX21haW4iIHJvbGU9Im5hdmlnYXRpb24iIGNsYXNzPSJza2lwX3RvX21haW4iPlNraXAgdG8gTWFpbjwvYT4KICAKICAKICAgIAogICAgPGEgaHJlZj0iaHR0cHM6Ly82OS40Ni4xNTMuMTIvYXNwZXJhL2Zhc3BleC9yZWNlaXZlZCIgaWQ9ImltZ19hbHRfYXNwZXJhX2Zhc3BleF9jbGFzc19sb2dvX2ltZ19zcmNfaHR0cHNfNjlfNDZfMTUzXzEyX2FzcGVyYV9mYXNwZXhfaW1hZ2VzX2xvZ29fZmFzcGV4X3N2Z18xNjUzNTQ4OTA2X2xpbmsiPjxpbWcgYWx0PSJBc3BlcmEgRmFzcGV4IiBjbGFzcz0ibG9nb19pbWciIHNyYz0iaHR0cHM6Ly82OS40Ni4xNTMuMTIvYXNwZXJhL2Zhc3BleC9pbWFnZXMvbG9nb19mYXNwZXguc3ZnPzE2NTM1NDg5MDYiIC8+PC9hPgogIAogIAogICAgPHAgYWxpZ249InJpZ2h0Ij4KICAgICAgCiAgICAgICAgTm90IGxvZ2dlZCBpbi4KICAgICAgCiAgICA8L3A+CiAgICA8dWwgaWQ9InVzZXJfbWVudV9pdGVtcyI+CiAgICAgIDxsaSBjbGFzcz0idXNlcl9tZW51X2l0ZW0iPjxhIGhyZWY9Imh0dHBzOi8vNjkuNDYuMTUzLjEyL2FzcGVyYS9mYXNwZXgvc2V0dGluZ3MvcHJlZmVyZW5jZXMvZWRpdCIgY2xhc3M9InVzZXJfbGluayIgaWQ9ImFjY291bnRfbGluayI+QWNjb3VudDwvYT48L2xpPgogICAgICA8bGkgY2xhc3M9InVzZXJfbWVudV9pdGVtIj48YSBocmVmPSJodHRwczovLzY5LjQ2LjE1My4xMi9hc3BlcmEvZmFzcGV4L2xvZ2luIiBjbGFzcz0idXNlcl9saW5rIiBpZD0ic2lnbl9vdXRfbGluayIgb25jbGljaz0idmFyIGYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdmb3JtJyk7IGYuc3R5bGUuZGlzcGxheSA9ICdub25lJzsgdGhpcy5wYXJlbnROb2RlLmFwcGVuZENoaWxkKGYpOyBmLm1ldGhvZCA9ICdQT1NUJzsgZi5hY3Rpb24gPSB0aGlzLmhyZWY7dmFyIG0gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbnB1dCcpOyBtLnNldEF0dHJpYnV0ZSgndHlwZScsICdoaWRkZW4nKTsgbS5zZXRBdHRyaWJ1dGUoJ25hbWUnLCAnX21ldGhvZCcpOyBtLnNldEF0dHJpYnV0ZSgndmFsdWUnLCAnZGVsZXRlJyk7IGYuYXBwZW5kQ2hpbGQobSk7dmFyIHMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbnB1dCcpOyBzLnNldEF0dHJpYnV0ZSgndHlwZScsICdoaWRkZW4nKTsgcy5zZXRBdHRyaWJ1dGUoJ25hbWUnLCAnYXV0aGVudGljaXR5X3Rva2VuJyk7IHMuc2V0QXR0cmlidXRlKCd2YWx1ZScsICdaQWFhaTl2aUlIWXBXZEp6bG1nRENXbG92bFN0R0ZkaTBXemwyU1pBVVlJPScpOyBmLmFwcGVuZENoaWxkKHMpO2Yuc3VibWl0KCk7cmV0dXJuIGZhbHNlOyI+U2lnbiBPdXQ8L2E+PC9saT4KICAgIDwvdWw+CiAgCgogIAoKPC9kaXY+CgoKCgogICAgCgoKICAgIDwhLS0gTUFJTiAtLT4KICAgIDxkaXYgaWQ9ImJkIiBjbGFzcz0nY29udGFpbmVyLWZsdWlkJz4KICAgICAgPGRpdiBjbGFzcz0ncm93LWZsdWlkJz4KICAgICAgICAKCgogICAgICAgIAoKICAgICAgICA8ZGl2IGlkPSdhamF4X21lc3NhZ2VzJz48L2Rpdj4KICAgICAgICA8bm9zY3JpcHQ+CiAgICAgICAgICA8cCBjbGFzcz0nZXJyb3InPgogICAgICAgICAgSmF2YXNjcmlwdCBtdXN0IGJlIGVuYWJsZWQuICBQbGVhc2UgZW5hYmxlIGl0IGluIHlvdXIgYnJvd3NlciBhbmQgcmVmcmVzaC4KICAgICAgICAgIDwvcD4KICAgICAgICA8L25vc2NyaXB0PgogICAgICAgIDwhLS0gQ09OTkVDVCBJTlNUQUxML1VQR1JBREUgTUVTU0FHRSAtLT4KPGRpdiBpZD0iYXNwZXJhX3dlYl9pbnN0YWxsIiBjbGFzcz0ibm90aW5zdGFsbGVkIiBzdHlsZT0iZGlzcGxheTpub25lOyB0ZXh0LWFsaWduOiBjZW50ZXI7Ij4KICA8ZGl2IGNsYXNzPSJhc19vdmVybGF5IiBpZD0iYXNfb3ZlcmxheSIgc3R5bGU9ImRpc3BsYXk6bm9uZTsiPjwvZGl2PgogIDxkaXYgY2xhc3M9ImNvbm5lY3RfYXBwbGV0X21lc3NhZ2UgbGdfZHJvcF9zaGFkb3ciIGlkPSJjb25uZWN0X2FwcGxldF9tZXNzYWdlIiBzdHlsZT0iZGlzcGxheTpub25lOyI+CiAgICA8ZGl2IGNsYXNzPSJkaWFsb2dfYmFyIj48YSBocmVmPSIjIiBpZD0iZGlzbWlzc19jb25uZWN0X2FsZXJ0IiBvbmNsaWNrPSJyZXR1cm4gZmFsc2U7Ij48L2E+PC9kaXY+CiAgICA8YnIvPgogICAgPHAgaWQ9Imluc3RhbGxfbWVzc2FnZSIgc3R5bGU9ImZvbnQtc2l6ZTogMTE1JTtmb250LXdlaWdodDogYm9sZDttYXJnaW46YXV0byAwIDEzcHggMCA7Ij48L3A+CiAgICA8cCBpZD0iaW5zdGFsbF9tZXNzYWdlX2RldGFpbHMiIHN0eWxlPSJtYXJnaW4tYm90dG9tOjEzcHgiPjwvcD4KCiAgICA8ZGl2IGlkPSJwcm9ncmVzcyI+CiAgICAgIDxkaXYgaWQ9Imluc3RhbGxfb3B0aW9ucyI+CiAgICAgICAgPGEgaWQ9ImF1dG9faW5zdGFsbCIgaHJlZj0iIyIgb25jbGljaz0iamF2YXNjcmlwdDpjb25uZWN0X2luc3RhbGxfZGlhbG9nLnN0YXJ0SW5zdGFsbGF0aW9uKCk7IHJldHVybiBmYWxzZTsiPjwvYT4KICAgICAgICA8c3BhbiBpZD0ibWFudWFsX2luc3RhbGwiPjwvc3Bhbj4KICAgICAgICA8c3BhbiBpZD0ibWFudWFsX2luc3RhbGxfb3B0aW9uIj4gIDwvc3Bhbj4KICAgICAgPC9kaXY+CiAgICAgIDxkaXYgaWQ9ImFzcGVyYV9wcm9ncmVzc19iYXIiIHN0eWxlPSJkaXNwbGF5Om5vbmU7Ij4KICAgICAgICA8ZGl2IGlkPSJhc3BlcmFfcHJvZ3Jlc3NfYmFyX3BlcmNlbnQiPiZuYnNwOzwvZGl2PgogICAgICA8L2Rpdj4KICAgICAgPHAgaWQ9ImFwaCI+PC9wPgogICAgPC9kaXY+CiAgICA8YnIvPgogIDwvZGl2Pgo8L2Rpdj4KCiAgICAgICAgCgogICAgICAgIAogICAgICAgICAgCgoKCjxkaXYgaWQ9ImxvZ2luLXBhZ2UiPgogIDxkaXYgaWQ9ImxvZ2luLWNvbnRhaW5lciI+CiAgICA8ZGl2IGNsYXNzPSJsb2dpbi1zZWN0aW9uIj4KCiAgICAgIAoKICAgICAgPGgxPkFzcGVyYSBGYXNwZXggTG9naW48L2gxPgogICAgICA8ZGl2IGNsYXNzPSJsb2dpbi1wYWdlLWluc3RydWN0aW9ucyI+VXNlIHRoaXMgb3B0aW9uIHRvIGxvZyBpbiB3aXRoIHlvdXIgRmFzcGV4IGFjY291bnQ8L2Rpdj4KCiAgICAgIDxmb3JtIGFjdGlvbj0iaHR0cHM6Ly82OS40Ni4xNTMuMTIvYXNwZXJhL2Zhc3BleC9sb2dpbiIgYXV0b2NvbXBsZXRlPSJvZmYiIGNsYXNzPSJsb2dpbi1vcHRpb24tc2VjdGlvbiIgaWQ9ImxvY2FsLWxvZ2luLWZvcm0iIG1ldGhvZD0icG9zdCI+PGRpdiBzdHlsZT0ibWFyZ2luOjA7cGFkZGluZzowO2Rpc3BsYXk6aW5saW5lIj48aW5wdXQgbmFtZT0iYXV0aGVudGljaXR5X3Rva2VuIiB0eXBlPSJoaWRkZW4iIHZhbHVlPSJaQWFhaTl2aUlIWXBXZEp6bG1nRENXbG92bFN0R0ZkaTBXemwyU1pBVVlJPSIgLz48L2Rpdj4KICAgICAgICAgIDxpbnB1dCBhbHQ9IkVudGVyIHlvdXIgRmFzcGV4IHVzZXJuYW1lIiBhdXRvY29tcGxldGU9Im9mZiIgY2xhc3M9ImxvZ2luLWVsZW1lbnQiIGlkPSJ1c2VybmFtZSIgbmFtZT0idXNlcm5hbWUiIHBsYWNlaG9sZGVyPSJVc2VybmFtZSIgdHlwZT0idGV4dCIgdmFsdWU9IiIgLz4KICAgICAgICAgIDxpbnB1dCBhbHQ9IkVudGVyIHlvdXIgRmFzcGV4IHBhc3N3b3JkIiBhdXRvY29tcGxldGU9Im9mZiIgY2xhc3M9ImxvZ2luLWVsZW1lbnQiIGlkPSJwYXNzd29yZCIgbmFtZT0icGFzc3dvcmQiIHBsYWNlaG9sZGVyPSJQYXNzd29yZCIgdHlwZT0icGFzc3dvcmQiIHZhbHVlPSIiIC8+CgogICAgICAgICAgPHNwYW4gY2xhc3M9J2hlbHAtYmxvY2sgZm9yZ290LXBhc3N3b3JkLWxpbmsnPjxhIGhyZWY9Imh0dHBzOi8vNjkuNDYuMTUzLjEyL2FzcGVyYS9mYXNwZXgvcmVzZXRfcGFzc3dvcmRzL25ldyIgaWQ9ImZvcmdvdF9wYXNzd29yZF9saW5rIj5Gb3Jnb3QgUGFzc3dvcmQ8L2E+PC9zcGFuPgogICAgICAgICAgPGlucHV0IGNsYXNzPSJsb2dpbi1lbGVtZW50IiBpZD0iYnRuTG9naW4iIG5hbWU9ImNvbW1pdCIgdHlwZT0ic3VibWl0IiB2YWx1ZT0iTG9nIEluIiAvPgogICAgICA8L2Zvcm0+CgoKICAgICAgCgoKICAgICAgCgogICAgICAKCiAgICA8L2Rpdj4KICA8L2Rpdj4KCiAgCgogIAogICAgICA8ZGl2IGNsYXNzPSdsb2dpbl9hbm5vdW5jZW1lbnQgbGdfZHJvcF9zaGFkb3cnPgogICAgICAgIDxwIGNsYXNzPSJ0ZXh0X2NlbnRlciI+PHN0cm9uZz5Bbm5vdW5jZW1lbnQ8L3N0cm9uZz48L3A+CiAgICAgICAgPGRpdj5FbmNvbXBhc3MgRGlnaXRhbCBNZWRpYSAoQXNpYSkgTWVkaWFYQ2hhbmdlPC9kaXY+CiAgICAgIDwvZGl2PgogIAoKPC9kaXY+CgogICAgICAgIAogICAgICA8L2Rpdj4KICAgIDwvZGl2PiA8IS0tIEVuZCAjYmQgLS0+CgogICAgPGRpdiBpZD0iZm9vdGVyIj4KICA8cD4KICAgICZjb3B5O0NvcHlyaWdodCBJQk0gQ29ycC4gMjAwOSwgCiAgICAyMDI0LCA8YSBocmVmPSJodHRwczovLzY5LjQ2LjE1My4xMi9hc3BlcmEvZmFzcGV4L2NyZWRpdHMiIGlkPSJjcmVkaXRzX2FuZF9ub3RpY2VzX2xpbmsiPkNyZWRpdHMgYW5kIG5vdGljZXM8L2E+CiAgICA8YnIvPih2NC40LjIuMTg1MzE2KQogICAgCiAgICAgICAgPGJyLz4KICAgICAgICBQYXRjaCBsZXZlbCAzCgogICAgCiAgPC9wPgo8L2Rpdj4KCiAgICAKICA8c2NyaXB0IHNyYz0iaHR0cHM6Ly82OS40Ni4xNTMuMTIvYXNwZXJhL2Zhc3BleC9qYXZhc2NyaXB0cy9sb2dpbi9uZXcuanM/MTY1MzU0ODkwNiIgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij48L3NjcmlwdD4KCiAgPC9ib2R5Pgo8L2h0bWw+Cg==
      name: Aspera Faspex - /aspera/faspex/login/new
      description: 'Fetched from URL: https://69.46.153.12/aspera/faspex/login/new'
      content_type: text/html; charset=utf-8
      server: Apache
      status_code: "200"
      headers:
        - 'Status: 200'
        - 'Set-Cookie: _aspera_faspex_session=BAh7CDoPc2Vzc2lvbl9pZCIlMWJhODI4ZGZiOWZlN2QyNTUwNDhlYjEzNTQ2YzcxZmU6EF9jc3JmX3Rva2VuSSIxWkFhYWk5dmlJSFlwV2RKemxtZ0RDV2xvdmxTdEdGZGkwV3psMlNaQVVZST0GOgZFRkkiCmZsYXNoBjsHRklDOidBY3Rpb25Db250cm9sbGVyOjpGbGFzaDo6Rmxhc2hIYXNoewY6CmVycm9ySSIABjsHRgY6CkB1c2VkewY7CUY%3D--27babfe09cc3ef4495eb8044ce3141074dc98181; path=/aspera/faspex; secure; HttpOnly'
        - 'X-Xss-Protection: 1; mode=block'
        - 'X-Frame-Options: SAMEORIGIN'
        - 'Strict-Transport-Security: max-age=63072000; includeSubdomains; preload'
        - 'Pragma: no-cache'
        - 'Access-Control-Allow-Origin: https://69.46.153.12/aspera/faspex/'
        - 'Etag: "d8aef81131fd39eb24903e8fa041a6c5"'
        - 'Content-Security-Policy: script-src ''self'' ''unsafe-inline'' ''unsafe-eval'' https://local.connectme.us https://d3gcli72yxqn2z.cloudfront.net; frame-ancestors ''none'''
        - 'X-Runtime: 106'
        - 'Content-Length: 9802'
        - 'X-Content-Type-Options: nosniff'
        - 'Cache-Control: no-cache, no-store, max-age=0, must-revalidate'
      created_at: 2024-11-01T19:07:09.173633Z
      updated_at: 2024-11-01T19:07:09.173406Z
      ext_version: 0
      ext_uuid: 07253abe-3580-480a-ba14-3d5c46d912af
    - id: 444
      data: 
      name: Aspera Faspex - /aspera/faspex/reset_passwords/new
      description: 'Fetched from URL: https://69.46.153.12/aspera/faspex/reset_passwords/new'
      content_type: text/html; charset=utf-8
      server: Apache
      status_code: "200"
      headers:
        - 'X-Frame-Options: SAMEORIGIN'
        - 'Status: 200'
        - 'Set-Cookie: _aspera_faspex_session=BAh7CDoQX2NzcmZfdG9rZW5JIjFuQXE1SkVZU3FNbktIV09DQWI0RVhCNExBb1RPZ1JEMTcvTkVXQ25vMXBjPQY6BkVGSSIKZmxhc2gGOwZGSUM6J0FjdGlvbkNvbnRyb2xsZXI6OkZsYXNoOjpGbGFzaEhhc2h7BjoLbm90aWNlMAY6CkB1c2VkewY7CFQ6D3Nlc3Npb25faWQiJTFkODYxOGIwNjIxMWQyMzM4NDBkZDVhZTQ2OTA5MTY1--d168aff4646c371c8420e91f67b39d18960a7631; path=/aspera/faspex; secure; HttpOnly'
        - 'X-Xss-Protection: 1; mode=block'
        - 'X-Content-Type-Options: nosniff'
        - 'Cache-Control: no-cache, no-store, max-age=0, must-revalidate'
        - 'Content-Security-Policy: script-src ''self'' ''unsafe-inline'' ''unsafe-eval'' https://local.connectme.us https://d3gcli72yxqn2z.cloudfront.net; frame-ancestors ''none'''
        - 'Pragma: no-cache'
        - 'Access-Control-Allow-Origin: https://69.46.153.12/aspera/faspex/'
        - 'Etag: "36f9dd03b4fe279283d85ff4dd6e935b"'
        - 'Content-Length: 9180'
        - 'Strict-Transport-Security: max-age=63072000; includeSubdomains; preload'
        - 'X-Runtime: 13'
      created_at: 2024-11-01T19:07:08.8028Z
      updated_at: 2024-11-01T19:07:08.802571Z
      ext_version: 0
      ext_uuid: 4c0a1eb2-83c6-4e10-9d12-052d364569b1
    - id: 441
      data: PCFET0NUWVBFIEhUTUwgUFVCTElDICItLy9JRVRGLy9EVEQgSFRNTCAyLjAvL0VOIj4KPGh0bWw+PGhlYWQ+Cjx0aXRsZT4zMDIgRm91bmQ8L3RpdGxlPgo8L2hlYWQ+PGJvZHk+CjxoMT5Gb3VuZDwvaDE+CjxwPlRoZSBkb2N1bWVudCBoYXMgbW92ZWQgPGEgaHJlZj0iaHR0cHM6Ly82OS40Ni4xNTMuMTIvYXNwZXJhL2Zhc3BleCI+aGVyZTwvYT4uPC9wPgo8L2JvZHk+PC9odG1sPgo=
      name: Aspera Faspex - /
      description: 'Fetched from URL: https://69.46.153.12/'
      content_type: text/html; charset=iso-8859-1
      server: Apache
      status_code: "302"
      headers:
        - 'Location: https://69.46.153.12/aspera/faspex'
        - 'Content-Length: 218'
        - 'X-Frame-Options: SAMEORIGIN'
        - 'Strict-Transport-Security: max-age=63072000; includeSubdomains; preload'
        - 'X-Content-Type-Options: nosniff'
      created_at: 2024-11-01T19:07:07.623776Z
      updated_at: 2024-11-01T19:07:07.623583Z
      ext_version: 0
      ext_uuid: fbba207b-24f5-4017-9d39-b49590df8b86
    - id: 470
      data: 
      name: Aspera Faspex - /aspera/faspex/javascripts/third-party/jquery-ui.min.js
      description: 'Fetched from URL: https://69.46.153.12/aspera/faspex/javascripts/third-party/jquery-ui.min.js'
      content_type: application/javascript
      server: Apache
      status_code: "200"
      headers:
        - 'Accept-Ranges: bytes'
        - 'Content-Security-Policy: script-src ''self'' ''unsafe-inline'' ''unsafe-eval'' https://local.connectme.us https://d3gcli72yxqn2z.cloudfront.net; frame-ancestors ''none'''
        - 'Last-Modified: Thu, 16 Mar 2023 16:44:46 GMT'
        - 'Etag: "3e467-5f7072da25b80"'
        - 'Content-Length: 255079'
        - 'X-Frame-Options: SAMEORIGIN'
        - 'Strict-Transport-Security: max-age=63072000; includeSubdomains; preload'
        - 'X-Content-Type-Options: nosniff'
        - 'X-Xss-Protection: 1; mode=block'
      created_at: 2024-11-01T19:07:16.490166Z
      updated_at: 2024-11-01T19:07:16.489919Z
      ext_version: 0
      ext_uuid: 5464ca0a-263e-4db7-9720-38480113f4a0
    - id: 472
      data: LyogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09CiAqIGJvb3RzdHJhcC10cmFuc2l0aW9uLmpzIHYyLjIuMQogKiBodHRwOi8vdHdpdHRlci5naXRodWIuY29tL2Jvb3RzdHJhcC9qYXZhc2NyaXB0Lmh0bWwjdHJhbnNpdGlvbnMKICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09CiAqIENvcHlyaWdodCAyMDEyIFR3aXR0ZXIsIEluYy4KICoKICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlICJMaWNlbnNlIik7CiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS4KICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0CiAqCiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMAogKgogKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlCiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuICJBUyBJUyIgQkFTSVMsCiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLgogKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kCiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLgogKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovCgoKIWZ1bmN0aW9uICgkKSB7CgogICJ1c2Ugc3RyaWN0IjsgLy8ganNoaW50IDtfOwoKCiAgLyogQ1NTIFRSQU5TSVRJT04gU1VQUE9SVCAoaHR0cDovL3d3dy5tb2Rlcm5penIuY29tLykKICAgKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovCgogICQoZnVuY3Rpb24gKCkgewoKICAgICQuc3VwcG9ydC50cmFuc2l0aW9uID0gKGZ1bmN0aW9uICgpIHsKCiAgICAgIHZhciB0cmFuc2l0aW9uRW5kID0gKGZ1bmN0aW9uICgpIHsKCiAgICAgICAgdmFyIGVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYm9vdHN0cmFwJykKICAgICAgICAgICwgdHJhbnNFbmRFdmVudE5hbWVzID0gewogICAgICAgICAgICAgICAnV2Via2l0VHJhbnNpdGlvbicgOiAnd2Via2l0VHJhbnNpdGlvbkVuZCcKICAgICAgICAgICAgLCAgJ01velRyYW5zaXRpb24nICAgIDogJ3RyYW5zaXRpb25lbmQnCiAgICAgICAgICAgICwgICdPVHJhbnNpdGlvbicgICAgICA6ICdvVHJhbnNpdGlvbkVuZCBvdHJhbnNpdGlvbmVuZCcKICAgICAgICAgICAgLCAgJ3RyYW5zaXRpb24nICAgICAgIDogJ3RyYW5zaXRpb25lbmQnCiAgICAgICAgICAgIH0KICAgICAgICAgICwgbmFtZQoKICAgICAgICBmb3IgKG5hbWUgaW4gdHJhbnNFbmRFdmVudE5hbWVzKXsKICAgICAgICAgIGlmIChlbC5zdHlsZVtuYW1lXSAhPT0gdW5kZWZpbmVkKSB7CiAgICAgICAgICAgIHJldHVybiB0cmFuc0VuZEV2ZW50TmFtZXNbbmFtZV0KICAgICAgICAgIH0KICAgICAgICB9CgogICAgICB9KCkpCgogICAgICByZXR1cm4gdHJhbnNpdGlvbkVuZCAmJiB7CiAgICAgICAgZW5kOiB0cmFuc2l0aW9uRW5kCiAgICAgIH0KCiAgICB9KSgpCgogIH0pCgp9KHdpbmRvdy5qUXVlcnkpOw==
      name: Aspera Faspex - /aspera/faspex/javascripts/third-party/bootstrap/bootstrap-transition.js
      description: 'Fetched from URL: https://69.46.153.12/aspera/faspex/javascripts/third-party/bootstrap/bootstrap-transition.js'
      content_type: application/javascript
      server: Apache
      status_code: "200"
      headers:
        - 'X-Content-Type-Options: nosniff'
        - 'Last-Modified: Thu, 26 May 2022 07:08:26 GMT'
        - 'Etag: "6dc-5dfe4db292e80"'
        - 'Content-Length: 1756'
        - 'X-Xss-Protection: 1; mode=block'
        - 'Accept-Ranges: bytes'
        - 'Content-Security-Policy: script-src ''self'' ''unsafe-inline'' ''unsafe-eval'' https://local.connectme.us https://d3gcli72yxqn2z.cloudfront.net; frame-ancestors ''none'''
        - 'X-Frame-Options: SAMEORIGIN'
        - 'Strict-Transport-Security: max-age=63072000; includeSubdomains; preload'
      created_at: 2024-11-01T19:07:16.996241Z
      updated_at: 2024-11-01T19:07:16.996079Z
      ext_version: 0
      ext_uuid: db2072ad-70e0-4dad-ad19-0b25c2ee5792
    - id: 443
      data: PCFET0NUWVBFIEhUTUwgUFVCTElDICItLy9JRVRGLy9EVEQgSFRNTCAyLjAvL0VOIj4KPGh0bWw+PGhlYWQ+Cjx0aXRsZT40MDQgTm90IEZvdW5kPC90aXRsZT4KPC9oZWFkPjxib2R5Pgo8aDE+Tm90IEZvdW5kPC9oMT4KPHA+VGhlIHJlcXVlc3RlZCBVUkwgd2FzIG5vdCBmb3VuZCBvbiB0aGlzIHNlcnZlci48L3A+CjwvYm9keT48L2h0bWw+Cg==
      name: Aspera Faspex - /aspera/
      description: 'Fetched from URL: https://69.46.153.12/aspera/'
      content_type: text/html; charset=iso-8859-1
      server: Apache
      status_code: "404"
      headers:
        - 'X-Frame-Options: SAMEORIGIN'
        - 'Strict-Transport-Security: max-age=63072000; includeSubdomains; preload'
        - 'X-Content-Type-Options: nosniff'
        - 'Content-Length: 196'
      created_at: 2024-11-01T19:07:08.52857Z
      updated_at: 2024-11-01T19:07:08.528397Z
      ext_version: 0
      ext_uuid: 31c4e95a-1a07-43d9-a06f-265962192a5d
    - id: 448
      data: LyoKICogUmVnaXN0ZXJzIGEgY2FsbGJhY2sgd2hpY2ggY29waWVzIHRoZSBjc3JmIHRva2VuIGludG8gdGhlCiAqIFgtQ1NSRi1Ub2tlbiBoZWFkZXIgd2l0aCBlYWNoIGFqYXggcmVxdWVzdC4gIE5lY2Vzc2FyeSB0bwogKiB3b3JrIHdpdGggcmFpbHMgYXBwbGljYXRpb25zIHdoaWNoIGhhdmUgZml4ZWQKICogQ1ZFLTIwMTEtMDQ0NwoqLwpBamF4LlJlc3BvbmRlcnMucmVnaXN0ZXIoewogIG9uQ3JlYXRlOiBmdW5jdGlvbihyZXF1ZXN0KSB7CiAgICB2YXIgY3NyZl9tZXRhX3RhZyA9ICQkKCdtZXRhW25hbWU9Y3NyZi10b2tlbl0nKVswXTsKICAgIGlmIChjc3JmX21ldGFfdGFnKSB7CiAgICAgIHZhciBoZWFkZXIgPSAnWC1DU1JGLVRva2VuJywKICAgICAgICAgIHRva2VuID0gY3NyZl9tZXRhX3RhZy5yZWFkQXR0cmlidXRlKCdjb250ZW50Jyk7CiAgICAgIGlmICghcmVxdWVzdC5vcHRpb25zLnJlcXVlc3RIZWFkZXJzKSB7CiAgICAgICAgcmVxdWVzdC5vcHRpb25zLnJlcXVlc3RIZWFkZXJzID0ge307CiAgICAgIH0KICAgICAgcmVxdWVzdC5vcHRpb25zLnJlcXVlc3RIZWFkZXJzW2hlYWRlcl0gPSB0b2tlbjsKICAgIH0KICB9Cn0pOwoKalF1ZXJ5KGZ1bmN0aW9uKCQpIHsKICAvLyBNYWtlIHN1cmUgdGhhdCBldmVyeSBBamF4IHJlcXVlc3Qgc2VuZHMgdGhlIENTUkYgdG9rZW4KICBmdW5jdGlvbiBDU1JGUHJvdGVjdGlvbih4aHIpIHsKICAgIHZhciB0b2tlbiA9ICQoJ21ldGFbbmFtZT0iY3NyZi10b2tlbiJdJykuYXR0cignY29udGVudCcpOwogICAgaWYgKHRva2VuKSB4aHIuc2V0UmVxdWVzdEhlYWRlcignWC1DU1JGLVRva2VuJywgdG9rZW4pOwogIH0KICBpZiAoJ2FqYXhQcmVmaWx0ZXInIGluICQpICQuYWpheFByZWZpbHRlcihmdW5jdGlvbihvcHRpb25zLCBvcmlnaW5hbE9wdGlvbnMsIHhocil7IENTUkZQcm90ZWN0aW9uKHhocikgfSk7CiAgZWxzZSAkKGRvY3VtZW50KS5hamF4U2VuZChmdW5jdGlvbihlLCB4aHIpeyBDU1JGUHJvdGVjdGlvbih4aHIpIH0pOwoKICAkLmFqYXhTZXR1cCh7ICdiZWZvcmVTZW5kJzogZnVuY3Rpb24oeGhyKSB7eGhyLnNldFJlcXVlc3RIZWFkZXIoIkFjY2VwdCIsICJ0ZXh0L2phdmFzY3JpcHQiKX0gfSkKCiAgJChkb2N1bWVudCkuYWpheENvbXBsZXRlKGZ1bmN0aW9uKGV2ZW50LCByZXF1ZXN0KSB7CiAgICB2YXIgZmxhc2ggPSAkLnBhcnNlSlNPTihyZXF1ZXN0LmdldFJlc3BvbnNlSGVhZGVyKCdYLUZsYXNoLU1lc3NhZ2VzJykpOwogICAgaWYoIWZsYXNoKSByZXR1cm47CiAgICBpZihmbGFzaC5lcnJvcikgewogICAgICAkKCcjYWpheF9tZXNzYWdlcycpLmh0bWwoCiAgICAgICAgJCgiPGRpdiBjbGFzcz0nYWpheF9lcnJvcl9tZXNzYWdlcycgcm9sZT0nYWxlcnQnIC8+IikuaHRtbChmbGFzaC5lcnJvci5yZXBsYWNlKC9cbi9nLCAnPGJyPicpKQogICAgICApOwogICAgfQogIH0pOwoKICAkKCcjbmV3X3BhY2thZ2VfbWVudV9saW5rJykuY2xpY2soZnVuY3Rpb24oKXsKICAgICQoJyNuZXdfcGFja2FnZV9tZW51X2l0ZW1zJykudG9nZ2xlKCk7CiAgfSk7CgogICQoJyN1c2VyX21lbnVfbGluaycpLmNsaWNrKGZ1bmN0aW9uKGUpewogICAgJCgnI3VzZXJfbWVudV9pdGVtcycpLnRvZ2dsZSgpOwogIH0pOwoKICAvLyBIaWRlIHRoZSBsaW5rIG1lbnUgd2hlbiBjbGlja2luZyBvdXQKICAvLyBOb3RlOiBUaGlzIGhhcyB0byBiZSBkb25lIHRoaXMgd2F5IGZvciBKQVdTICg1MDggY29tcGxpYW5jZSkgdG8gd29yayAtCiAgLy8gICAgICAgV2hlbiB0YWJiaW5nIHRocm91Z2ggdGhlIG1lbnUsIGl0IG11c3Qgc3RheSBvcGVuIHdoZW4gaXQncyBzdGlsbCBzZWxlY3RpbmcgYSBuZXcgcGFja2FnZSBsaW5rCiAgJCgnI25ld19wYWNrYWdlJykuZm9jdXNvdXQoZnVuY3Rpb24oKXsKICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKXsKICAgICAgaWYoZG9jdW1lbnQuYWN0aXZlRWxlbWVudC5jbGFzc05hbWUuaW5kZXhPZignbmV3X3BhY2thZ2VfbGluaycpIDwgMCkgewogICAgICAgICQoJyNuZXdfcGFja2FnZV9tZW51X2l0ZW1zJykuaGlkZSgpOwogICAgICB9CiAgICB9LCAyMDApOwogIH0pOwoKICAkKCdib2R5JykuY2xpY2soZnVuY3Rpb24oZSkgewogICAgaWYoJChlLnRhcmdldCkucGFyZW50cygnI3VzZXJfbWVudV9saW5rJykubGVuZ3RoPT0wKSB7CiAgICAgICQoJyN1c2VyX21lbnVfaXRlbXMnKS5oaWRlKCk7CiAgICB9CiAgfSk7CgogICQoZG9jdW1lbnQpLnJlYWR5KGZ1bmN0aW9uKCkgewogICAgJCgiI25ld19wYWNrYWdlX21lbnVfaXRlbXMiKS5jc3MoewogICAgICAnd2lkdGgnOiAoJ2F1dG8nKQogICAgfSk7CiAgfSk7Cgp9KTsKCgoKdmFyIHRvZ2dsZUFzcGVyYVdlYk9iamVjdFZpc2liaWxpdHkgPSBmdW5jdGlvbigpIHsKICAvLyBSRU1BUks6IGZvciB3aGF0ZXZlciByZWFzb24gdGhlIHdpZHRoL2hlaWdodCBhdHRyaWJ1dGVzIG9mIHRoZSBvbmUtYnktb25lIGNsYXNzCiAgLy8gZG8gbm90IHRha2UgZWZmZWN0LiBIZW5jZSwgdGhlIHJlYXNvbiBmb3IgaGFyZGNvZGluZyB0aGUgYXR0cmlidXRlcy4gRmlyZWZveCBuZWVkcwogIC8vIHRoZSBzdHlsZSBhdHRyaWJ1dGUgcmVtb3ZlZCB0byByZS1lbmFibGUgdGhlIG9iamVjdAogIHZhciAkakFXViA9ICRqKCcjYXNwZXJhLXdlYi12aXNpYmxlJyk7CiAgaWYgKCAkakFXVi5sZW5ndGggKSB7CiAgICBpZiAoICRqQVdWLmhhc0NsYXNzKCdvbmUtYnktb25lJykgKSB7CiAgICAgICRqQVdWLnJlbW92ZUNsYXNzKCJvbmUtYnktb25lIikucmVtb3ZlQXR0cigic3R5bGUiKTsKICAgIH0gZWxzZSB7CiAgICAgICRqQVdWLmFkZENsYXNzKCJvbmUtYnktb25lIikuY3NzKHsKICAgICAgICB3aWR0aDogIjFweCIsCiAgICAgICAgaGVpZ2h0OiAiMXB4IgogICAgICB9KTsKICAgIH0KICB9Cn07Cg==
      name: Aspera Faspex - /aspera/faspex/javascripts/application.js
      description: 'Fetched from URL: https://69.46.153.12/aspera/faspex/javascripts/application.js'
      content_type: application/javascript
      server: Apache
      status_code: "200"
      headers:
        - 'X-Xss-Protection: 1; mode=block'
        - 'X-Frame-Options: SAMEORIGIN'
        - 'X-Content-Type-Options: nosniff'
        - 'Last-Modified: Thu, 26 May 2022 07:08:26 GMT'
        - 'Accept-Ranges: bytes'
        - 'Content-Length: 2896'
        - 'Strict-Transport-Security: max-age=63072000; includeSubdomains; preload'
        - 'Etag: "b50-5dfe4db292e80"'
        - 'Content-Security-Policy: script-src ''self'' ''unsafe-inline'' ''unsafe-eval'' https://local.connectme.us https://d3gcli72yxqn2z.cloudfront.net; frame-ancestors ''none'''
      created_at: 2024-11-01T19:07:09.933357Z
      updated_at: 2024-11-01T19:07:09.933157Z
      ext_version: 0
      ext_uuid: f21c8f05-2f8d-4db0-9c68-d06d4599709a
    - id: 456
      data: LyogIFByb3RvdHlwZSBKYXZhU2NyaXB0IGZyYW1ld29yaywgdmVyc2lvbiAxLjcKICogIChjKSAyMDA1LTIwMTAgU2FtIFN0ZXBoZW5zb24KICoKICogIFByb3RvdHlwZSBpcyBmcmVlbHkgZGlzdHJpYnV0YWJsZSB1bmRlciB0aGUgdGVybXMgb2YgYW4gTUlULXN0eWxlIGxpY2Vuc2UuCiAqICBGb3IgZGV0YWlscywgc2VlIHRoZSBQcm90b3R5cGUgd2ViIHNpdGU6IGh0dHA6Ly93d3cucHJvdG90eXBlanMub3JnLwogKgogKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi8KCnZhciBQcm90b3R5cGUgPSB7CgogIFZlcnNpb246ICcxLjcnLAoKICBCcm93c2VyOiAoZnVuY3Rpb24oKXsKICAgIHZhciB1YSA9IG5hdmlnYXRvci51c2VyQWdlbnQ7CiAgICB2YXIgaXNPcGVyYSA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh3aW5kb3cub3BlcmEpID09ICdbb2JqZWN0IE9wZXJhXSc7CiAgICByZXR1cm4gewogICAgICBJRTogICAgICAgICAgICAgISF3aW5kb3cuYXR0YWNoRXZlbnQgJiYgIWlzT3BlcmEsCiAgICAgIE9wZXJhOiAgICAgICAgICBpc09wZXJhLAogICAgICBXZWJLaXQ6ICAgICAgICAgdWEuaW5kZXhPZignQXBwbGVXZWJLaXQvJykgPiAtMSwKICAgICAgR2Vja286ICAgICAgICAgIHVhLmluZGV4T2YoJ0dlY2tvJykgPiAtMSAmJiB1YS5pbmRleE9mKCdLSFRNTCcpID09PSAtMSwKICAgICAgTW9iaWxlU2FmYXJpOiAgIC9BcHBsZS4qTW9iaWxlLy50ZXN0KHVhKQogICAgfQogIH0pKCksCgogIEJyb3dzZXJGZWF0dXJlczogewogICAgWFBhdGg6ICEhZG9jdW1lbnQuZXZhbHVhdGUsCgogICAgU2VsZWN0b3JzQVBJOiAhIWRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IsCgogICAgRWxlbWVudEV4dGVuc2lvbnM6IChmdW5jdGlvbigpIHsKICAgICAgdmFyIGNvbnN0cnVjdG9yID0gd2luZG93LkVsZW1lbnQgfHwgd2luZG93LkhUTUxFbGVtZW50OwogICAgICByZXR1cm4gISEoY29uc3RydWN0b3IgJiYgY29uc3RydWN0b3IucHJvdG90eXBlKTsKICAgIH0pKCksCiAgICBTcGVjaWZpY0VsZW1lbnRFeHRlbnNpb25zOiAoZnVuY3Rpb24oKSB7CiAgICAgIGlmICh0eXBlb2Ygd2luZG93LkhUTUxEaXZFbGVtZW50ICE9PSAndW5kZWZpbmVkJykKICAgICAgICByZXR1cm4gdHJ1ZTsKCiAgICAgIHZhciBkaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKSwKICAgICAgICAgIGZvcm0gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdmb3JtJyksCiAgICAgICAgICBpc1N1cHBvcnRlZCA9IGZhbHNlOwoKICAgICAgaWYgKGRpdlsnX19wcm90b19fJ10gJiYgKGRpdlsnX19wcm90b19fJ10gIT09IGZvcm1bJ19fcHJvdG9fXyddKSkgewogICAgICAgIGlzU3VwcG9ydGVkID0gdHJ1ZTsKICAgICAgfQoKICAgICAgZGl2ID0gZm9ybSA9IG51bGw7CgogICAgICByZXR1cm4gaXNTdXBwb3J0ZWQ7CiAgICB9KSgpCiAgfSwKCiAgU2NyaXB0RnJhZ21lbnQ6ICc8c2NyaXB0W14+XSo+KFtcXFNcXHNdKj8pPFwvc2NyaXB0PicsCiAgSlNPTkZpbHRlcjogL15cL1wqLXNlY3VyZS0oW1xzXFNdKilcKlwvXHMqJC8sCgogIGVtcHR5RnVuY3Rpb246IGZ1bmN0aW9uKCkgeyB9LAoKICBLOiBmdW5jdGlvbih4KSB7IHJldHVybiB4IH0KfTsKCmlmIChQcm90b3R5cGUuQnJvd3Nlci5Nb2JpbGVTYWZhcmkpCiAgUHJvdG90eXBlLkJyb3dzZXJGZWF0dXJlcy5TcGVjaWZpY0VsZW1lbnRFeHRlbnNpb25zID0gZmFsc2U7Ci8qIEJhc2VkIG9uIEFsZXggQXJuZWxsJ3MgaW5oZXJpdGFuY2UgaW1wbGVtZW50YXRpb24uICovCgp2YXIgQ2xhc3MgPSAoZnVuY3Rpb24oKSB7CgogIHZhciBJU19ET05URU5VTV9CVUdHWSA9IChmdW5jdGlvbigpewogICAgZm9yICh2YXIgcCBpbiB7IHRvU3RyaW5nOiAxIH0pIHsKICAgICAgaWYgKHAgPT09ICd0b1N0cmluZycpIHJldHVybiBmYWxzZTsKICAgIH0KICAgIHJldHVybiB0cnVlOwogIH0pKCk7CgogIGZ1bmN0aW9uIHN1YmNsYXNzKCkge307CiAgZnVuY3Rpb24gY3JlYXRlKCkgewogICAgdmFyIHBhcmVudCA9IG51bGwsIHByb3BlcnRpZXMgPSAkQShhcmd1bWVudHMpOwogICAgaWYgKE9iamVjdC5pc0Z1bmN0aW9uKHByb3BlcnRpZXNbMF0pKQogICAgICBwYXJlbnQgPSBwcm9wZXJ0aWVzLnNoaWZ0KCk7CgogICAgZnVuY3Rpb24ga2xhc3MoKSB7CiAgICAgIHRoaXMuaW5pdGlhbGl6ZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgfQoKICAgIE9iamVjdC5leHRlbmQoa2xhc3MsIENsYXNzLk1ldGhvZHMpOwogICAga2xhc3Muc3VwZXJjbGFzcyA9IHBhcmVudDsKICAgIGtsYXNzLnN1YmNsYXNzZXMgPSBbXTsKCiAgICBpZiAocGFyZW50KSB7CiAgICAgIHN1YmNsYXNzLnByb3RvdHlwZSA9IHBhcmVudC5wcm90b3R5cGU7CiAgICAgIGtsYXNzLnByb3RvdHlwZSA9IG5ldyBzdWJjbGFzczsKICAgICAgcGFyZW50LnN1YmNsYXNzZXMucHVzaChrbGFzcyk7CiAgICB9CgogICAgZm9yICh2YXIgaSA9IDAsIGxlbmd0aCA9IHByb3BlcnRpZXMubGVuZ3RoOyBpIDwgbGVuZ3RoOyBpKyspCiAgICAgIGtsYXNzLmFkZE1ldGhvZHMocHJvcGVydGllc1tpXSk7CgogICAgaWYgKCFrbGFzcy5wcm90b3R5cGUuaW5pdGlhbGl6ZSkKICAgICAga2xhc3MucHJvdG90eXBlLmluaXRpYWxpemUgPSBQcm90b3R5cGUuZW1wdHlGdW5jdGlvbjsKCiAgICBrbGFzcy5wcm90b3R5cGUuY29uc3RydWN0b3IgPSBrbGFzczsKICAgIHJldHVybiBrbGFzczsKICB9CgogIGZ1bmN0aW9uIGFkZE1ldGhvZHMoc291cmNlKSB7CiAgICB2YXIgYW5jZXN0b3IgICA9IHRoaXMuc3VwZXJjbGFzcyAmJiB0aGlzLnN1cGVyY2xhc3MucHJvdG90eXBlLAogICAgICAgIHByb3BlcnRpZXMgPSBPYmplY3Qua2V5cyhzb3VyY2UpOwoKICAgIGlmIChJU19ET05URU5VTV9CVUdHWSkgewogICAgICBpZiAoc291cmNlLnRvU3RyaW5nICE9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcpCiAgICAgICAgcHJvcGVydGllcy5wdXNoKCJ0b1N0cmluZyIpOwogICAgICBpZiAoc291cmNlLnZhbHVlT2YgIT0gT2JqZWN0LnByb3RvdHlwZS52YWx1ZU9mKQogICAgICAgIHByb3BlcnRpZXMucHVzaCgidmFsdWVPZiIpOwogICAgfQoKICAgIGZvciAodmFyIGkgPSAwLCBsZW5ndGggPSBwcm9wZXJ0aWVzLmxlbmd0aDsgaSA8IGxlbmd0aDsgaSsrKSB7CiAgICAgIHZhciBwcm9wZXJ0eSA9IHByb3BlcnRpZXNbaV0sIHZhbHVlID0gc291cmNlW3Byb3BlcnR5XTsKICAgICAgaWYgKGFuY2VzdG9yICYmIE9iamVjdC5pc0Z1bmN0aW9uKHZhbHVlKSAmJgogICAgICAgICAgdmFsdWUuYXJndW1lbnROYW1lcygpWzBdID09ICIkc3VwZXIiKSB7CiAgICAgICAgdmFyIG1ldGhvZCA9IHZhbHVlOwogICAgICAgIHZhbHVlID0gKGZ1bmN0aW9uKG0pIHsKICAgICAgICAgIHJldHVybiBmdW5jdGlvbigpIHsgcmV0dXJuIGFuY2VzdG9yW21dLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7IH07CiAgICAgICAgfSkocHJvcGVydHkpLndyYXAobWV0aG9kKTsKCiAgICAgICAgdmFsdWUudmFsdWVPZiA9IG1ldGhvZC52YWx1ZU9mLmJpbmQobWV0aG9kKTsKICAgICAgICB2YWx1ZS50b1N0cmluZyA9IG1ldGhvZC50b1N0cmluZy5iaW5kKG1ldGhvZCk7CiAgICAgIH0KICAgICAgdGhpcy5wcm90b3R5cGVbcHJvcGVydHldID0gdmFsdWU7CiAgICB9CgogICAgcmV0dXJuIHRoaXM7CiAgfQoKICByZXR1cm4gewogICAgY3JlYXRlOiBjcmVhdGUsCiAgICBNZXRob2RzOiB7CiAgICAgIGFkZE1ldGhvZHM6IGFkZE1ldGhvZHMKICAgIH0KICB9Owp9KSgpOwooZnVuY3Rpb24oKSB7CgogIHZhciBfdG9TdHJpbmcgPSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLAogICAgICBOVUxMX1RZUEUgPSAnTnVsbCcsCiAgICAgIFVOREVGSU5FRF9UWVBFID0gJ1VuZGVmaW5lZCcsCiAgICAgIEJPT0xFQU5fVFlQRSA9ICdCb29sZWFuJywKICAgICAgTlVNQkVSX1RZUEUgPSAnTnVtYmVyJywKICAgICAgU1RSSU5HX1RZUEUgPSAnU3RyaW5nJywKICAgICAgT0JKRUNUX1RZUEUgPSAnT2JqZWN0JywKICAgICAgRlVOQ1RJT05fQ0xBU1MgPSAnW29iamVjdCBGdW5jdGlvbl0nLAogICAgICBCT09MRUFOX0NMQVNTID0gJ1tvYmplY3QgQm9vbGVhbl0nLAogICAgICBOVU1CRVJfQ0xBU1MgPSAnW29iamVjdCBOdW1iZXJdJywKICAgICAgU1RSSU5HX0NMQVNTID0gJ1tvYmplY3QgU3RyaW5nXScsCiAgICAgIEFSUkFZX0NMQVNTID0gJ1tvYmplY3QgQXJyYXldJywKICAgICAgREFURV9DTEFTUyA9ICdbb2JqZWN0IERhdGVdJywKICAgICAgTkFUSVZFX0pTT05fU1RSSU5HSUZZX1NVUFBPUlQgPSB3aW5kb3cuSlNPTiAmJgogICAgICAgIHR5cGVvZiBKU09OLnN0cmluZ2lmeSA9PT0gJ2Z1bmN0aW9uJyAmJgogICAgICAgIEpTT04uc3RyaW5naWZ5KDApID09PSAnMCcgJiYKICAgICAgICB0eXBlb2YgSlNPTi5zdHJpbmdpZnkoUHJvdG90eXBlLkspID09PSAndW5kZWZpbmVkJzsKCiAgZnVuY3Rpb24gVHlwZShvKSB7CiAgICBzd2l0Y2gobykgewogICAgICBjYXNlIG51bGw6IHJldHVybiBOVUxMX1RZUEU7CiAgICAgIGNhc2UgKHZvaWQgMCk6IHJldHVybiBVTkRFRklORURfVFlQRTsKICAgIH0KICAgIHZhciB0eXBlID0gdHlwZW9mIG87CiAgICBzd2l0Y2godHlwZSkgewogICAgICBjYXNlICdib29sZWFuJzogcmV0dXJuIEJPT0xFQU5fVFlQRTsKICAgICAgY2FzZSAnbnVtYmVyJzogIHJldHVybiBOVU1CRVJfVFlQRTsKICAgICAgY2FzZSAnc3RyaW5nJzogIHJldHVybiBTVFJJTkdfVFlQRTsKICAgIH0KICAgIHJldHVybiBPQkpFQ1RfVFlQRTsKICB9CgogIGZ1bmN0aW9uIGV4dGVuZChkZXN0aW5hdGlvbiwgc291cmNlKSB7CiAgICBmb3IgKHZhciBwcm9wZXJ0eSBpbiBzb3VyY2UpCiAgICAgIGRlc3RpbmF0aW9uW3Byb3BlcnR5XSA9IHNvdXJjZVtwcm9wZXJ0eV07CiAgICByZXR1cm4gZGVzdGluYXRpb247CiAgfQoKICBmdW5jdGlvbiBpbnNwZWN0KG9iamVjdCkgewogICAgdHJ5IHsKICAgICAgaWYgKGlzVW5kZWZpbmVkKG9iamVjdCkpIHJldHVybiAndW5kZWZpbmVkJzsKICAgICAgaWYgKG9iamVjdCA9PT0gbnVsbCkgcmV0dXJuICdudWxsJzsKICAgICAgcmV0dXJuIG9iamVjdC5pbnNwZWN0ID8gb2JqZWN0Lmluc3BlY3QoKSA6IFN0cmluZyhvYmplY3QpOwogICAgfSBjYXRjaCAoZSkgewogICAgICBpZiAoZSBpbnN0YW5jZW9mIFJhbmdlRXJyb3IpIHJldHVybiAnLi4uJzsKICAgICAgdGhyb3cgZTsKICAgIH0KICB9CgogIGZ1bmN0aW9uIHRvSlNPTih2YWx1ZSkgewogICAgcmV0dXJuIFN0cignJywgeyAnJzogdmFsdWUgfSwgW10pOwogIH0KCiAgZnVuY3Rpb24gU3RyKGtleSwgaG9sZGVyLCBzdGFjaykgewogICAgdmFyIHZhbHVlID0gaG9sZGVyW2tleV0sCiAgICAgICAgdHlwZSA9IHR5cGVvZiB2YWx1ZTsKCiAgICBpZiAoVHlwZSh2YWx1ZSkgPT09IE9CSkVDVF9UWVBFICYmIHR5cGVvZiB2YWx1ZS50b0pTT04gPT09ICdmdW5jdGlvbicpIHsKICAgICAgdmFsdWUgPSB2YWx1ZS50b0pTT04oa2V5KTsKICAgIH0KCiAgICB2YXIgX2NsYXNzID0gX3RvU3RyaW5nLmNhbGwodmFsdWUpOwoKICAgIHN3aXRjaCAoX2NsYXNzKSB7CiAgICAgIGNhc2UgTlVNQkVSX0NMQVNTOgogICAgICBjYXNlIEJPT0xFQU5fQ0xBU1M6CiAgICAgIGNhc2UgU1RSSU5HX0NMQVNTOgogICAgICAgIHZhbHVlID0gdmFsdWUudmFsdWVPZigpOwogICAgfQoKICAgIHN3aXRjaCAodmFsdWUpIHsKICAgICAgY2FzZSBudWxsOiByZXR1cm4gJ251bGwnOwogICAgICBjYXNlIHRydWU6IHJldHVybiAndHJ1ZSc7CiAgICAgIGNhc2UgZmFsc2U6IHJldHVybiAnZmFsc2UnOwogICAgfQoKICAgIHR5cGUgPSB0eXBlb2YgdmFsdWU7CiAgICBzd2l0Y2ggKHR5cGUpIHsKICAgICAgY2FzZSAnc3RyaW5nJzoKICAgICAgICByZXR1cm4gdmFsdWUuaW5zcGVjdCh0cnVlKTsKICAgICAgY2FzZSAnbnVtYmVyJzoKICAgICAgICByZXR1cm4gaXNGaW5pdGUodmFsdWUpID8gU3RyaW5nKHZhbHVlKSA6ICdudWxsJzsKICAgICAgY2FzZSAnb2JqZWN0JzoKCiAgICAgICAgZm9yICh2YXIgaSA9IDAsIGxlbmd0aCA9IHN0YWNrLmxlbmd0aDsgaSA8IGxlbmd0aDsgaSsrKSB7CiAgICAgICAgICBpZiAoc3RhY2tbaV0gPT09IHZhbHVlKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoKTsgfQogICAgICAgIH0KICAgICAgICBzdGFjay5wdXNoKHZhbHVlKTsKCiAgICAgICAgdmFyIHBhcnRpYWwgPSBbXTsKICAgICAgICBpZiAoX2NsYXNzID09PSBBUlJBWV9DTEFTUykgewogICAgICAgICAgZm9yICh2YXIgaSA9IDAsIGxlbmd0aCA9IHZhbHVlLmxlbmd0aDsgaSA8IGxlbmd0aDsgaSsrKSB7CiAgICAgICAgICAgIHZhciBzdHIgPSBTdHIoaSwgdmFsdWUsIHN0YWNrKTsKICAgICAgICAgICAgcGFydGlhbC5wdXNoKHR5cGVvZiBzdHIgPT09ICd1bmRlZmluZWQnID8gJ251bGwnIDogc3RyKTsKICAgICAgICAgIH0KICAgICAgICAgIHBhcnRpYWwgPSAnWycgKyBwYXJ0aWFsLmpvaW4oJywnKSArICddJzsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgdmFyIGtleXMgPSBPYmplY3Qua2V5cyh2YWx1ZSk7CiAgICAgICAgICBmb3IgKHZhciBpID0gMCwgbGVuZ3RoID0ga2V5cy5sZW5ndGg7IGkgPCBsZW5ndGg7IGkrKykgewogICAgICAgICAgICB2YXIga2V5ID0ga2V5c1tpXSwgc3RyID0gU3RyKGtleSwgdmFsdWUsIHN0YWNrKTsKICAgICAgICAgICAgaWYgKHR5cGVvZiBzdHIgIT09ICJ1bmRlZmluZWQiKSB7CiAgICAgICAgICAgICAgIHBhcnRpYWwucHVzaChrZXkuaW5zcGVjdCh0cnVlKSsgJzonICsgc3RyKTsKICAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICAgIHBhcnRpYWwgPSAneycgKyBwYXJ0aWFsLmpvaW4oJywnKSArICd9JzsKICAgICAgICB9CiAgICAgICAgc3RhY2sucG9wKCk7CiAgICAgICAgcmV0dXJuIHBhcnRpYWw7CiAgICB9CiAgfQoKICBmdW5jdGlvbiBzdHJpbmdpZnkob2JqZWN0KSB7CiAgICByZXR1cm4gSlNPTi5zdHJpbmdpZnkob2JqZWN0KTsKICB9CgogIGZ1bmN0aW9uIHRvUXVlcnlTdHJpbmcob2JqZWN0KSB7CiAgICByZXR1cm4gJEgob2JqZWN0KS50b1F1ZXJ5U3RyaW5nKCk7CiAgfQoKICBmdW5jdGlvbiB0b0hUTUwob2JqZWN0KSB7CiAgICByZXR1cm4gb2JqZWN0ICYmIG9iamVjdC50b0hUTUwgPyBvYmplY3QudG9IVE1MKCkgOiBTdHJpbmcuaW50ZXJwcmV0KG9iamVjdCk7CiAgfQoKICBmdW5jdGlvbiBrZXlzKG9iamVjdCkgewogICAgaWYgKFR5cGUob2JqZWN0KSAhPT0gT0JKRUNUX1RZUEUpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcigpOyB9CiAgICB2YXIgcmVzdWx0cyA9IFtdOwogICAgZm9yICh2YXIgcHJvcGVydHkgaW4gb2JqZWN0KSB7CiAgICAgIGlmIChvYmplY3QuaGFzT3duUHJvcGVydHkocHJvcGVydHkpKSB7CiAgICAgICAgcmVzdWx0cy5wdXNoKHByb3BlcnR5KTsKICAgICAgfQogICAgfQogICAgcmV0dXJuIHJlc3VsdHM7CiAgfQoKICBmdW5jdGlvbiB2YWx1ZXMob2JqZWN0KSB7CiAgICB2YXIgcmVzdWx0cyA9IFtdOwogICAgZm9yICh2YXIgcHJvcGVydHkgaW4gb2JqZWN0KQogICAgICByZXN1bHRzLnB1c2gob2JqZWN0W3Byb3BlcnR5XSk7CiAgICByZXR1cm4gcmVzdWx0czsKICB9CgogIGZ1bmN0aW9uIGNsb25lKG9iamVjdCkgewogICAgcmV0dXJuIGV4dGVuZCh7IH0sIG9iamVjdCk7CiAgfQoKICBmdW5jdGlvbiBpc0VsZW1lbnQob2JqZWN0KSB7CiAgICByZXR1cm4gISEob2JqZWN0ICYmIG9iamVjdC5ub2RlVHlwZSA9PSAxKTsKICB9CgogIGZ1bmN0aW9uIGlzQXJyYXkob2JqZWN0KSB7CiAgICByZXR1cm4gX3RvU3RyaW5nLmNhbGwob2JqZWN0KSA9PT0gQVJSQVlfQ0xBU1M7CiAgfQoKICB2YXIgaGFzTmF0aXZlSXNBcnJheSA9ICh0eXBlb2YgQXJyYXkuaXNBcnJheSA9PSAnZnVuY3Rpb24nKQogICAgJiYgQXJyYXkuaXNBcnJheShbXSkgJiYgIUFycmF5LmlzQXJyYXkoe30pOwoKICBpZiAoaGFzTmF0aXZlSXNBcnJheSkgewogICAgaXNBcnJheSA9IEFycmF5LmlzQXJyYXk7CiAgfQoKICBmdW5jdGlvbiBpc0hhc2gob2JqZWN0KSB7CiAgICByZXR1cm4gb2JqZWN0IGluc3RhbmNlb2YgSGFzaDsKICB9CgogIGZ1bmN0aW9uIGlzRnVuY3Rpb24ob2JqZWN0KSB7CiAgICByZXR1cm4gX3RvU3RyaW5nLmNhbGwob2JqZWN0KSA9PT0gRlVOQ1RJT05fQ0xBU1M7CiAgfQoKICBmdW5jdGlvbiBpc1N0cmluZyhvYmplY3QpIHsKICAgIHJldHVybiBfdG9TdHJpbmcuY2FsbChvYmplY3QpID09PSBTVFJJTkdfQ0xBU1M7CiAgfQoKICBmdW5jdGlvbiBpc051bWJlcihvYmplY3QpIHsKICAgIHJldHVybiBfdG9TdHJpbmcuY2FsbChvYmplY3QpID09PSBOVU1CRVJfQ0xBU1M7CiAgfQoKICBmdW5jdGlvbiBpc0RhdGUob2JqZWN0KSB7CiAgICByZXR1cm4gX3RvU3RyaW5nLmNhbGwob2JqZWN0KSA9PT0gREFURV9DTEFTUzsKICB9CgogIGZ1bmN0aW9uIGlzVW5kZWZpbmVkKG9iamVjdCkgewogICAgcmV0dXJuIHR5cGVvZiBvYmplY3QgPT09ICJ1bmRlZmluZWQiOwogIH0KCiAgZXh0ZW5kKE9iamVjdCwgewogICAgZXh0ZW5kOiAgICAgICAgZXh0ZW5kLAogICAgaW5zcGVjdDogICAgICAgaW5zcGVjdCwKICAgIHRvSlNPTjogICAgICAgIE5BVElWRV9KU09OX1NUUklOR0lGWV9TVVBQT1JUID8gc3RyaW5naWZ5IDogdG9KU09OLAogICAgdG9RdWVyeVN0cmluZzogdG9RdWVyeVN0cmluZywKICAgIHRvSFRNTDogICAgICAgIHRvSFRNTCwKICAgIGtleXM6ICAgICAgICAgIE9iamVjdC5rZXlzIHx8IGtleXMsCiAgICB2YWx1ZXM6ICAgICAgICB2YWx1ZXMsCiAgICBjbG9uZTogICAgICAgICBjbG9uZSwKICAgIGlzRWxlbWVudDogICAgIGlzRWxlbWVudCwKICAgIGlzQXJyYXk6ICAgICAgIGlzQXJyYXksCiAgICBpc0hhc2g6ICAgICAgICBpc0hhc2gsCiAgICBpc0Z1bmN0aW9uOiAgICBpc0Z1bmN0aW9uLAogICAgaXNTdHJpbmc6ICAgICAgaXNTdHJpbmcsCiAgICBpc051bWJlcjogICAgICBpc051bWJlciwKICAgIGlzRGF0ZTogICAgICAgIGlzRGF0ZSwKICAgIGlzVW5kZWZpbmVkOiAgIGlzVW5kZWZpbmVkCiAgfSk7Cn0pKCk7Ck9iamVjdC5leHRlbmQoRnVuY3Rpb24ucHJvdG90eXBlLCAoZnVuY3Rpb24oKSB7CiAgdmFyIHNsaWNlID0gQXJyYXkucHJvdG90eXBlLnNsaWNlOwoKICBmdW5jdGlvbiB1cGRhdGUoYXJyYXksIGFyZ3MpIHsKICAgIHZhciBhcnJheUxlbmd0aCA9IGFycmF5Lmxlbmd0aCwgbGVuZ3RoID0gYXJncy5sZW5ndGg7CiAgICB3aGlsZSAobGVuZ3RoLS0pIGFycmF5W2FycmF5TGVuZ3RoICsgbGVuZ3RoXSA9IGFyZ3NbbGVuZ3RoXTsKICAgIHJldHVybiBhcnJheTsKICB9CgogIGZ1bmN0aW9uIG1lcmdlKGFycmF5LCBhcmdzKSB7CiAgICBhcnJheSA9IHNsaWNlLmNhbGwoYXJyYXksIDApOwogICAgcmV0dXJuIHVwZGF0ZShhcnJheSwgYXJncyk7CiAgfQoKICBmdW5jdGlvbiBhcmd1bWVudE5hbWVzKCkgewogICAgdmFyIG5hbWVzID0gdGhpcy50b1N0cmluZygpLm1hdGNoKC9eW1xzXChdKmZ1bmN0aW9uW14oXSpcKChbXildKilcKS8pWzFdCiAgICAgIC5yZXBsYWNlKC9cL1wvLio/W1xyXG5dfFwvXCooPzoufFtcclxuXSkqP1wqXC8vZywgJycpCiAgICAgIC5yZXBsYWNlKC9ccysvZywgJycpLnNwbGl0KCcsJyk7CiAgICByZXR1cm4gbmFtZXMubGVuZ3RoID09IDEgJiYgIW5hbWVzWzBdID8gW10gOiBuYW1lczsKICB9CgogIGZ1bmN0aW9uIGJpbmQoY29udGV4dCkgewogICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPCAyICYmIE9iamVjdC5pc1VuZGVmaW5lZChhcmd1bWVudHNbMF0pKSByZXR1cm4gdGhpczsKICAgIHZhciBfX21ldGhvZCA9IHRoaXMsIGFyZ3MgPSBzbGljZS5jYWxsKGFyZ3VtZW50cywgMSk7CiAgICByZXR1cm4gZnVuY3Rpb24oKSB7CiAgICAgIHZhciBhID0gbWVyZ2UoYXJncywgYXJndW1lbnRzKTsKICAgICAgcmV0dXJuIF9fbWV0aG9kLmFwcGx5KGNvbnRleHQsIGEpOwogICAgfQogIH0KCiAgZnVuY3Rpb24gYmluZEFzRXZlbnRMaXN0ZW5lcihjb250ZXh0KSB7CiAgICB2YXIgX19tZXRob2QgPSB0aGlzLCBhcmdzID0gc2xpY2UuY2FsbChhcmd1bWVudHMsIDEpOwogICAgcmV0dXJuIGZ1bmN0aW9uKGV2ZW50KSB7CiAgICAgIHZhciBhID0gdXBkYXRlKFtldmVudCB8fCB3aW5kb3cuZXZlbnRdLCBhcmdzKTsKICAgICAgcmV0dXJuIF9fbWV0aG9kLmFwcGx5KGNvbnRleHQsIGEpOwogICAgfQogIH0KCiAgZnVuY3Rpb24gY3VycnkoKSB7CiAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiB0aGlzOwogICAgdmFyIF9fbWV0aG9kID0gdGhpcywgYXJncyA9IHNsaWNlLmNhbGwoYXJndW1lbnRzLCAwKTsKICAgIHJldHVybiBmdW5jdGlvbigpIHsKICAgICAgdmFyIGEgPSBtZXJnZShhcmdzLCBhcmd1bWVudHMpOwogICAgICByZXR1cm4gX19tZXRob2QuYXBwbHkodGhpcywgYSk7CiAgICB9CiAgfQoKICBmdW5jdGlvbiBkZWxheSh0aW1lb3V0KSB7CiAgICB2YXIgX19tZXRob2QgPSB0aGlzLCBhcmdzID0gc2xpY2UuY2FsbChhcmd1bWVudHMsIDEpOwogICAgdGltZW91dCA9IHRpbWVvdXQgKiAxMDAwOwogICAgcmV0dXJuIHdpbmRvdy5zZXRUaW1lb3V0KGZ1bmN0aW9uKCkgewogICAgICByZXR1cm4gX19tZXRob2QuYXBwbHkoX19tZXRob2QsIGFyZ3MpOwogICAgfSwgdGltZW91dCk7CiAgfQoKICBmdW5jdGlvbiBkZWZlcigpIHsKICAgIHZhciBhcmdzID0gdXBkYXRlKFswLjAxXSwgYXJndW1lbnRzKTsKICAgIHJldHVybiB0aGlzLmRlbGF5LmFwcGx5KHRoaXMsIGFyZ3MpOwogIH0KCiAgZnVuY3Rpb24gd3JhcCh3cmFwcGVyKSB7CiAgICB2YXIgX19tZXRob2QgPSB0aGlzOwogICAgcmV0dXJuIGZ1bmN0aW9uKCkgewogICAgICB2YXIgYSA9IHVwZGF0ZShbX19tZXRob2QuYmluZCh0aGlzKV0sIGFyZ3VtZW50cyk7CiAgICAgIHJldHVybiB3cmFwcGVyLmFwcGx5KHRoaXMsIGEpOwogICAgfQogIH0KCiAgZnVuY3Rpb24gbWV0aG9kaXplKCkgewogICAgaWYgKHRoaXMuX21ldGhvZGl6ZWQpIHJldHVybiB0aGlzLl9tZXRob2RpemVkOwogICAgdmFyIF9fbWV0aG9kID0gdGhpczsKICAgIHJldHVybiB0aGlzLl9tZXRob2RpemVkID0gZnVuY3Rpb24oKSB7CiAgICAgIHZhciBhID0gdXBkYXRlKFt0aGlzXSwgYXJndW1lbnRzKTsKICAgICAgcmV0dXJuIF9fbWV0aG9kLmFwcGx5KG51bGwsIGEpOwogICAgfTsKICB9CgogIHJldHVybiB7CiAgICBhcmd1bWVudE5hbWVzOiAgICAgICBhcmd1bWVudE5hbWVzLAogICAgYmluZDogICAgICAgICAgICAgICAgYmluZCwKICAgIGJpbmRBc0V2ZW50TGlzdGVuZXI6IGJpbmRBc0V2ZW50TGlzdGVuZXIsCiAgICBjdXJyeTogICAgICAgICAgICAgICBjdXJyeSwKICAgIGRlbGF5OiAgICAgICAgICAgICAgIGRlbGF5LAogICAgZGVmZXI6ICAgICAgICAgICAgICAgZGVmZXIsCiAgICB3cmFwOiAgICAgICAgICAgICAgICB3cmFwLAogICAgbWV0aG9kaXplOiAgICAgICAgICAgbWV0aG9kaXplCiAgfQp9KSgpKTsKCgoKKGZ1bmN0aW9uKHByb3RvKSB7CgoKICBmdW5jdGlvbiB0b0lTT1N0cmluZygpIHsKICAgIHJldHVybiB0aGlzLmdldFVUQ0Z1bGxZZWFyKCkgKyAnLScgKwogICAgICAodGhpcy5nZXRVVENNb250aCgpICsgMSkudG9QYWRkZWRTdHJpbmcoMikgKyAnLScgKwogICAgICB0aGlzLmdldFVUQ0RhdGUoKS50b1BhZGRlZFN0cmluZygyKSArICdUJyArCiAgICAgIHRoaXMuZ2V0VVRDSG91cnMoKS50b1BhZGRlZFN0cmluZygyKSArICc6JyArCiAgICAgIHRoaXMuZ2V0VVRDTWludXRlcygpLnRvUGFkZGVkU3RyaW5nKDIpICsgJzonICsKICAgICAgdGhpcy5nZXRVVENTZWNvbmRzKCkudG9QYWRkZWRTdHJpbmcoMikgKyAnWic7CiAgfQoKCiAgZnVuY3Rpb24gdG9KU09OKCkgewogICAgcmV0dXJuIHRoaXMudG9JU09TdHJpbmcoKTsKICB9CgogIGlmICghcHJvdG8udG9JU09TdHJpbmcpIHByb3RvLnRvSVNPU3RyaW5nID0gdG9JU09TdHJpbmc7CiAgaWYgKCFwcm90by50b0pTT04pIHByb3RvLnRvSlNPTiA9IHRvSlNPTjsKCn0pKERhdGUucHJvdG90eXBlKTsKCgpSZWdFeHAucHJvdG90eXBlLm1hdGNoID0gUmVnRXhwLnByb3RvdHlwZS50ZXN0OwoKUmVnRXhwLmVzY2FwZSA9IGZ1bmN0aW9uKHN0cikgewogIHJldHVybiBTdHJpbmcoc3RyKS5yZXBsYWNlKC8oWy4qKz9ePSE6JHt9KCl8W1xdXC9cXF0pL2csICdcXCQxJyk7Cn07CnZhciBQZXJpb2RpY2FsRXhlY3V0ZXIgPSBDbGFzcy5jcmVhdGUoewogIGluaXRpYWxpemU6IGZ1bmN0aW9uKGNhbGxiYWNrLCBmcmVxdWVuY3kpIHsKICAgIHRoaXMuY2FsbGJhY2sgPSBjYWxsYmFjazsKICAgIHRoaXMuZnJlcXVlbmN5ID0gZnJlcXVlbmN5OwogICAgdGhpcy5jdXJyZW50bHlFeGVjdXRpbmcgPSBmYWxzZTsKCiAgICB0aGlzLnJlZ2lzdGVyQ2FsbGJhY2soKTsKICB9LAoKICByZWdpc3RlckNhbGxiYWNrOiBmdW5jdGlvbigpIHsKICAgIHRoaXMudGltZXIgPSBzZXRJbnRlcnZhbCh0aGlzLm9uVGltZXJFdmVudC5iaW5kKHRoaXMpLCB0aGlzLmZyZXF1ZW5jeSAqIDEwMDApOwogIH0sCgogIGV4ZWN1dGU6IGZ1bmN0aW9uKCkgewogICAgdGhpcy5jYWxsYmFjayh0aGlzKTsKICB9LAoKICBzdG9wOiBmdW5jdGlvbigpIHsKICAgIGlmICghdGhpcy50aW1lcikgcmV0dXJuOwogICAgY2xlYXJJbnRlcnZhbCh0aGlzLnRpbWVyKTsKICAgIHRoaXMudGltZXIgPSBudWxsOwogIH0sCgogIG9uVGltZXJFdmVudDogZnVuY3Rpb24oKSB7CiAgICBpZiAoIXRoaXMuY3VycmVudGx5RXhlY3V0aW5nKSB7CiAgICAgIHRyeSB7CiAgICAgICAgdGhpcy5jdXJyZW50bHlFeGVjdXRpbmcgPSB0cnVlOwogICAgICAgIHRoaXMuZXhlY3V0ZSgpOwogICAgICAgIHRoaXMuY3VycmVudGx5RXhlY3V0aW5nID0gZmFsc2U7CiAgICAgIH0gY2F0Y2goZSkgewogICAgICAgIHRoaXMuY3VycmVudGx5RXhlY3V0aW5nID0gZmFsc2U7CiAgICAgICAgdGhyb3cgZTsKICAgICAgfQogICAgfQogIH0KfSk7Ck9iamVjdC5leHRlbmQoU3RyaW5nLCB7CiAgaW50ZXJwcmV0OiBmdW5jdGlvbih2YWx1ZSkgewogICAgcmV0dXJuIHZhbHVlID09IG51bGwgPyAnJyA6IFN0cmluZyh2YWx1ZSk7CiAgfSwKICBzcGVjaWFsQ2hhcjogewogICAgJ1xiJzogJ1xcYicsCiAgICAnXHQnOiAnXFx0JywKICAgICdcbic6ICdcXG4nLAogICAgJ1xmJzogJ1xcZicsCiAgICAnXHInOiAnXFxyJywKICAgICdcXCc6ICdcXFxcJwogIH0KfSk7CgpPYmplY3QuZXh0ZW5kKFN0cmluZy5wcm90b3R5cGUsIChmdW5jdGlvbigpIHsKICB2YXIgTkFUSVZFX0pTT05fUEFSU0VfU1VQUE9SVCA9IHdpbmRvdy5KU09OICYmCiAgICB0eXBlb2YgSlNPTi5wYXJzZSA9PT0gJ2Z1bmN0aW9uJyAmJgogICAgSlNPTi5wYXJzZSgneyJ0ZXN0IjogdHJ1ZX0nKS50ZXN0OwoKICBmdW5jdGlvbiBwcmVwYXJlUmVwbGFjZW1lbnQocmVwbGFjZW1lbnQpIHsKICAgIGlmIChPYmplY3QuaXNGdW5jdGlvbihyZXBsYWNlbWVudCkpIHJldHVybiByZXBsYWNlbWVudDsKICAgIHZhciB0ZW1wbGF0ZSA9IG5ldyBUZW1wbGF0ZShyZXBsYWNlbWVudCk7CiAgICByZXR1cm4gZnVuY3Rpb24obWF0Y2gpIHsgcmV0dXJuIHRlbXBsYXRlLmV2YWx1YXRlKG1hdGNoKSB9OwogIH0KCiAgZnVuY3Rpb24gZ3N1YihwYXR0ZXJuLCByZXBsYWNlbWVudCkgewogICAgdmFyIHJlc3VsdCA9ICcnLCBzb3VyY2UgPSB0aGlzLCBtYXRjaDsKICAgIHJlcGxhY2VtZW50ID0gcHJlcGFyZVJlcGxhY2VtZW50KHJlcGxhY2VtZW50KTsKCiAgICBpZiAoT2JqZWN0LmlzU3RyaW5nKHBhdHRlcm4pKQogICAgICBwYXR0ZXJuID0gUmVnRXhwLmVzY2FwZShwYXR0ZXJuKTsKCiAgICBpZiAoIShwYXR0ZXJuLmxlbmd0aCB8fCBwYXR0ZXJuLnNvdXJjZSkpIHsKICAgICAgcmVwbGFjZW1lbnQgPSByZXBsYWNlbWVudCgnJyk7CiAgICAgIHJldHVybiByZXBsYWNlbWVudCArIHNvdXJjZS5zcGxpdCgnJykuam9pbihyZXBsYWNlbWVudCkgKyByZXBsYWNlbWVudDsKICAgIH0KCiAgICB3aGlsZSAoc291cmNlLmxlbmd0aCA+IDApIHsKICAgICAgaWYgKG1hdGNoID0gc291cmNlLm1hdGNoKHBhdHRlcm4pKSB7CiAgICAgICAgcmVzdWx0ICs9IHNvdXJjZS5zbGljZSgwLCBtYXRjaC5pbmRleCk7CiAgICAgICAgcmVzdWx0ICs9IFN0cmluZy5pbnRlcnByZXQocmVwbGFjZW1lbnQobWF0Y2gpKTsKICAgICAgICBzb3VyY2UgID0gc291cmNlLnNsaWNlKG1hdGNoLmluZGV4ICsgbWF0Y2hbMF0ubGVuZ3RoKTsKICAgICAgfSBlbHNlIHsKICAgICAgICByZXN1bHQgKz0gc291cmNlLCBzb3VyY2UgPSAnJzsKICAgICAgfQogICAgfQogICAgcmV0dXJuIHJlc3VsdDsKICB9CgogIGZ1bmN0aW9uIHN1YihwYXR0ZXJuLCByZXBsYWNlbWVudCwgY291bnQpIHsKICAgIHJlcGxhY2VtZW50ID0gcHJlcGFyZVJlcGxhY2VtZW50KHJlcGxhY2VtZW50KTsKICAgIGNvdW50ID0gT2JqZWN0LmlzVW5kZWZpbmVkKGNvdW50KSA/IDEgOiBjb3VudDsKCiAgICByZXR1cm4gdGhpcy5nc3ViKHBhdHRlcm4sIGZ1bmN0aW9uKG1hdGNoKSB7CiAgICAgIGlmICgtLWNvdW50IDwgMCkgcmV0dXJuIG1hdGNoWzBdOwogICAgICByZXR1cm4gcmVwbGFjZW1lbnQobWF0Y2gpOwogICAgfSk7CiAgfQoKICBmdW5jdGlvbiBzY2FuKHBhdHRlcm4sIGl0ZXJhdG9yKSB7CiAgICB0aGlzLmdzdWIocGF0dGVybiwgaXRlcmF0b3IpOwogICAgcmV0dXJuIFN0cmluZyh0aGlzKTsKICB9CgogIGZ1bmN0aW9uIHRydW5jYXRlKGxlbmd0aCwgdHJ1bmNhdGlvbikgewogICAgbGVuZ3RoID0gbGVuZ3RoIHx8IDMwOwogICAgdHJ1bmNhdGlvbiA9IE9iamVjdC5pc1VuZGVmaW5lZCh0cnVuY2F0aW9uKSA/ICcuLi4nIDogdHJ1bmNhdGlvbjsKICAgIHJldHVybiB0aGlzLmxlbmd0aCA+IGxlbmd0aCA/CiAgICAgIHRoaXMuc2xpY2UoMCwgbGVuZ3RoIC0gdHJ1bmNhdGlvbi5sZW5ndGgpICsgdHJ1bmNhdGlvbiA6IFN0cmluZyh0aGlzKTsKICB9CgogIGZ1bmN0aW9uIHN0cmlwKCkgewogICAgcmV0dXJuIHRoaXMucmVwbGFjZSgvXlxzKy8sICcnKS5yZXBsYWNlKC9ccyskLywgJycpOwogIH0KCiAgZnVuY3Rpb24gc3RyaXBUYWdzKCkgewogICAgcmV0dXJuIHRoaXMucmVwbGFjZSgvPFx3KyhccysoIlteIl0qInwnW14nXSonfFtePl0pKyk/Pnw8XC9cdys+L2dpLCAnJyk7CiAgfQoKICBmdW5jdGlvbiBzdHJpcFNjcmlwdHMoKSB7CiAgICByZXR1cm4gdGhpcy5yZXBsYWNlKG5ldyBSZWdFeHAoUHJvdG90eXBlLlNjcmlwdEZyYWdtZW50LCAnaW1nJyksICcnKTsKICB9CgogIGZ1bmN0aW9uIGV4dHJhY3RTY3JpcHRzKCkgewogICAgdmFyIG1hdGNoQWxsID0gbmV3IFJlZ0V4cChQcm90b3R5cGUuU2NyaXB0RnJhZ21lbnQsICdpbWcnKSwKICAgICAgICBtYXRjaE9uZSA9IG5ldyBSZWdFeHAoUHJvdG90eXBlLlNjcmlwdEZyYWdtZW50LCAnaW0nKTsKICAgIHJldHVybiAodGhpcy5tYXRjaChtYXRjaEFsbCkgfHwgW10pLm1hcChmdW5jdGlvbihzY3JpcHRUYWcpIHsKICAgICAgcmV0dXJuIChzY3JpcHRUYWcubWF0Y2gobWF0Y2hPbmUpIHx8IFsnJywgJyddKVsxXTsKICAgIH0pOwogIH0KCiAgZnVuY3Rpb24gZXZhbFNjcmlwdHMoKSB7CiAgICByZXR1cm4gdGhpcy5leHRyYWN0U2NyaXB0cygpLm1hcChmdW5jdGlvbihzY3JpcHQpIHsgcmV0dXJuIGV2YWwoc2NyaXB0KSB9KTsKICB9CgogIGZ1bmN0aW9uIGVzY2FwZUhUTUwoKSB7CiAgICByZXR1cm4gdGhpcy5yZXBsYWNlKC8mL2csJyZhbXA7JykucmVwbGFjZSgvPC9nLCcmbHQ7JykucmVwbGFjZSgvPi9nLCcmZ3Q7Jyk7CiAgfQoKICBmdW5jdGlvbiB1bmVzY2FwZUhUTUwoKSB7CiAgICByZXR1cm4gdGhpcy5zdHJpcFRhZ3MoKS5yZXBsYWNlKC8mbHQ7L2csJzwnKS5yZXBsYWNlKC8mZ3Q7L2csJz4nKS5yZXBsYWNlKC8mYW1wOy9nLCcmJyk7CiAgfQoKCiAgZnVuY3Rpb24gdG9RdWVyeVBhcmFtcyhzZXBhcmF0b3IpIHsKICAgIHZhciBtYXRjaCA9IHRoaXMuc3RyaXAoKS5tYXRjaCgvKFtePyNdKikoIy4qKT8kLyk7CiAgICBpZiAoIW1hdGNoKSByZXR1cm4geyB9OwoKICAgIHJldHVybiBtYXRjaFsxXS5zcGxpdChzZXBhcmF0b3IgfHwgJyYnKS5pbmplY3QoeyB9LCBmdW5jdGlvbihoYXNoLCBwYWlyKSB7CiAgICAgIGlmICgocGFpciA9IHBhaXIuc3BsaXQoJz0nKSlbMF0pIHsKICAgICAgICB2YXIga2V5ID0gZGVjb2RlVVJJQ29tcG9uZW50KHBhaXIuc2hpZnQoKSksCiAgICAgICAgICAgIHZhbHVlID0gcGFpci5sZW5ndGggPiAxID8gcGFpci5qb2luKCc9JykgOiBwYWlyWzBdOwoKICAgICAgICBpZiAodmFsdWUgIT0gdW5kZWZpbmVkKSB2YWx1ZSA9IGRlY29kZVVSSUNvbXBvbmVudCh2YWx1ZSk7CgogICAgICAgIGlmIChrZXkgaW4gaGFzaCkgewogICAgICAgICAgaWYgKCFPYmplY3QuaXNBcnJheShoYXNoW2tleV0pKSBoYXNoW2tleV0gPSBbaGFzaFtrZXldXTsKICAgICAgICAgIGhhc2hba2V5XS5wdXNoKHZhbHVlKTsKICAgICAgICB9CiAgICAgICAgZWxzZSBoYXNoW2tleV0gPSB2YWx1ZTsKICAgICAgfQogICAgICByZXR1cm4gaGFzaDsKICAgIH0pOwogIH0KCiAgZnVuY3Rpb24gdG9BcnJheSgpIHsKICAgIHJldHVybiB0aGlzLnNwbGl0KCcnKTsKICB9CgogIGZ1bmN0aW9uIHN1Y2MoKSB7CiAgICByZXR1cm4gdGhpcy5zbGljZSgwLCB0aGlzLmxlbmd0aCAtIDEpICsKICAgICAgU3RyaW5nLmZyb21DaGFyQ29kZSh0aGlzLmNoYXJDb2RlQXQodGhpcy5sZW5ndGggLSAxKSArIDEpOwogIH0KCiAgZnVuY3Rpb24gdGltZXMoY291bnQpIHsKICAgIHJldHVybiBjb3VudCA8IDEgPyAnJyA6IG5ldyBBcnJheShjb3VudCArIDEpLmpvaW4odGhpcyk7CiAgfQoKICBmdW5jdGlvbiBjYW1lbGl6ZSgpIHsKICAgIHJldHVybiB0aGlzLnJlcGxhY2UoLy0rKC4pPy9nLCBmdW5jdGlvbihtYXRjaCwgY2hyKSB7CiAgICAgIHJldHVybiBjaHIgPyBjaHIudG9VcHBlckNhc2UoKSA6ICcnOwogICAgfSk7CiAgfQoKICBmdW5jdGlvbiBjYXBpdGFsaXplKCkgewogICAgcmV0dXJuIHRoaXMuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkgKyB0aGlzLnN1YnN0cmluZygxKS50b0xvd2VyQ2FzZSgpOwogIH0KCiAgZnVuY3Rpb24gdW5kZXJzY29yZSgpIHsKICAgIHJldHVybiB0aGlzLnJlcGxhY2UoLzo6L2csICcvJykKICAgICAgICAgICAgICAgLnJlcGxhY2UoLyhbQS1aXSspKFtBLVpdW2Etel0pL2csICckMV8kMicpCiAgICAgICAgICAgICAgIC5yZXBsYWNlKC8oW2EtelxkXSkoW0EtWl0pL2csICckMV8kMicpCiAgICAgICAgICAgICAgIC5yZXBsYWNlKC8tL2csICdfJykKICAgICAgICAgICAgICAgLnRvTG93ZXJDYXNlKCk7CiAgfQoKICBmdW5jdGlvbiBkYXNoZXJpemUoKSB7CiAgICByZXR1cm4gdGhpcy5yZXBsYWNlKC9fL2csICctJyk7CiAgfQoKICBmdW5jdGlvbiBpbnNwZWN0KHVzZURvdWJsZVF1b3RlcykgewogICAgdmFyIGVzY2FwZWRTdHJpbmcgPSB0aGlzLnJlcGxhY2UoL1tceDAwLVx4MWZcXF0vZywgZnVuY3Rpb24oY2hhcmFjdGVyKSB7CiAgICAgIGlmIChjaGFyYWN0ZXIgaW4gU3RyaW5nLnNwZWNpYWxDaGFyKSB7CiAgICAgICAgcmV0dXJuIFN0cmluZy5zcGVjaWFsQ2hhcltjaGFyYWN0ZXJdOwogICAgICB9CiAgICAgIHJldHVybiAnXFx1MDAnICsgY2hhcmFjdGVyLmNoYXJDb2RlQXQoKS50b1BhZGRlZFN0cmluZygyLCAxNik7CiAgICB9KTsKICAgIGlmICh1c2VEb3VibGVRdW90ZXMpIHJldHVybiAnIicgKyBlc2NhcGVkU3RyaW5nLnJlcGxhY2UoLyIvZywgJ1xcIicpICsgJyInOwogICAgcmV0dXJuICInIiArIGVzY2FwZWRTdHJpbmcucmVwbGFjZSgvJy9nLCAnXFxcJycpICsgIiciOwogIH0KCiAgZnVuY3Rpb24gdW5maWx0ZXJKU09OKGZpbHRlcikgewogICAgcmV0dXJuIHRoaXMucmVwbGFjZShmaWx0ZXIgfHwgUHJvdG90eXBlLkpTT05GaWx0ZXIsICckMScpOwogIH0KCiAgZnVuY3Rpb24gaXNKU09OKCkgewogICAgdmFyIHN0ciA9IHRoaXM7CiAgICBpZiAoc3RyLmJsYW5rKCkpIHJldHVybiBmYWxzZTsKICAgIHN0ciA9IHN0ci5yZXBsYWNlKC9cXCg/OlsiXFxcL2JmbnJ0XXx1WzAtOWEtZkEtRl17NH0pL2csICdAJyk7CiAgICBzdHIgPSBzdHIucmVwbGFjZSgvIlteIlxcXG5ccl0qInx0cnVlfGZhbHNlfG51bGx8LT9cZCsoPzpcLlxkKik/KD86W2VFXVsrXC1dP1xkKyk/L2csICddJyk7CiAgICBzdHIgPSBzdHIucmVwbGFjZSgvKD86Xnw6fCwpKD86XHMqXFspKy9nLCAnJyk7CiAgICByZXR1cm4gKC9eW1xdLDp7fVxzXSokLykudGVzdChzdHIpOwogIH0KCiAgZnVuY3Rpb24gZXZhbEpTT04oc2FuaXRpemUpIHsKICAgIHZhciBqc29uID0gdGhpcy51bmZpbHRlckpTT04oKSwKICAgICAgICBjeCA9IC9bXHUwMDAwXHUwMGFkXHUwNjAwLVx1MDYwNFx1MDcwZlx1MTdiNFx1MTdiNVx1MjAwYy1cdTIwMGZcdTIwMjgtXHUyMDJmXHUyMDYwLVx1MjA2Zlx1ZmVmZlx1ZmZmMC1cdWZmZmZdL2c7CiAgICBpZiAoY3gudGVzdChqc29uKSkgewogICAgICBqc29uID0ganNvbi5yZXBsYWNlKGN4LCBmdW5jdGlvbiAoYSkgewogICAgICAgIHJldHVybiAnXFx1JyArICgnMDAwMCcgKyBhLmNoYXJDb2RlQXQoMCkudG9TdHJpbmcoMTYpKS5zbGljZSgtNCk7CiAgICAgIH0pOwogICAgfQogICAgdHJ5IHsKICAgICAgaWYgKCFzYW5pdGl6ZSB8fCBqc29uLmlzSlNPTigpKSByZXR1cm4gZXZhbCgnKCcgKyBqc29uICsgJyknKTsKICAgIH0gY2F0Y2ggKGUpIHsgfQogICAgdGhyb3cgbmV3IFN5bnRheEVycm9yKCdCYWRseSBmb3JtZWQgSlNPTiBzdHJpbmc6ICcgKyB0aGlzLmluc3BlY3QoKSk7CiAgfQoKICBmdW5jdGlvbiBwYXJzZUpTT04oKSB7CiAgICB2YXIganNvbiA9IHRoaXMudW5maWx0ZXJKU09OKCk7CiAgICByZXR1cm4gSlNPTi5wYXJzZShqc29uKTsKICB9CgogIGZ1bmN0aW9uIGluY2x1ZGUocGF0dGVybikgewogICAgcmV0dXJuIHRoaXMuaW5kZXhPZihwYXR0ZXJuKSA+IC0xOwogIH0KCiAgZnVuY3Rpb24gc3RhcnRzV2l0aChwYXR0ZXJuKSB7CiAgICByZXR1cm4gdGhpcy5sYXN0SW5kZXhPZihwYXR0ZXJuLCAwKSA9PT0gMDsKICB9CgogIGZ1bmN0aW9uIGVuZHNXaXRoKHBhdHRlcm4pIHsKICAgIHZhciBkID0gdGhpcy5sZW5ndGggLSBwYXR0ZXJuLmxlbmd0aDsKICAgIHJldHVybiBkID49IDAgJiYgdGhpcy5pbmRleE9mKHBhdHRlcm4sIGQpID09PSBkOwogIH0KCiAgZnVuY3Rpb24gZW1wdHkoKSB7CiAgICByZXR1cm4gdGhpcyA9PSAnJzsKICB9CgogIGZ1bmN0aW9uIGJsYW5rKCkgewogICAgcmV0dXJuIC9eXHMqJC8udGVzdCh0aGlzKTsKICB9CgogIGZ1bmN0aW9uIGludGVycG9sYXRlKG9iamVjdCwgcGF0dGVybikgewogICAgcmV0dXJuIG5ldyBUZW1wbGF0ZSh0aGlzLCBwYXR0ZXJuKS5ldmFsdWF0ZShvYmplY3QpOwogIH0KCiAgcmV0dXJuIHsKICAgIGdzdWI6ICAgICAgICAgICBnc3ViLAogICAgc3ViOiAgICAgICAgICAgIHN1YiwKICAgIHNjYW46ICAgICAgICAgICBzY2FuLAogICAgdHJ1bmNhdGU6ICAgICAgIHRydW5jYXRlLAogICAgc3RyaXA6ICAgICAgICAgIFN0cmluZy5wcm90b3R5cGUudHJpbSB8fCBzdHJpcCwKICAgIHN0cmlwVGFnczogICAgICBzdHJpcFRhZ3MsCiAgICBzdHJpcFNjcmlwdHM6ICAgc3RyaXBTY3JpcHRzLAogICAgZXh0cmFjdFNjcmlwdHM6IGV4dHJhY3RTY3JpcHRzLAogICAgZXZhbFNjcmlwdHM6ICAgIGV2YWxTY3JpcHRzLAogICAgZXNjYXBlSFRNTDogICAgIGVzY2FwZUhUTUwsCiAgICB1bmVzY2FwZUhUTUw6ICAgdW5lc2NhcGVIVE1MLAogICAgdG9RdWVyeVBhcmFtczogIHRvUXVlcnlQYXJhbXMsCiAgICBwYXJzZVF1ZXJ5OiAgICAgdG9RdWVyeVBhcmFtcywKICAgIHRvQXJyYXk6ICAgICAgICB0b0FycmF5LAogICAgc3VjYzogICAgICAgICAgIHN1Y2MsCiAgICB0aW1lczogICAgICAgICAgdGltZXMsCiAgICBjYW1lbGl6ZTogICAgICAgY2FtZWxpemUsCiAgICBjYXBpdGFsaXplOiAgICAgY2FwaXRhbGl6ZSwKICAgIHVuZGVyc2NvcmU6ICAgICB1bmRlcnNjb3JlLAogICAgZGFzaGVyaXplOiAgICAgIGRhc2hlcml6ZSwKICAgIGluc3BlY3Q6ICAgICAgICBpbnNwZWN0LAogICAgdW5maWx0ZXJKU09OOiAgIHVuZmlsdGVySlNPTiwKICAgIGlzSlNPTjogICAgICAgICBpc0pTT04sCiAgICBldmFsSlNPTjogICAgICAgTkFUSVZFX0pTT05fUEFSU0VfU1VQUE9SVCA/IHBhcnNlSlNPTiA6IGV2YWxKU09OLAogICAgaW5jbHVkZTogICAgICAgIGluY2x1ZGUsCiAgICBzdGFydHNXaXRoOiAgICAgc3RhcnRzV2l0aCwKICAgIGVuZHNXaXRoOiAgICAgICBlbmRzV2l0aCwKICAgIGVtcHR5OiAgICAgICAgICBlbXB0eSwKICAgIGJsYW5rOiAgICAgICAgICBibGFuaywKICAgIGludGVycG9sYXRlOiAgICBpbnRlcnBvbGF0ZQogIH07Cn0pKCkpOwoKdmFyIFRlbXBsYXRlID0gQ2xhc3MuY3JlYXRlKHsKICBpbml0aWFsaXplOiBmdW5jdGlvbih0ZW1wbGF0ZSwgcGF0dGVybikgewogICAgdGhpcy50ZW1wbGF0ZSA9IHRlbXBsYXRlLnRvU3RyaW5nKCk7CiAgICB0aGlzLnBhdHRlcm4gPSBwYXR0ZXJuIHx8IFRlbXBsYXRlLlBhdHRlcm47CiAgfSwKCiAgZXZhbHVhdGU6IGZ1bmN0aW9uKG9iamVjdCkgewogICAgaWYgKG9iamVjdCAmJiBPYmplY3QuaXNGdW5jdGlvbihvYmplY3QudG9UZW1wbGF0ZVJlcGxhY2VtZW50cykpCiAgICAgIG9iamVjdCA9IG9iamVjdC50b1RlbXBsYXRlUmVwbGFjZW1lbnRzKCk7CgogICAgcmV0dXJuIHRoaXMudGVtcGxhdGUuZ3N1Yih0aGlzLnBhdHRlcm4sIGZ1bmN0aW9uKG1hdGNoKSB7CiAgICAgIGlmIChvYmplY3QgPT0gbnVsbCkgcmV0dXJuIChtYXRjaFsxXSArICcnKTsKCiAgICAgIHZhciBiZWZvcmUgPSBtYXRjaFsxXSB8fCAnJzsKICAgICAgaWYgKGJlZm9yZSA9PSAnXFwnKSByZXR1cm4gbWF0Y2hbMl07CgogICAgICB2YXIgY3R4ID0gb2JqZWN0LCBleHByID0gbWF0Y2hbM10sCiAgICAgICAgICBwYXR0ZXJuID0gL14oW14uW10rfFxbKCg/Oi4qP1teXFxdKT8pXF0pKFwufFxbfCQpLzsKCiAgICAgIG1hdGNoID0gcGF0dGVybi5leGVjKGV4cHIpOwogICAgICBpZiAobWF0Y2ggPT0gbnVsbCkgcmV0dXJuIGJlZm9yZTsKCiAgICAgIHdoaWxlIChtYXRjaCAhPSBudWxsKSB7CiAgICAgICAgdmFyIGNvbXAgPSBtYXRjaFsxXS5zdGFydHNXaXRoKCdbJykgPyBtYXRjaFsyXS5yZXBsYWNlKC9cXFxcXS9nLCAnXScpIDogbWF0Y2hbMV07CiAgICAgICAgY3R4ID0gY3R4W2NvbXBdOwogICAgICAgIGlmIChudWxsID09IGN0eCB8fCAnJyA9PSBtYXRjaFszXSkgYnJlYWs7CiAgICAgICAgZXhwciA9IGV4cHIuc3Vic3RyaW5nKCdbJyA9PSBtYXRjaFszXSA/IG1hdGNoWzFdLmxlbmd0aCA6IG1hdGNoWzBdLmxlbmd0aCk7CiAgICAgICAgbWF0Y2ggPSBwYXR0ZXJuLmV4ZWMoZXhwcik7CiAgICAgIH0KCiAgICAgIHJldHVybiBiZWZvcmUgKyBTdHJpbmcuaW50ZXJwcmV0KGN0eCk7CiAgICB9KTsKICB9Cn0pOwpUZW1wbGF0ZS5QYXR0ZXJuID0gLyhefC58XHJ8XG4pKCNceyguKj8pXH0pLzsKCnZhciAkYnJlYWsgPSB7IH07Cgp2YXIgRW51bWVyYWJsZSA9IChmdW5jdGlvbigpIHsKICBmdW5jdGlvbiBlYWNoKGl0ZXJhdG9yLCBjb250ZXh0KSB7CiAgICB2YXIgaW5kZXggPSAwOwogICAgdHJ5IHsKICAgICAgdGhpcy5fZWFjaChmdW5jdGlvbih2YWx1ZSkgewogICAgICAgIGl0ZXJhdG9yLmNhbGwoY29udGV4dCwgdmFsdWUsIGluZGV4KyspOwogICAgICB9KTsKICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgaWYgKGUgIT0gJGJyZWFrKSB0aHJvdyBlOwogICAgfQogICAgcmV0dXJuIHRoaXM7CiAgfQoKICBmdW5jdGlvbiBlYWNoU2xpY2UobnVtYmVyLCBpdGVyYXRvciwgY29udGV4dCkgewogICAgdmFyIGluZGV4ID0gLW51bWJlciwgc2xpY2VzID0gW10sIGFycmF5ID0gdGhpcy50b0FycmF5KCk7CiAgICBpZiAobnVtYmVyIDwgMSkgcmV0dXJuIGFycmF5OwogICAgd2hpbGUgKChpbmRleCArPSBudW1iZXIpIDwgYXJyYXkubGVuZ3RoKQogICAgICBzbGljZXMucHVzaChhcnJheS5zbGljZShpbmRleCwgaW5kZXgrbnVtYmVyKSk7CiAgICByZXR1cm4gc2xpY2VzLmNvbGxlY3QoaXRlcmF0b3IsIGNvbnRleHQpOwogIH0KCiAgZnVuY3Rpb24gYWxsKGl0ZXJhdG9yLCBjb250ZXh0KSB7CiAgICBpdGVyYXRvciA9IGl0ZXJhdG9yIHx8IFByb3RvdHlwZS5LOwogICAgdmFyIHJlc3VsdCA9IHRydWU7CiAgICB0aGlzLmVhY2goZnVuY3Rpb24odmFsdWUsIGluZGV4KSB7CiAgICAgIHJlc3VsdCA9IHJlc3VsdCAmJiAhIWl0ZXJhdG9yLmNhbGwoY29udGV4dCwgdmFsdWUsIGluZGV4KTsKICAgICAgaWYgKCFyZXN1bHQpIHRocm93ICRicmVhazsKICAgIH0pOwogICAgcmV0dXJuIHJlc3VsdDsKICB9CgogIGZ1bmN0aW9uIGFueShpdGVyYXRvciwgY29udGV4dCkgewogICAgaXRlcmF0b3IgPSBpdGVyYXRvciB8fCBQcm90b3R5cGUuSzsKICAgIHZhciByZXN1bHQgPSBmYWxzZTsKICAgIHRoaXMuZWFjaChmdW5jdGlvbih2YWx1ZSwgaW5kZXgpIHsKICAgICAgaWYgKHJlc3VsdCA9ICEhaXRlcmF0b3IuY2FsbChjb250ZXh0LCB2YWx1ZSwgaW5kZXgpKQogICAgICAgIHRocm93ICRicmVhazsKICAgIH0pOwogICAgcmV0dXJuIHJlc3VsdDsKICB9CgogIGZ1bmN0aW9uIGNvbGxlY3QoaXRlcmF0b3IsIGNvbnRleHQpIHsKICAgIGl0ZXJhdG9yID0gaXRlcmF0b3IgfHwgUHJvdG90eXBlLks7CiAgICB2YXIgcmVzdWx0cyA9IFtdOwogICAgdGhpcy5lYWNoKGZ1bmN0aW9uKHZhbHVlLCBpbmRleCkgewogICAgICByZXN1bHRzLnB1c2goaXRlcmF0b3IuY2FsbChjb250ZXh0LCB2YWx1ZSwgaW5kZXgpKTsKICAgIH0pOwogICAgcmV0dXJuIHJlc3VsdHM7CiAgfQoKICBmdW5jdGlvbiBkZXRlY3QoaXRlcmF0b3IsIGNvbnRleHQpIHsKICAgIHZhciByZXN1bHQ7CiAgICB0aGlzLmVhY2goZnVuY3Rpb24odmFsdWUsIGluZGV4KSB7CiAgICAgIGlmIChpdGVyYXRvci5jYWxsKGNvbnRleHQsIHZhbHVlLCBpbmRleCkpIHsKICAgICAgICByZXN1bHQgPSB2YWx1ZTsKICAgICAgICB0aHJvdyAkYnJlYWs7CiAgICAgIH0KICAgIH0pOwogICAgcmV0dXJuIHJlc3VsdDsKICB9CgogIGZ1bmN0aW9uIGZpbmRBbGwoaXRlcmF0b3IsIGNvbnRleHQpIHsKICAgIHZhciByZXN1bHRzID0gW107CiAgICB0aGlzLmVhY2goZnVuY3Rpb24odmFsdWUsIGluZGV4KSB7CiAgICAgIGlmIChpdGVyYXRvci5jYWxsKGNvbnRleHQsIHZhbHVlLCBpbmRleCkpCiAgICAgICAgcmVzdWx0cy5wdXNoKHZhbHVlKTsKICAgIH0pOwogICAgcmV0dXJuIHJlc3VsdHM7CiAgfQoKICBmdW5jdGlvbiBncmVwKGZpbHRlciwgaXRlcmF0b3IsIGNvbnRleHQpIHsKICAgIGl0ZXJhdG9yID0gaXRlcmF0b3IgfHwgUHJvdG90eXBlLks7CiAgICB2YXIgcmVzdWx0cyA9IFtdOwoKICAgIGlmIChPYmplY3QuaXNTdHJpbmcoZmlsdGVyKSkKICAgICAgZmlsdGVyID0gbmV3IFJlZ0V4cChSZWdFeHAuZXNjYXBlKGZpbHRlcikpOwoKICAgIHRoaXMuZWFjaChmdW5jdGlvbih2YWx1ZSwgaW5kZXgpIHsKICAgICAgaWYgKGZpbHRlci5tYXRjaCh2YWx1ZSkpCiAgICAgICAgcmVzdWx0cy5wdXNoKGl0ZXJhdG9yLmNhbGwoY29udGV4dCwgdmFsdWUsIGluZGV4KSk7CiAgICB9KTsKICAgIHJldHVybiByZXN1bHRzOwogIH0KCiAgZnVuY3Rpb24gaW5jbHVkZShvYmplY3QpIHsKICAgIGlmIChPYmplY3QuaXNGdW5jdGlvbih0aGlzLmluZGV4T2YpKQogICAgICBpZiAodGhpcy5pbmRleE9mKG9iamVjdCkgIT0gLTEpIHJldHVybiB0cnVlOwoKICAgIHZhciBmb3VuZCA9IGZhbHNlOwogICAgdGhpcy5lYWNoKGZ1bmN0aW9uKHZhbHVlKSB7CiAgICAgIGlmICh2YWx1ZSA9PSBvYmplY3QpIHsKICAgICAgICBmb3VuZCA9IHRydWU7CiAgICAgICAgdGhyb3cgJGJyZWFrOwogICAgICB9CiAgICB9KTsKICAgIHJldHVybiBmb3VuZDsKICB9CgogIGZ1bmN0aW9uIGluR3JvdXBzT2YobnVtYmVyLCBmaWxsV2l0aCkgewogICAgZmlsbFdpdGggPSBPYmplY3QuaXNVbmRlZmluZWQoZmlsbFdpdGgpID8gbnVsbCA6IGZpbGxXaXRoOwogICAgcmV0dXJuIHRoaXMuZWFjaFNsaWNlKG51bWJlciwgZnVuY3Rpb24oc2xpY2UpIHsKICAgICAgd2hpbGUoc2xpY2UubGVuZ3RoIDwgbnVtYmVyKSBzbGljZS5wdXNoKGZpbGxXaXRoKTsKICAgICAgcmV0dXJuIHNsaWNlOwogICAgfSk7CiAgfQoKICBmdW5jdGlvbiBpbmplY3QobWVtbywgaXRlcmF0b3IsIGNvbnRleHQpIHsKICAgIHRoaXMuZWFjaChmdW5jdGlvbih2YWx1ZSwgaW5kZXgpIHsKICAgICAgbWVtbyA9IGl0ZXJhdG9yLmNhbGwoY29udGV4dCwgbWVtbywgdmFsdWUsIGluZGV4KTsKICAgIH0pOwogICAgcmV0dXJuIG1lbW87CiAgfQoKICBmdW5jdGlvbiBpbnZva2UobWV0aG9kKSB7CiAgICB2YXIgYXJncyA9ICRBKGFyZ3VtZW50cykuc2xpY2UoMSk7CiAgICByZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24odmFsdWUpIHsKICAgICAgcmV0dXJuIHZhbHVlW21ldGhvZF0uYXBwbHkodmFsdWUsIGFyZ3MpOwogICAgfSk7CiAgfQoKICBmdW5jdGlvbiBtYXgoaXRlcmF0b3IsIGNvbnRleHQpIHsKICAgIGl0ZXJhdG9yID0gaXRlcmF0b3IgfHwgUHJvdG90eXBlLks7CiAgICB2YXIgcmVzdWx0OwogICAgdGhpcy5lYWNoKGZ1bmN0aW9uKHZhbHVlLCBpbmRleCkgewogICAgICB2YWx1ZSA9IGl0ZXJhdG9yLmNhbGwoY29udGV4dCwgdmFsdWUsIGluZGV4KTsKICAgICAgaWYgKHJlc3VsdCA9PSBudWxsIHx8IHZhbHVlID49IHJlc3VsdCkKICAgICAgICByZXN1bHQgPSB2YWx1ZTsKICAgIH0pOwogICAgcmV0dXJuIHJlc3VsdDsKICB9CgogIGZ1bmN0aW9uIG1pbihpdGVyYXRvciwgY29udGV4dCkgewogICAgaXRlcmF0b3IgPSBpdGVyYXRvciB8fCBQcm90b3R5cGUuSzsKICAgIHZhciByZXN1bHQ7CiAgICB0aGlzLmVhY2goZnVuY3Rpb24odmFsdWUsIGluZGV4KSB7CiAgICAgIHZhbHVlID0gaXRlcmF0b3IuY2FsbChjb250ZXh0LCB2YWx1ZSwgaW5kZXgpOwogICAgICBpZiAocmVzdWx0ID09IG51bGwgfHwgdmFsdWUgPCByZXN1bHQpCiAgICAgICAgcmVzdWx0ID0gdmFsdWU7CiAgICB9KTsKICAgIHJldHVybiByZXN1bHQ7CiAgfQoKICBmdW5jdGlvbiBwYXJ0aXRpb24oaXRlcmF0b3IsIGNvbnRleHQpIHsKICAgIGl0ZXJhdG9yID0gaXRlcmF0b3IgfHwgUHJvdG90eXBlLks7CiAgICB2YXIgdHJ1ZXMgPSBbXSwgZmFsc2VzID0gW107CiAgICB0aGlzLmVhY2goZnVuY3Rpb24odmFsdWUsIGluZGV4KSB7CiAgICAgIChpdGVyYXRvci5jYWxsKGNvbnRleHQsIHZhbHVlLCBpbmRleCkgPwogICAgICAgIHRydWVzIDogZmFsc2VzKS5wdXNoKHZhbHVlKTsKICAgIH0pOwogICAgcmV0dXJuIFt0cnVlcywgZmFsc2VzXTsKICB9CgogIGZ1bmN0aW9uIHBsdWNrKHByb3BlcnR5KSB7CiAgICB2YXIgcmVzdWx0cyA9IFtdOwogICAgdGhpcy5lYWNoKGZ1bmN0aW9uKHZhbHVlKSB7CiAgICAgIHJlc3VsdHMucHVzaCh2YWx1ZVtwcm9wZXJ0eV0pOwogICAgfSk7CiAgICByZXR1cm4gcmVzdWx0czsKICB9CgogIGZ1bmN0aW9uIHJlamVjdChpdGVyYXRvciwgY29udGV4dCkgewogICAgdmFyIHJlc3VsdHMgPSBbXTsKICAgIHRoaXMuZWFjaChmdW5jdGlvbih2YWx1ZSwgaW5kZXgpIHsKICAgICAgaWYgKCFpdGVyYXRvci5jYWxsKGNvbnRleHQsIHZhbHVlLCBpbmRleCkpCiAgICAgICAgcmVzdWx0cy5wdXNoKHZhbHVlKTsKICAgIH0pOwogICAgcmV0dXJuIHJlc3VsdHM7CiAgfQoKICBmdW5jdGlvbiBzb3J0QnkoaXRlcmF0b3IsIGNvbnRleHQpIHsKICAgIHJldHVybiB0aGlzLm1hcChmdW5jdGlvbih2YWx1ZSwgaW5kZXgpIHsKICAgICAgcmV0dXJuIHsKICAgICAgICB2YWx1ZTogdmFsdWUsCiAgICAgICAgY3JpdGVyaWE6IGl0ZXJhdG9yLmNhbGwoY29udGV4dCwgdmFsdWUsIGluZGV4KQogICAgICB9OwogICAgfSkuc29ydChmdW5jdGlvbihsZWZ0LCByaWdodCkgewogICAgICB2YXIgYSA9IGxlZnQuY3JpdGVyaWEsIGIgPSByaWdodC5jcml0ZXJpYTsKICAgICAgcmV0dXJuIGEgPCBiID8gLTEgOiBhID4gYiA/IDEgOiAwOwogICAgfSkucGx1Y2soJ3ZhbHVlJyk7CiAgfQoKICBmdW5jdGlvbiB0b0FycmF5KCkgewogICAgcmV0dXJuIHRoaXMubWFwKCk7CiAgfQoKICBmdW5jdGlvbiB6aXAoKSB7CiAgICB2YXIgaXRlcmF0b3IgPSBQcm90b3R5cGUuSywgYXJncyA9ICRBKGFyZ3VtZW50cyk7CiAgICBpZiAoT2JqZWN0LmlzRnVuY3Rpb24oYXJncy5sYXN0KCkpKQogICAgICBpdGVyYXRvciA9IGFyZ3MucG9wKCk7CgogICAgdmFyIGNvbGxlY3Rpb25zID0gW3RoaXNdLmNvbmNhdChhcmdzKS5tYXAoJEEpOwogICAgcmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uKHZhbHVlLCBpbmRleCkgewogICAgICByZXR1cm4gaXRlcmF0b3IoY29sbGVjdGlvbnMucGx1Y2soaW5kZXgpKTsKICAgIH0pOwogIH0KCiAgZnVuY3Rpb24gc2l6ZSgpIHsKICAgIHJldHVybiB0aGlzLnRvQXJyYXkoKS5sZW5ndGg7CiAgfQoKICBmdW5jdGlvbiBpbnNwZWN0KCkgewogICAgcmV0dXJuICcjPEVudW1lcmFibGU6JyArIHRoaXMudG9BcnJheSgpLmluc3BlY3QoKSArICc+JzsKICB9CgoKCgoKCgoKCiAgcmV0dXJuIHsKICAgIGVhY2g6ICAgICAgIGVhY2gsCiAgICBlYWNoU2xpY2U6ICBlYWNoU2xpY2UsCiAgICBhbGw6ICAgICAgICBhbGwsCiAgICBldmVyeTogICAgICBhbGwsCiAgICBhbnk6ICAgICAgICBhbnksCiAgICBzb21lOiAgICAgICBhbnksCiAgICBjb2xsZWN0OiAgICBjb2xsZWN0LAogICAgbWFwOiAgICAgICAgY29sbGVjdCwKICAgIGRldGVjdDogICAgIGRldGVjdCwKICAgIGZpbmRBbGw6ICAgIGZpbmRBbGwsCiAgICBzZWxlY3Q6ICAgICBmaW5kQWxsLAogICAgZmlsdGVyOiAgICAgZmluZEFsbCwKICAgIGdyZXA6ICAgICAgIGdyZXAsCiAgICBpbmNsdWRlOiAgICBpbmNsdWRlLAogICAgbWVtYmVyOiAgICAgaW5jbHVkZSwKICAgIGluR3JvdXBzT2Y6IGluR3JvdXBzT2YsCiAgICBpbmplY3Q6ICAgICBpbmplY3QsCiAgICBpbnZva2U6ICAgICBpbnZva2UsCiAgICBtYXg6ICAgICAgICBtYXgsCiAgICBtaW46ICAgICAgICBtaW4sCiAgICBwYXJ0aXRpb246ICBwYXJ0aXRpb24sCiAgICBwbHVjazogICAgICBwbHVjaywKICAgIHJlamVjdDogICAgIHJlamVjdCwKICAgIHNvcnRCeTogICAgIHNvcnRCeSwKICAgIHRvQXJyYXk6ICAgIHRvQXJyYXksCiAgICBlbnRyaWVzOiAgICB0b0FycmF5LAogICAgemlwOiAgICAgICAgemlwLAogICAgc2l6ZTogICAgICAgc2l6ZSwKICAgIGluc3BlY3Q6ICAgIGluc3BlY3QsCiAgICBmaW5kOiAgICAgICBkZXRlY3QKICB9Owp9KSgpOwoKZnVuY3Rpb24gJEEoaXRlcmFibGUpIHsKICBpZiAoIWl0ZXJhYmxlKSByZXR1cm4gW107CiAgaWYgKCd0b0FycmF5JyBpbiBPYmplY3QoaXRlcmFibGUpKSByZXR1cm4gaXRlcmFibGUudG9BcnJheSgpOwogIHZhciBsZW5ndGggPSBpdGVyYWJsZS5sZW5ndGggfHwgMCwgcmVzdWx0cyA9IG5ldyBBcnJheShsZW5ndGgpOwogIHdoaWxlIChsZW5ndGgtLSkgcmVzdWx0c1tsZW5ndGhdID0gaXRlcmFibGVbbGVuZ3RoXTsKICByZXR1cm4gcmVzdWx0czsKfQoKCmZ1bmN0aW9uICR3KHN0cmluZykgewogIGlmICghT2JqZWN0LmlzU3RyaW5nKHN0cmluZykpIHJldHVybiBbXTsKICBzdHJpbmcgPSBzdHJpbmcuc3RyaXAoKTsKICByZXR1cm4gc3RyaW5nID8gc3RyaW5nLnNwbGl0KC9ccysvKSA6IFtdOwp9CgpBcnJheS5mcm9tID0gJEE7CgoKKGZ1bmN0aW9uKCkgewogIHZhciBhcnJheVByb3RvID0gQXJyYXkucHJvdG90eXBlLAogICAgICBzbGljZSA9IGFycmF5UHJvdG8uc2xpY2UsCiAgICAgIF9lYWNoID0gYXJyYXlQcm90by5mb3JFYWNoOyAvLyB1c2UgbmF0aXZlIGJyb3dzZXIgSlMgMS42IGltcGxlbWVudGF0aW9uIGlmIGF2YWlsYWJsZQoKICBmdW5jdGlvbiBlYWNoKGl0ZXJhdG9yLCBjb250ZXh0KSB7CiAgICBmb3IgKHZhciBpID0gMCwgbGVuZ3RoID0gdGhpcy5sZW5ndGggPj4+IDA7IGkgPCBsZW5ndGg7IGkrKykgewogICAgICBpZiAoaSBpbiB0aGlzKSBpdGVyYXRvci5jYWxsKGNvbnRleHQsIHRoaXNbaV0sIGksIHRoaXMpOwogICAgfQogIH0KICBpZiAoIV9lYWNoKSBfZWFjaCA9IGVhY2g7CgogIGZ1bmN0aW9uIGNsZWFyKCkgewogICAgdGhpcy5sZW5ndGggPSAwOwogICAgcmV0dXJuIHRoaXM7CiAgfQoKICBmdW5jdGlvbiBmaXJzdCgpIHsKICAgIHJldHVybiB0aGlzWzBdOwogIH0KCiAgZnVuY3Rpb24gbGFzdCgpIHsKICAgIHJldHVybiB0aGlzW3RoaXMubGVuZ3RoIC0gMV07CiAgfQoKICBmdW5jdGlvbiBjb21wYWN0KCkgewogICAgcmV0dXJuIHRoaXMuc2VsZWN0KGZ1bmN0aW9uKHZhbHVlKSB7CiAgICAgIHJldHVybiB2YWx1ZSAhPSBudWxsOwogICAgfSk7CiAgfQoKICBmdW5jdGlvbiBmbGF0dGVuKCkgewogICAgcmV0dXJuIHRoaXMuaW5qZWN0KFtdLCBmdW5jdGlvbihhcnJheSwgdmFsdWUpIHsKICAgICAgaWYgKE9iamVjdC5pc0FycmF5KHZhbHVlKSkKICAgICAgICByZXR1cm4gYXJyYXkuY29uY2F0KHZhbHVlLmZsYXR0ZW4oKSk7CiAgICAgIGFycmF5LnB1c2godmFsdWUpOwogICAgICByZXR1cm4gYXJyYXk7CiAgICB9KTsKICB9CgogIGZ1bmN0aW9uIHdpdGhvdXQoKSB7CiAgICB2YXIgdmFsdWVzID0gc2xpY2UuY2FsbChhcmd1bWVudHMsIDApOwogICAgcmV0dXJuIHRoaXMuc2VsZWN0KGZ1bmN0aW9uKHZhbHVlKSB7CiAgICAgIHJldHVybiAhdmFsdWVzLmluY2x1ZGUodmFsdWUpOwogICAgfSk7CiAgfQoKICBmdW5jdGlvbiByZXZlcnNlKGlubGluZSkgewogICAgcmV0dXJuIChpbmxpbmUgPT09IGZhbHNlID8gdGhpcy50b0FycmF5KCkgOiB0aGlzKS5fcmV2ZXJzZSgpOwogIH0KCiAgZnVuY3Rpb24gdW5pcShzb3J0ZWQpIHsKICAgIHJldHVybiB0aGlzLmluamVjdChbXSwgZnVuY3Rpb24oYXJyYXksIHZhbHVlLCBpbmRleCkgewogICAgICBpZiAoMCA9PSBpbmRleCB8fCAoc29ydGVkID8gYXJyYXkubGFzdCgpICE9IHZhbHVlIDogIWFycmF5LmluY2x1ZGUodmFsdWUpKSkKICAgICAgICBhcnJheS5wdXNoKHZhbHVlKTsKICAgICAgcmV0dXJuIGFycmF5OwogICAgfSk7CiAgfQoKICBmdW5jdGlvbiBpbnRlcnNlY3QoYXJyYXkpIHsKICAgIHJldHVybiB0aGlzLnVuaXEoKS5maW5kQWxsKGZ1bmN0aW9uKGl0ZW0pIHsKICAgICAgcmV0dXJuIGFycmF5LmRldGVjdChmdW5jdGlvbih2YWx1ZSkgeyByZXR1cm4gaXRlbSA9PT0gdmFsdWUgfSk7CiAgICB9KTsKICB9CgoKICBmdW5jdGlvbiBjbG9uZSgpIHsKICAgIHJldHVybiBzbGljZS5jYWxsKHRoaXMsIDApOwogIH0KCiAgZnVuY3Rpb24gc2l6ZSgpIHsKICAgIHJldHVybiB0aGlzLmxlbmd0aDsKICB9CgogIGZ1bmN0aW9uIGluc3BlY3QoKSB7CiAgICByZXR1cm4gJ1snICsgdGhpcy5tYXAoT2JqZWN0Lmluc3BlY3QpLmpvaW4oJywgJykgKyAnXSc7CiAgfQoKICBmdW5jdGlvbiBpbmRleE9mKGl0ZW0sIGkpIHsKICAgIGkgfHwgKGkgPSAwKTsKICAgIHZhciBsZW5ndGggPSB0aGlzLmxlbmd0aDsKICAgIGlmIChpIDwgMCkgaSA9IGxlbmd0aCArIGk7CiAgICBmb3IgKDsgaSA8IGxlbmd0aDsgaSsrKQogICAgICBpZiAodGhpc1tpXSA9PT0gaXRlbSkgcmV0dXJuIGk7CiAgICByZXR1cm4gLTE7CiAgfQoKICBmdW5jdGlvbiBsYXN0SW5kZXhPZihpdGVtLCBpKSB7CiAgICBpID0gaXNOYU4oaSkgPyB0aGlzLmxlbmd0aCA6IChpIDwgMCA/IHRoaXMubGVuZ3RoICsgaSA6IGkpICsgMTsKICAgIHZhciBuID0gdGhpcy5zbGljZSgwLCBpKS5yZXZlcnNlKCkuaW5kZXhPZihpdGVtKTsKICAgIHJldHVybiAobiA8IDApID8gbiA6IGkgLSBuIC0gMTsKICB9CgogIGZ1bmN0aW9uIGNvbmNhdCgpIHsKICAgIHZhciBhcnJheSA9IHNsaWNlLmNhbGwodGhpcywgMCksIGl0ZW07CiAgICBmb3IgKHZhciBpID0gMCwgbGVuZ3RoID0gYXJndW1lbnRzLmxlbmd0aDsgaSA8IGxlbmd0aDsgaSsrKSB7CiAgICAgIGl0ZW0gPSBhcmd1bWVudHNbaV07CiAgICAgIGlmIChPYmplY3QuaXNBcnJheShpdGVtKSAmJiAhKCdjYWxsZWUnIGluIGl0ZW0pKSB7CiAgICAgICAgZm9yICh2YXIgaiA9IDAsIGFycmF5TGVuZ3RoID0gaXRlbS5sZW5ndGg7IGogPCBhcnJheUxlbmd0aDsgaisrKQogICAgICAgICAgYXJyYXkucHVzaChpdGVtW2pdKTsKICAgICAgfSBlbHNlIHsKICAgICAgICBhcnJheS5wdXNoKGl0ZW0pOwogICAgICB9CiAgICB9CiAgICByZXR1cm4gYXJyYXk7CiAgfQoKICBPYmplY3QuZXh0ZW5kKGFycmF5UHJvdG8sIEVudW1lcmFibGUpOwoKICBpZiAoIWFycmF5UHJvdG8uX3JldmVyc2UpCiAgICBhcnJheVByb3RvLl9yZXZlcnNlID0gYXJyYXlQcm90by5yZXZlcnNlOwoKICBPYmplY3QuZXh0ZW5kKGFycmF5UHJvdG8sIHsKICAgIF9lYWNoOiAgICAgX2VhY2gsCiAgICBjbGVhcjogICAgIGNsZWFyLAogICAgZmlyc3Q6ICAgICBmaXJzdCwKICAgIGxhc3Q6ICAgICAgbGFzdCwKICAgIGNvbXBhY3Q6ICAgY29tcGFjdCwKICAgIGZsYXR0ZW46ICAgZmxhdHRlbiwKICAgIHdpdGhvdXQ6ICAgd2l0aG91dCwKICAgIHJldmVyc2U6ICAgcmV2ZXJzZSwKICAgIHVuaXE6ICAgICAgdW5pcSwKICAgIGludGVyc2VjdDogaW50ZXJzZWN0LAogICAgY2xvbmU6ICAgICBjbG9uZSwKICAgIHRvQXJyYXk6ICAgY2xvbmUsCiAgICBzaXplOiAgICAgIHNpemUsCiAgICBpbnNwZWN0OiAgIGluc3BlY3QKICB9KTsKCiAgdmFyIENPTkNBVF9BUkdVTUVOVFNfQlVHR1kgPSAoZnVuY3Rpb24oKSB7CiAgICByZXR1cm4gW10uY29uY2F0KGFyZ3VtZW50cylbMF1bMF0gIT09IDE7CiAgfSkoMSwyKQoKICBpZiAoQ09OQ0FUX0FSR1VNRU5UU19CVUdHWSkgYXJyYXlQcm90by5jb25jYXQgPSBjb25jYXQ7CgogIGlmICghYXJyYXlQcm90by5pbmRleE9mKSBhcnJheVByb3RvLmluZGV4T2YgPSBpbmRleE9mOwogIGlmICghYXJyYXlQcm90by5sYXN0SW5kZXhPZikgYXJyYXlQcm90by5sYXN0SW5kZXhPZiA9IGxhc3RJbmRleE9mOwp9KSgpOwpmdW5jdGlvbiAkSChvYmplY3QpIHsKICByZXR1cm4gbmV3IEhhc2gob2JqZWN0KTsKfTsKCnZhciBIYXNoID0gQ2xhc3MuY3JlYXRlKEVudW1lcmFibGUsIChmdW5jdGlvbigpIHsKICBmdW5jdGlvbiBpbml0aWFsaXplKG9iamVjdCkgewogICAgdGhpcy5fb2JqZWN0ID0gT2JqZWN0LmlzSGFzaChvYmplY3QpID8gb2JqZWN0LnRvT2JqZWN0KCkgOiBPYmplY3QuY2xvbmUob2JqZWN0KTsKICB9CgoKICBmdW5jdGlvbiBfZWFjaChpdGVyYXRvcikgewogICAgZm9yICh2YXIga2V5IGluIHRoaXMuX29iamVjdCkgewogICAgICB2YXIgdmFsdWUgPSB0aGlzLl9vYmplY3Rba2V5XSwgcGFpciA9IFtrZXksIHZhbHVlXTsKICAgICAgcGFpci5rZXkgPSBrZXk7CiAgICAgIHBhaXIudmFsdWUgPSB2YWx1ZTsKICAgICAgaXRlcmF0b3IocGFpcik7CiAgICB9CiAgfQoKICBmdW5jdGlvbiBzZXQoa2V5LCB2YWx1ZSkgewogICAgcmV0dXJuIHRoaXMuX29iamVjdFtrZXldID0gdmFsdWU7CiAgfQoKICBmdW5jdGlvbiBnZXQoa2V5KSB7CiAgICBpZiAodGhpcy5fb2JqZWN0W2tleV0gIT09IE9iamVjdC5wcm90b3R5cGVba2V5XSkKICAgICAgcmV0dXJuIHRoaXMuX29iamVjdFtrZXldOwogIH0KCiAgZnVuY3Rpb24gdW5zZXQoa2V5KSB7CiAgICB2YXIgdmFsdWUgPSB0aGlzLl9vYmplY3Rba2V5XTsKICAgIGRlbGV0ZSB0aGlzLl9vYmplY3Rba2V5XTsKICAgIHJldHVybiB2YWx1ZTsKICB9CgogIGZ1bmN0aW9uIHRvT2JqZWN0KCkgewogICAgcmV0dXJuIE9iamVjdC5jbG9uZSh0aGlzLl9vYmplY3QpOwogIH0KCgoKICBmdW5jdGlvbiBrZXlzKCkgewogICAgcmV0dXJuIHRoaXMucGx1Y2soJ2tleScpOwogIH0KCiAgZnVuY3Rpb24gdmFsdWVzKCkgewogICAgcmV0dXJuIHRoaXMucGx1Y2soJ3ZhbHVlJyk7CiAgfQoKICBmdW5jdGlvbiBpbmRleCh2YWx1ZSkgewogICAgdmFyIG1hdGNoID0gdGhpcy5kZXRlY3QoZnVuY3Rpb24ocGFpcikgewogICAgICByZXR1cm4gcGFpci52YWx1ZSA9PT0gdmFsdWU7CiAgICB9KTsKICAgIHJldHVybiBtYXRjaCAmJiBtYXRjaC5rZXk7CiAgfQoKICBmdW5jdGlvbiBtZXJnZShvYmplY3QpIHsKICAgIHJldHVybiB0aGlzLmNsb25lKCkudXBkYXRlKG9iamVjdCk7CiAgfQoKICBmdW5jdGlvbiB1cGRhdGUob2JqZWN0KSB7CiAgICByZXR1cm4gbmV3IEhhc2gob2JqZWN0KS5pbmplY3QodGhpcywgZnVuY3Rpb24ocmVzdWx0LCBwYWlyKSB7CiAgICAgIHJlc3VsdC5zZXQocGFpci5rZXksIHBhaXIudmFsdWUpOwogICAgICByZXR1cm4gcmVzdWx0OwogICAgfSk7CiAgfQoKICBmdW5jdGlvbiB0b1F1ZXJ5UGFpcihrZXksIHZhbHVlKSB7CiAgICBpZiAoT2JqZWN0LmlzVW5kZWZpbmVkKHZhbHVlKSkgcmV0dXJuIGtleTsKICAgIHJldHVybiBrZXkgKyAnPScgKyBlbmNvZGVVUklDb21wb25lbnQoU3RyaW5nLmludGVycHJldCh2YWx1ZSkpOwogIH0KCiAgZnVuY3Rpb24gdG9RdWVyeVN0cmluZygpIHsKICAgIHJldHVybiB0aGlzLmluamVjdChbXSwgZnVuY3Rpb24ocmVzdWx0cywgcGFpcikgewogICAgICB2YXIga2V5ID0gZW5jb2RlVVJJQ29tcG9uZW50KHBhaXIua2V5KSwgdmFsdWVzID0gcGFpci52YWx1ZTsKCiAgICAgIGlmICh2YWx1ZXMgJiYgdHlwZW9mIHZhbHVlcyA9PSAnb2JqZWN0JykgewogICAgICAgIGlmIChPYmplY3QuaXNBcnJheSh2YWx1ZXMpKSB7CiAgICAgICAgICB2YXIgcXVlcnlWYWx1ZXMgPSBbXTsKICAgICAgICAgIGZvciAodmFyIGkgPSAwLCBsZW4gPSB2YWx1ZXMubGVuZ3RoLCB2YWx1ZTsgaSA8IGxlbjsgaSsrKSB7CiAgICAgICAgICAgIHZhbHVlID0gdmFsdWVzW2ldOwogICAgICAgICAgICBxdWVyeVZhbHVlcy5wdXNoKHRvUXVlcnlQYWlyKGtleSwgdmFsdWUpKTsKICAgICAgICAgIH0KICAgICAgICAgIHJldHVybiByZXN1bHRzLmNvbmNhdChxdWVyeVZhbHVlcyk7CiAgICAgICAgfQogICAgICB9IGVsc2UgcmVzdWx0cy5wdXNoKHRvUXVlcnlQYWlyKGtleSwgdmFsdWVzKSk7CiAgICAgIHJldHVybiByZXN1bHRzOwogICAgfSkuam9pbignJicpOwogIH0KCiAgZnVuY3Rpb24gaW5zcGVjdCgpIHsKICAgIHJldHVybiAnIzxIYXNoOnsnICsgdGhpcy5tYXAoZnVuY3Rpb24ocGFpcikgewogICAgICByZXR1cm4gcGFpci5tYXAoT2JqZWN0Lmluc3BlY3QpLmpvaW4oJzogJyk7CiAgICB9KS5qb2luKCcsICcpICsgJ30+JzsKICB9CgogIGZ1bmN0aW9uIGNsb25lKCkgewogICAgcmV0dXJuIG5ldyBIYXNoKHRoaXMpOwogIH0KCiAgcmV0dXJuIHsKICAgIGluaXRpYWxpemU6ICAgICAgICAgICAgIGluaXRpYWxpemUsCiAgICBfZWFjaDogICAgICAgICAgICAgICAgICBfZWFjaCwKICAgIHNldDogICAgICAgICAgICAgICAgICAgIHNldCwKICAgIGdldDogICAgICAgICAgICAgICAgICAgIGdldCwKICAgIHVuc2V0OiAgICAgICAgICAgICAgICAgIHVuc2V0LAogICAgdG9PYmplY3Q6ICAgICAgICAgICAgICAgdG9PYmplY3QsCiAgICB0b1RlbXBsYXRlUmVwbGFjZW1lbnRzOiB0b09iamVjdCwKICAgIGtleXM6ICAgICAgICAgICAgICAgICAgIGtleXMsCiAgICB2YWx1ZXM6ICAgICAgICAgICAgICAgICB2YWx1ZXMsCiAgICBpbmRleDogICAgICAgICAgICAgICAgICBpbmRleCwKICAgIG1lcmdlOiAgICAgICAgICAgICAgICAgIG1lcmdlLAogICAgdXBkYXRlOiAgICAgICAgICAgICAgICAgdXBkYXRlLAogICAgdG9RdWVyeVN0cmluZzogICAgICAgICAgdG9RdWVyeVN0cmluZywKICAgIGluc3BlY3Q6ICAgICAgICAgICAgICAgIGluc3BlY3QsCiAgICB0b0pTT046ICAgICAgICAgICAgICAgICB0b09iamVjdCwKICAgIGNsb25lOiAgICAgICAgICAgICAgICAgIGNsb25lCiAgfTsKfSkoKSk7CgpIYXNoLmZyb20gPSAkSDsKT2JqZWN0LmV4dGVuZChOdW1iZXIucHJvdG90eXBlLCAoZnVuY3Rpb24oKSB7CiAgZnVuY3Rpb24gdG9Db2xvclBhcnQoKSB7CiAgICByZXR1cm4gdGhpcy50b1BhZGRlZFN0cmluZygyLCAxNik7CiAgfQoKICBmdW5jdGlvbiBzdWNjKCkgewogICAgcmV0dXJuIHRoaXMgKyAxOwogIH0KCiAgZnVuY3Rpb24gdGltZXMoaXRlcmF0b3IsIGNvbnRleHQpIHsKICAgICRSKDAsIHRoaXMsIHRydWUpLmVhY2goaXRlcmF0b3IsIGNvbnRleHQpOwogICAgcmV0dXJuIHRoaXM7CiAgfQoKICBmdW5jdGlvbiB0b1BhZGRlZFN0cmluZyhsZW5ndGgsIHJhZGl4KSB7CiAgICB2YXIgc3RyaW5nID0gdGhpcy50b1N0cmluZyhyYWRpeCB8fCAxMCk7CiAgICByZXR1cm4gJzAnLnRpbWVzKGxlbmd0aCAtIHN0cmluZy5sZW5ndGgpICsgc3RyaW5nOwogIH0KCiAgZnVuY3Rpb24gYWJzKCkgewogICAgcmV0dXJuIE1hdGguYWJzKHRoaXMpOwogIH0KCiAgZnVuY3Rpb24gcm91bmQoKSB7CiAgICByZXR1cm4gTWF0aC5yb3VuZCh0aGlzKTsKICB9CgogIGZ1bmN0aW9uIGNlaWwoKSB7CiAgICByZXR1cm4gTWF0aC5jZWlsKHRoaXMpOwogIH0KCiAgZnVuY3Rpb24gZmxvb3IoKSB7CiAgICByZXR1cm4gTWF0aC5mbG9vcih0aGlzKTsKICB9CgogIHJldHVybiB7CiAgICB0b0NvbG9yUGFydDogICAgdG9Db2xvclBhcnQsCiAgICBzdWNjOiAgICAgICAgICAgc3VjYywKICAgIHRpbWVzOiAgICAgICAgICB0aW1lcywKICAgIHRvUGFkZGVkU3RyaW5nOiB0b1BhZGRlZFN0cmluZywKICAgIGFiczogICAgICAgICAgICBhYnMsCiAgICByb3VuZDogICAgICAgICAgcm91bmQsCiAgICBjZWlsOiAgICAgICAgICAgY2VpbCwKICAgIGZsb29yOiAgICAgICAgICBmbG9vcgogIH07Cn0pKCkpOwoKZnVuY3Rpb24gJFIoc3RhcnQsIGVuZCwgZXhjbHVzaXZlKSB7CiAgcmV0dXJuIG5ldyBPYmplY3RSYW5nZShzdGFydCwgZW5kLCBleGNsdXNpdmUpOwp9Cgp2YXIgT2JqZWN0UmFuZ2UgPSBDbGFzcy5jcmVhdGUoRW51bWVyYWJsZSwgKGZ1bmN0aW9uKCkgewogIGZ1bmN0aW9uIGluaXRpYWxpemUoc3RhcnQsIGVuZCwgZXhjbHVzaXZlKSB7CiAgICB0aGlzLnN0YXJ0ID0gc3RhcnQ7CiAgICB0aGlzLmVuZCA9IGVuZDsKICAgIHRoaXMuZXhjbHVzaXZlID0gZXhjbHVzaXZlOwogIH0KCiAgZnVuY3Rpb24gX2VhY2goaXRlcmF0b3IpIHsKICAgIHZhciB2YWx1ZSA9IHRoaXMuc3RhcnQ7CiAgICB3aGlsZSAodGhpcy5pbmNsdWRlKHZhbHVlKSkgewogICAgICBpdGVyYXRvcih2YWx1ZSk7CiAgICAgIHZhbHVlID0gdmFsdWUuc3VjYygpOwogICAgfQogIH0KCiAgZnVuY3Rpb24gaW5jbHVkZSh2YWx1ZSkgewogICAgaWYgKHZhbHVlIDwgdGhpcy5zdGFydCkKICAgICAgcmV0dXJuIGZhbHNlOwogICAgaWYgKHRoaXMuZXhjbHVzaXZlKQogICAgICByZXR1cm4gdmFsdWUgPCB0aGlzLmVuZDsKICAgIHJldHVybiB2YWx1ZSA8PSB0aGlzLmVuZDsKICB9CgogIHJldHVybiB7CiAgICBpbml0aWFsaXplOiBpbml0aWFsaXplLAogICAgX2VhY2g6ICAgICAgX2VhY2gsCiAgICBpbmNsdWRlOiAgICBpbmNsdWRlCiAgfTsKfSkoKSk7CgoKCnZhciBBYnN0cmFjdCA9IHsgfTsKCgp2YXIgVHJ5ID0gewogIHRoZXNlOiBmdW5jdGlvbigpIHsKICAgIHZhciByZXR1cm5WYWx1ZTsKCiAgICBmb3IgKHZhciBpID0gMCwgbGVuZ3RoID0gYXJndW1lbnRzLmxlbmd0aDsgaSA8IGxlbmd0aDsgaSsrKSB7CiAgICAgIHZhciBsYW1iZGEgPSBhcmd1bWVudHNbaV07CiAgICAgIHRyeSB7CiAgICAgICAgcmV0dXJuVmFsdWUgPSBsYW1iZGEoKTsKICAgICAgICBicmVhazsKICAgICAgfSBjYXRjaCAoZSkgeyB9CiAgICB9CgogICAgcmV0dXJuIHJldHVyblZhbHVlOwogIH0KfTsKCnZhciBBamF4ID0gewogIGdldFRyYW5zcG9ydDogZnVuY3Rpb24oKSB7CiAgICByZXR1cm4gVHJ5LnRoZXNlKAogICAgICBmdW5jdGlvbigpIHtyZXR1cm4gbmV3IFhNTEh0dHBSZXF1ZXN0KCl9LAogICAgICBmdW5jdGlvbigpIHtyZXR1cm4gbmV3IEFjdGl2ZVhPYmplY3QoJ01zeG1sMi5YTUxIVFRQJyl9LAogICAgICBmdW5jdGlvbigpIHtyZXR1cm4gbmV3IEFjdGl2ZVhPYmplY3QoJ01pY3Jvc29mdC5YTUxIVFRQJyl9CiAgICApIHx8IGZhbHNlOwogIH0sCgogIGFjdGl2ZVJlcXVlc3RDb3VudDogMAp9OwoKQWpheC5SZXNwb25kZXJzID0gewogIHJlc3BvbmRlcnM6IFtdLAoKICBfZWFjaDogZnVuY3Rpb24oaXRlcmF0b3IpIHsKICAgIHRoaXMucmVzcG9uZGVycy5fZWFjaChpdGVyYXRvcik7CiAgfSwKCiAgcmVnaXN0ZXI6IGZ1bmN0aW9uKHJlc3BvbmRlcikgewogICAgaWYgKCF0aGlzLmluY2x1ZGUocmVzcG9uZGVyKSkKICAgICAgdGhpcy5yZXNwb25kZXJzLnB1c2gocmVzcG9uZGVyKTsKICB9LAoKICB1bnJlZ2lzdGVyOiBmdW5jdGlvbihyZXNwb25kZXIpIHsKICAgIHRoaXMucmVzcG9uZGVycyA9IHRoaXMucmVzcG9uZGVycy53aXRob3V0KHJlc3BvbmRlcik7CiAgfSwKCiAgZGlzcGF0Y2g6IGZ1bmN0aW9uKGNhbGxiYWNrLCByZXF1ZXN0LCB0cmFuc3BvcnQsIGpzb24pIHsKICAgIHRoaXMuZWFjaChmdW5jdGlvbihyZXNwb25kZXIpIHsKICAgICAgaWYgKE9iamVjdC5pc0Z1bmN0aW9uKHJlc3BvbmRlcltjYWxsYmFja10pKSB7CiAgICAgICAgdHJ5IHsKICAgICAgICAgIHJlc3BvbmRlcltjYWxsYmFja10uYXBwbHkocmVzcG9uZGVyLCBbcmVxdWVzdCwgdHJhbnNwb3J0LCBqc29uXSk7CiAgICAgICAgfSBjYXRjaCAoZSkgeyB9CiAgICAgIH0KICAgIH0pOwogIH0KfTsKCk9iamVjdC5leHRlbmQoQWpheC5SZXNwb25kZXJzLCBFbnVtZXJhYmxlKTsKCkFqYXguUmVzcG9uZGVycy5yZWdpc3Rlcih7CiAgb25DcmVhdGU6ICAgZnVuY3Rpb24oKSB7IEFqYXguYWN0aXZlUmVxdWVzdENvdW50KysgfSwKICBvbkNvbXBsZXRlOiBmdW5jdGlvbigpIHsgQWpheC5hY3RpdmVSZXF1ZXN0Q291bnQtLSB9Cn0pOwpBamF4LkJhc2UgPSBDbGFzcy5jcmVhdGUoewogIGluaXRpYWxpemU6IGZ1bmN0aW9uKG9wdGlvbnMpIHsKICAgIHRoaXMub3B0aW9ucyA9IHsKICAgICAgbWV0aG9kOiAgICAgICAncG9zdCcsCiAgICAgIGFzeW5jaHJvbm91czogdHJ1ZSwKICAgICAgY29udGVudFR5cGU6ICAnYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkJywKICAgICAgZW5jb2Rpbmc6ICAgICAnVVRGLTgnLAogICAgICBwYXJhbWV0ZXJzOiAgICcnLAogICAgICBldmFsSlNPTjogICAgIHRydWUsCiAgICAgIGV2YWxKUzogICAgICAgdHJ1ZQogICAgfTsKICAgIE9iamVjdC5leHRlbmQodGhpcy5vcHRpb25zLCBvcHRpb25zIHx8IHsgfSk7CgogICAgdGhpcy5vcHRpb25zLm1ldGhvZCA9IHRoaXMub3B0aW9ucy5tZXRob2QudG9Mb3dlckNhc2UoKTsKCiAgICBpZiAoT2JqZWN0LmlzSGFzaCh0aGlzLm9wdGlvbnMucGFyYW1ldGVycykpCiAgICAgIHRoaXMub3B0aW9ucy5wYXJhbWV0ZXJzID0gdGhpcy5vcHRpb25zLnBhcmFtZXRlcnMudG9PYmplY3QoKTsKICB9Cn0pOwpBamF4LlJlcXVlc3QgPSBDbGFzcy5jcmVhdGUoQWpheC5CYXNlLCB7CiAgX2NvbXBsZXRlOiBmYWxzZSwKCiAgaW5pdGlhbGl6ZTogZnVuY3Rpb24oJHN1cGVyLCB1cmwsIG9wdGlvbnMpIHsKICAgICRzdXBlcihvcHRpb25zKTsKICAgIHRoaXMudHJhbnNwb3J0ID0gQWpheC5nZXRUcmFuc3BvcnQoKTsKICAgIHRoaXMucmVxdWVzdCh1cmwpOwogIH0sCgogIHJlcXVlc3Q6IGZ1bmN0aW9uKHVybCkgewogICAgdGhpcy51cmwgPSB1cmw7CiAgICB0aGlzLm1ldGhvZCA9IHRoaXMub3B0aW9ucy5tZXRob2Q7CiAgICB2YXIgcGFyYW1zID0gT2JqZWN0LmlzU3RyaW5nKHRoaXMub3B0aW9ucy5wYXJhbWV0ZXJzKSA/CiAgICAgICAgICB0aGlzLm9wdGlvbnMucGFyYW1ldGVycyA6CiAgICAgICAgICBPYmplY3QudG9RdWVyeVN0cmluZyh0aGlzLm9wdGlvbnMucGFyYW1ldGVycyk7CgogICAgaWYgKCFbJ2dldCcsICdwb3N0J10uaW5jbHVkZSh0aGlzLm1ldGhvZCkpIHsKICAgICAgcGFyYW1zICs9IChwYXJhbXMgPyAnJicgOiAnJykgKyAiX21ldGhvZD0iICsgdGhpcy5tZXRob2Q7CiAgICAgIHRoaXMubWV0aG9kID0gJ3Bvc3QnOwogICAgfQoKICAgIGlmIChwYXJhbXMgJiYgdGhpcy5tZXRob2QgPT09ICdnZXQnKSB7CiAgICAgIHRoaXMudXJsICs9ICh0aGlzLnVybC5pbmNsdWRlKCc/JykgPyAnJicgOiAnPycpICsgcGFyYW1zOwogICAgfQoKICAgIHRoaXMucGFyYW1ldGVycyA9IHBhcmFtcy50b1F1ZXJ5UGFyYW1zKCk7CgogICAgdHJ5IHsKICAgICAgdmFyIHJlc3BvbnNlID0gbmV3IEFqYXguUmVzcG9uc2UodGhpcyk7CiAgICAgIGlmICh0aGlzLm9wdGlvbnMub25DcmVhdGUpIHRoaXMub3B0aW9ucy5vbkNyZWF0ZShyZXNwb25zZSk7CiAgICAgIEFqYXguUmVzcG9uZGVycy5kaXNwYXRjaCgnb25DcmVhdGUnLCB0aGlzLCByZXNwb25zZSk7CgogICAgICB0aGlzLnRyYW5zcG9ydC5vcGVuKHRoaXMubWV0aG9kLnRvVXBwZXJDYXNlKCksIHRoaXMudXJsLAogICAgICAgIHRoaXMub3B0aW9ucy5hc3luY2hyb25vdXMpOwoKICAgICAgaWYgKHRoaXMub3B0aW9ucy5hc3luY2hyb25vdXMpIHRoaXMucmVzcG9uZFRvUmVhZHlTdGF0ZS5iaW5kKHRoaXMpLmRlZmVyKDEpOwoKICAgICAgdGhpcy50cmFuc3BvcnQub25yZWFkeXN0YXRlY2hhbmdlID0gdGhpcy5vblN0YXRlQ2hhbmdlLmJpbmQodGhpcyk7CiAgICAgIHRoaXMuc2V0UmVxdWVzdEhlYWRlcnMoKTsKCiAgICAgIHRoaXMuYm9keSA9IHRoaXMubWV0aG9kID09ICdwb3N0JyA/ICh0aGlzLm9wdGlvbnMucG9zdEJvZHkgfHwgcGFyYW1zKSA6IG51bGw7CiAgICAgIHRoaXMudHJhbnNwb3J0LnNlbmQodGhpcy5ib2R5KTsKCiAgICAgIC8qIEZvcmNlIEZpcmVmb3ggdG8gaGFuZGxlIHJlYWR5IHN0YXRlIDQgZm9yIHN5bmNocm9ub3VzIHJlcXVlc3RzICovCiAgICAgIGlmICghdGhpcy5vcHRpb25zLmFzeW5jaHJvbm91cyAmJiB0aGlzLnRyYW5zcG9ydC5vdmVycmlkZU1pbWVUeXBlKQogICAgICAgIHRoaXMub25TdGF0ZUNoYW5nZSgpOwoKICAgIH0KICAgIGNhdGNoIChlKSB7CiAgICAgIHRoaXMuZGlzcGF0Y2hFeGNlcHRpb24oZSk7CiAgICB9CiAgfSwKCiAgb25TdGF0ZUNoYW5nZTogZnVuY3Rpb24oKSB7CiAgICB2YXIgcmVhZHlTdGF0ZSA9IHRoaXMudHJhbnNwb3J0LnJlYWR5U3RhdGU7CiAgICBpZiAocmVhZHlTdGF0ZSA+IDEgJiYgISgocmVhZHlTdGF0ZSA9PSA0KSAmJiB0aGlzLl9jb21wbGV0ZSkpCiAgICAgIHRoaXMucmVzcG9uZFRvUmVhZHlTdGF0ZSh0aGlzLnRyYW5zcG9ydC5yZWFkeVN0YXRlKTsKICB9LAoKICBzZXRSZXF1ZXN0SGVhZGVyczogZnVuY3Rpb24oKSB7CiAgICB2YXIgaGVhZGVycyA9IHsKICAgICAgJ1gtUmVxdWVzdGVkLVdpdGgnOiAnWE1MSHR0cFJlcXVlc3QnLAogICAgICAnWC1Qcm90b3R5cGUtVmVyc2lvbic6IFByb3RvdHlwZS5WZXJzaW9uLAogICAgICAnQWNjZXB0JzogJ3RleHQvamF2YXNjcmlwdCwgdGV4dC9odG1sLCBhcHBsaWNhdGlvbi94bWwsIHRleHQveG1sLCAqLyonCiAgICB9OwoKICAgIGlmICh0aGlzLm1ldGhvZCA9PSAncG9zdCcpIHsKICAgICAgaGVhZGVyc1snQ29udGVudC10eXBlJ10gPSB0aGlzLm9wdGlvbnMuY29udGVudFR5cGUgKwogICAgICAgICh0aGlzLm9wdGlvbnMuZW5jb2RpbmcgPyAnOyBjaGFyc2V0PScgKyB0aGlzLm9wdGlvbnMuZW5jb2RpbmcgOiAnJyk7CgogICAgICAvKiBGb3JjZSAiQ29ubmVjdGlvbjogY2xvc2UiIGZvciBvbGRlciBNb3ppbGxhIGJyb3dzZXJzIHRvIHdvcmsKICAgICAgICogYXJvdW5kIGEgYnVnIHdoZXJlIFhNTEh0dHBSZXF1ZXN0IHNlbmRzIGFuIGluY29ycmVjdAogICAgICAgKiBDb250ZW50LWxlbmd0aCBoZWFkZXIuIFNlZSBNb3ppbGxhIEJ1Z3ppbGxhICMyNDY2NTEuCiAgICAgICAqLwogICAgICBpZiAodGhpcy50cmFuc3BvcnQub3ZlcnJpZGVNaW1lVHlwZSAmJgogICAgICAgICAgKG5hdmlnYXRvci51c2VyQWdlbnQubWF0Y2goL0dlY2tvXC8oXGR7NH0pLykgfHwgWzAsMjAwNV0pWzFdIDwgMjAwNSkKICAgICAgICAgICAgaGVhZGVyc1snQ29ubmVjdGlvbiddID0gJ2Nsb3NlJzsKICAgIH0KCiAgICBpZiAodHlwZW9mIHRoaXMub3B0aW9ucy5yZXF1ZXN0SGVhZGVycyA9PSAnb2JqZWN0JykgewogICAgICB2YXIgZXh0cmFzID0gdGhpcy5vcHRpb25zLnJlcXVlc3RIZWFkZXJzOwoKICAgICAgaWYgKE9iamVjdC5pc0Z1bmN0aW9uKGV4dHJhcy5wdXNoKSkKICAgICAgICBmb3IgKHZhciBpID0gMCwgbGVuZ3RoID0gZXh0cmFzLmxlbmd0aDsgaSA8IGxlbmd0aDsgaSArPSAyKQogICAgICAgICAgaGVhZGVyc1tleHRyYXNbaV1dID0gZXh0cmFzW2krMV07CiAgICAgIGVsc2UKICAgICAgICAkSChleHRyYXMpLmVhY2goZnVuY3Rpb24ocGFpcikgeyBoZWFkZXJzW3BhaXIua2V5XSA9IHBhaXIudmFsdWUgfSk7CiAgICB9CgogICAgZm9yICh2YXIgbmFtZSBpbiBoZWFkZXJzKQogICAgICB0aGlzLnRyYW5zcG9ydC5zZXRSZXF1ZXN0SGVhZGVyKG5hbWUsIGhlYWRlcnNbbmFtZV0pOwogIH0sCgogIHN1Y2Nlc3M6IGZ1bmN0aW9uKCkgewogICAgdmFyIHN0YXR1cyA9IHRoaXMuZ2V0U3RhdHVzKCk7CiAgICByZXR1cm4gIXN0YXR1cyB8fCAoc3RhdHVzID49IDIwMCAmJiBzdGF0dXMgPCAzMDApIHx8IHN0YXR1cyA9PSAzMDQ7CiAgfSwKCiAgZ2V0U3RhdHVzOiBmdW5jdGlvbigpIHsKICAgIHRyeSB7CiAgICAgIGlmICh0aGlzLnRyYW5zcG9ydC5zdGF0dXMgPT09IDEyMjMpIHJldHVybiAyMDQ7CiAgICAgIHJldHVybiB0aGlzLnRyYW5zcG9ydC5zdGF0dXMgfHwgMDsKICAgIH0gY2F0Y2ggKGUpIHsgcmV0dXJuIDAgfQogIH0sCgogIHJlc3BvbmRUb1JlYWR5U3RhdGU6IGZ1bmN0aW9uKHJlYWR5U3RhdGUpIHsKICAgIHZhciBzdGF0ZSA9IEFqYXguUmVxdWVzdC5FdmVudHNbcmVhZHlTdGF0ZV0sIHJlc3BvbnNlID0gbmV3IEFqYXguUmVzcG9uc2UodGhpcyk7CgogICAgaWYgKHN0YXRlID09ICdDb21wbGV0ZScpIHsKICAgICAgdHJ5IHsKICAgICAgICB0aGlzLl9jb21wbGV0ZSA9IHRydWU7CiAgICAgICAgKHRoaXMub3B0aW9uc1snb24nICsgcmVzcG9uc2Uuc3RhdHVzXQogICAgICAgICB8fCB0aGlzLm9wdGlvbnNbJ29uJyArICh0aGlzLnN1Y2Nlc3MoKSA/ICdTdWNjZXNzJyA6ICdGYWlsdXJlJyldCiAgICAgICAgIHx8IFByb3RvdHlwZS5lbXB0eUZ1bmN0aW9uKShyZXNwb25zZSwgcmVzcG9uc2UuaGVhZGVySlNPTik7CiAgICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgICB0aGlzLmRpc3BhdGNoRXhjZXB0aW9uKGUpOwogICAgICB9CgogICAgICB2YXIgY29udGVudFR5cGUgPSByZXNwb25zZS5nZXRIZWFkZXIoJ0NvbnRlbnQtdHlwZScpOwogICAgICBpZiAodGhpcy5vcHRpb25zLmV2YWxKUyA9PSAnZm9yY2UnCiAgICAgICAgICB8fCAodGhpcy5vcHRpb25zLmV2YWxKUyAmJiB0aGlzLmlzU2FtZU9yaWdpbigpICYmIGNvbnRlbnRUeXBlCiAgICAgICAgICAmJiBjb250ZW50VHlwZS5tYXRjaCgvXlxzKih0ZXh0fGFwcGxpY2F0aW9uKVwvKHgtKT8oamF2YXxlY21hKXNjcmlwdCg7LiopP1xzKiQvaSkpKQogICAgICAgIHRoaXMuZXZhbFJlc3BvbnNlKCk7CiAgICB9CgogICAgdHJ5IHsKICAgICAgKHRoaXMub3B0aW9uc1snb24nICsgc3RhdGVdIHx8IFByb3RvdHlwZS5lbXB0eUZ1bmN0aW9uKShyZXNwb25zZSwgcmVzcG9uc2UuaGVhZGVySlNPTik7CiAgICAgIEFqYXguUmVzcG9uZGVycy5kaXNwYXRjaCgnb24nICsgc3RhdGUsIHRoaXMsIHJlc3BvbnNlLCByZXNwb25zZS5oZWFkZXJKU09OKTsKICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgdGhpcy5kaXNwYXRjaEV4Y2VwdGlvbihlKTsKICAgIH0KCiAgICBpZiAoc3RhdGUgPT0gJ0NvbXBsZXRlJykgewogICAgICB0aGlzLnRyYW5zcG9ydC5vbnJlYWR5c3RhdGVjaGFuZ2UgPSBQcm90b3R5cGUuZW1wdHlGdW5jdGlvbjsKICAgIH0KICB9LAoKICBpc1NhbWVPcmlnaW46IGZ1bmN0aW9uKCkgewogICAgdmFyIG0gPSB0aGlzLnVybC5tYXRjaCgvXlxzKmh0dHBzPzpcL1wvW15cL10qLyk7CiAgICByZXR1cm4gIW0gfHwgKG1bMF0gPT0gJyN7cHJvdG9jb2x9Ly8je2RvbWFpbn0je3BvcnR9Jy5pbnRlcnBvbGF0ZSh7CiAgICAgIHByb3RvY29sOiBsb2NhdGlvbi5wcm90b2NvbCwKICAgICAgZG9tYWluOiBkb2N1bWVudC5kb21haW4sCiAgICAgIHBvcnQ6IGxvY2F0aW9uLnBvcnQgPyAnOicgKyBsb2NhdGlvbi5wb3J0IDogJycKICAgIH0pKTsKICB9LAoKICBnZXRIZWFkZXI6IGZ1bmN0aW9uKG5hbWUpIHsKICAgIHRyeSB7CiAgICAgIHJldHVybiB0aGlzLnRyYW5zcG9ydC5nZXRSZXNwb25zZUhlYWRlcihuYW1lKSB8fCBudWxsOwogICAgfSBjYXRjaCAoZSkgeyByZXR1cm4gbnVsbDsgfQogIH0sCgogIGV2YWxSZXNwb25zZTogZnVuY3Rpb24oKSB7CiAgICB0cnkgewogICAgICByZXR1cm4gZXZhbCgodGhpcy50cmFuc3BvcnQucmVzcG9uc2VUZXh0IHx8ICcnKS51bmZpbHRlckpTT04oKSk7CiAgICB9IGNhdGNoIChlKSB7CiAgICAgIHRoaXMuZGlzcGF0Y2hFeGNlcHRpb24oZSk7CiAgICB9CiAgfSwKCiAgZGlzcGF0Y2hFeGNlcHRpb246IGZ1bmN0aW9uKGV4Y2VwdGlvbikgewogICAgKHRoaXMub3B0aW9ucy5vbkV4Y2VwdGlvbiB8fCBQcm90b3R5cGUuZW1wdHlGdW5jdGlvbikodGhpcywgZXhjZXB0aW9uKTsKICAgIEFqYXguUmVzcG9uZGVycy5kaXNwYXRjaCgnb25FeGNlcHRpb24nLCB0aGlzLCBleGNlcHRpb24pOwogIH0KfSk7CgpBamF4LlJlcXVlc3QuRXZlbnRzID0KICBbJ1VuaW5pdGlhbGl6ZWQnLCAnTG9hZGluZycsICdMb2FkZWQnLCAnSW50ZXJhY3RpdmUnLCAnQ29tcGxldGUnXTsKCgoKCgoKCgpBamF4LlJlc3BvbnNlID0gQ2xhc3MuY3JlYXRlKHsKICBpbml0aWFsaXplOiBmdW5jdGlvbihyZXF1ZXN0KXsKICAgIHRoaXMucmVxdWVzdCA9IHJlcXVlc3Q7CiAgICB2YXIgdHJhbnNwb3J0ICA9IHRoaXMudHJhbnNwb3J0ICA9IHJlcXVlc3QudHJhbnNwb3J0LAogICAgICAgIHJlYWR5U3RhdGUgPSB0aGlzLnJlYWR5U3RhdGUgPSB0cmFuc3BvcnQucmVhZHlTdGF0ZTsKCiAgICBpZiAoKHJlYWR5U3RhdGUgPiAyICYmICFQcm90b3R5cGUuQnJvd3Nlci5JRSkgfHwgcmVhZHlTdGF0ZSA9PSA0KSB7CiAgICAgIHRoaXMuc3RhdHVzICAgICAgID0gdGhpcy5nZXRTdGF0dXMoKTsKICAgICAgdGhpcy5zdGF0dXNUZXh0ICAgPSB0aGlzLmdldFN0YXR1c1RleHQoKTsKICAgICAgdGhpcy5yZXNwb25zZVRleHQgPSBTdHJpbmcuaW50ZXJwcmV0KHRyYW5zcG9ydC5yZXNwb25zZVRleHQpOwogICAgICB0aGlzLmhlYWRlckpTT04gICA9IHRoaXMuX2dldEhlYWRlckpTT04oKTsKICAgIH0KCiAgICBpZiAocmVhZHlTdGF0ZSA9PSA0KSB7CiAgICAgIHZhciB4bWwgPSB0cmFuc3BvcnQucmVzcG9uc2VYTUw7CiAgICAgIHRoaXMucmVzcG9uc2VYTUwgID0gT2JqZWN0LmlzVW5kZWZpbmVkKHhtbCkgPyBudWxsIDogeG1sOwogICAgICB0aGlzLnJlc3BvbnNlSlNPTiA9IHRoaXMuX2dldFJlc3BvbnNlSlNPTigpOwogICAgfQogIH0sCgogIHN0YXR1czogICAgICAwLAoKICBzdGF0dXNUZXh0OiAnJywKCiAgZ2V0U3RhdHVzOiBBamF4LlJlcXVlc3QucHJvdG90eXBlLmdldFN0YXR1cywKCiAgZ2V0U3RhdHVzVGV4dDogZnVuY3Rpb24oKSB7CiAgICB0cnkgewogICAgICByZXR1cm4gdGhpcy50cmFuc3BvcnQuc3RhdHVzVGV4dCB8fCAnJzsKICAgIH0gY2F0Y2ggKGUpIHsgcmV0dXJuICcnIH0KICB9LAoKICBnZXRIZWFkZXI6IEFqYXguUmVxdWVzdC5wcm90b3R5cGUuZ2V0SGVhZGVyLAoKICBnZXRBbGxIZWFkZXJzOiBmdW5jdGlvbigpIHsKICAgIHRyeSB7CiAgICAgIHJldHVybiB0aGlzLmdldEFsbFJlc3BvbnNlSGVhZGVycygpOwogICAgfSBjYXRjaCAoZSkgeyByZXR1cm4gbnVsbCB9CiAgfSwKCiAgZ2V0UmVzcG9uc2VIZWFkZXI6IGZ1bmN0aW9uKG5hbWUpIHsKICAgIHJldHVybiB0aGlzLnRyYW5zcG9ydC5nZXRSZXNwb25zZUhlYWRlcihuYW1lKTsKICB9LAoKICBnZXRBbGxSZXNwb25zZUhlYWRlcnM6IGZ1bmN0aW9uKCkgewogICAgcmV0dXJuIHRoaXMudHJhbnNwb3J0LmdldEFsbFJlc3BvbnNlSGVhZGVycygpOwogIH0sCgogIF9nZXRIZWFkZXJKU09OOiBmdW5jdGlvbigpIHsKICAgIHZhciBqc29uID0gdGhpcy5nZXRIZWFkZXIoJ1gtSlNPTicpOwogICAgaWYgKCFqc29uKSByZXR1cm4gbnVsbDsKICAgIGpzb24gPSBkZWNvZGVVUklDb21wb25lbnQoZXNjYXBlKGpzb24pKTsKICAgIHRyeSB7CiAgICAgIHJldHVybiBqc29uLmV2YWxKU09OKHRoaXMucmVxdWVzdC5vcHRpb25zLnNhbml0aXplSlNPTiB8fAogICAgICAgICF0aGlzLnJlcXVlc3QuaXNTYW1lT3JpZ2luKCkpOwogICAgfSBjYXRjaCAoZSkgewogICAgICB0aGlzLnJlcXVlc3QuZGlzcGF0Y2hFeGNlcHRpb24oZSk7CiAgICB9CiAgfSwKCiAgX2dldFJlc3BvbnNlSlNPTjogZnVuY3Rpb24oKSB7CiAgICB2YXIgb3B0aW9ucyA9IHRoaXMucmVxdWVzdC5vcHRpb25zOwogICAgaWYgKCFvcHRpb25zLmV2YWxKU09OIHx8IChvcHRpb25zLmV2YWxKU09OICE9ICdmb3JjZScgJiYKICAgICAgISh0aGlzLmdldEhlYWRlcignQ29udGVudC10eXBlJykgfHwgJycpLmluY2x1ZGUoJ2FwcGxpY2F0aW9uL2pzb24nKSkgfHwKICAgICAgICB0aGlzLnJlc3BvbnNlVGV4dC5ibGFuaygpKQogICAgICAgICAgcmV0dXJuIG51bGw7CiAgICB0cnkgewogICAgICByZXR1cm4gdGhpcy5yZXNwb25zZVRleHQuZXZhbEpTT04ob3B0aW9ucy5zYW5pdGl6ZUpTT04gfHwKICAgICAgICAhdGhpcy5yZXF1ZXN0LmlzU2FtZU9yaWdpbigpKTsKICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgdGhpcy5yZXF1ZXN0LmRpc3BhdGNoRXhjZXB0aW9uKGUpOwogICAgfQogIH0KfSk7CgpBamF4LlVwZGF0ZXIgPSBDbGFzcy5jcmVhdGUoQWpheC5SZXF1ZXN0LCB7CiAgaW5pdGlhbGl6ZTogZnVuY3Rpb24oJHN1cGVyLCBjb250YWluZXIsIHVybCwgb3B0aW9ucykgewogICAgdGhpcy5jb250YWluZXIgPSB7CiAgICAgIHN1Y2Nlc3M6IChjb250YWluZXIuc3VjY2VzcyB8fCBjb250YWluZXIpLAogICAgICBmYWlsdXJlOiAoY29udGFpbmVyLmZhaWx1cmUgfHwgKGNvbnRhaW5lci5zdWNjZXNzID8gbnVsbCA6IGNvbnRhaW5lcikpCiAgICB9OwoKICAgIG9wdGlvbnMgPSBPYmplY3QuY2xvbmUob3B0aW9ucyk7CiAgICB2YXIgb25Db21wbGV0ZSA9IG9wdGlvbnMub25Db21wbGV0ZTsKICAgIG9wdGlvbnMub25Db21wbGV0ZSA9IChmdW5jdGlvbihyZXNwb25zZSwganNvbikgewogICAgICB0aGlzLnVwZGF0ZUNvbnRlbnQocmVzcG9uc2UucmVzcG9uc2VUZXh0KTsKICAgICAgaWYgKE9iamVjdC5pc0Z1bmN0aW9uKG9uQ29tcGxldGUpKSBvbkNvbXBsZXRlKHJlc3BvbnNlLCBqc29uKTsKICAgIH0pLmJpbmQodGhpcyk7CgogICAgJHN1cGVyKHVybCwgb3B0aW9ucyk7CiAgfSwKCiAgdXBkYXRlQ29udGVudDogZnVuY3Rpb24ocmVzcG9uc2VUZXh0KSB7CiAgICB2YXIgcmVjZWl2ZXIgPSB0aGlzLmNvbnRhaW5lclt0aGlzLnN1Y2Nlc3MoKSA/ICdzdWNjZXNzJyA6ICdmYWlsdXJlJ10sCiAgICAgICAgb3B0aW9ucyA9IHRoaXMub3B0aW9uczsKCiAgICBpZiAoIW9wdGlvbnMuZXZhbFNjcmlwdHMpIHJlc3BvbnNlVGV4dCA9IHJlc3BvbnNlVGV4dC5zdHJpcFNjcmlwdHMoKTsKCiAgICBpZiAocmVjZWl2ZXIgPSAkKHJlY2VpdmVyKSkgewogICAgICBpZiAob3B0aW9ucy5pbnNlcnRpb24pIHsKICAgICAgICBpZiAoT2JqZWN0LmlzU3RyaW5nKG9wdGlvbnMuaW5zZXJ0aW9uKSkgewogICAgICAgICAgdmFyIGluc2VydGlvbiA9IHsgfTsgaW5zZXJ0aW9uW29wdGlvbnMuaW5zZXJ0aW9uXSA9IHJlc3BvbnNlVGV4dDsKICAgICAgICAgIHJlY2VpdmVyLmluc2VydChpbnNlcnRpb24pOwogICAgICAgIH0KICAgICAgICBlbHNlIG9wdGlvbnMuaW5zZXJ0aW9uKHJlY2VpdmVyLCByZXNwb25zZVRleHQpOwogICAgICB9CiAgICAgIGVsc2UgcmVjZWl2ZXIudXBkYXRlKHJlc3BvbnNlVGV4dCk7CiAgICB9CiAgfQp9KTsKCkFqYXguUGVyaW9kaWNhbFVwZGF0ZXIgPSBDbGFzcy5jcmVhdGUoQWpheC5CYXNlLCB7CiAgaW5pdGlhbGl6ZTogZnVuY3Rpb24oJHN1cGVyLCBjb250YWluZXIsIHVybCwgb3B0aW9ucykgewogICAgJHN1cGVyKG9wdGlvbnMpOwogICAgdGhpcy5vbkNvbXBsZXRlID0gdGhpcy5vcHRpb25zLm9uQ29tcGxldGU7CgogICAgdGhpcy5mcmVxdWVuY3kgPSAodGhpcy5vcHRpb25zLmZyZXF1ZW5jeSB8fCAyKTsKICAgIHRoaXMuZGVjYXkgPSAodGhpcy5vcHRpb25zLmRlY2F5IHx8IDEpOwoKICAgIHRoaXMudXBkYXRlciA9IHsgfTsKICAgIHRoaXMuY29udGFpbmVyID0gY29udGFpbmVyOwogICAgdGhpcy51cmwgPSB1cmw7CgogICAgdGhpcy5zdGFydCgpOwogIH0sCgogIHN0YXJ0OiBmdW5jdGlvbigpIHsKICAgIHRoaXMub3B0aW9ucy5vbkNvbXBsZXRlID0gdGhpcy51cGRhdGVDb21wbGV0ZS5iaW5kKHRoaXMpOwogICAgdGhpcy5vblRpbWVyRXZlbnQoKTsKICB9LAoKICBzdG9wOiBmdW5jdGlvbigpIHsKICAgIHRoaXMudXBkYXRlci5vcHRpb25zLm9uQ29tcGxldGUgPSB1bmRlZmluZWQ7CiAgICBjbGVhclRpbWVvdXQodGhpcy50aW1lcik7CiAgICAodGhpcy5vbkNvbXBsZXRlIHx8IFByb3RvdHlwZS5lbXB0eUZ1bmN0aW9uKS5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogIH0sCgogIHVwZGF0ZUNvbXBsZXRlOiBmdW5jdGlvbihyZXNwb25zZSkgewogICAgaWYgKHRoaXMub3B0aW9ucy5kZWNheSkgewogICAgICB0aGlzLmRlY2F5ID0gKHJlc3BvbnNlLnJlc3BvbnNlVGV4dCA9PSB0aGlzLmxhc3RUZXh0ID8KICAgICAgICB0aGlzLmRlY2F5ICogdGhpcy5vcHRpb25zLmRlY2F5IDogMSk7CgogICAgICB0aGlzLmxhc3RUZXh0ID0gcmVzcG9uc2UucmVzcG9uc2VUZXh0OwogICAgfQogICAgdGhpcy50aW1lciA9IHRoaXMub25UaW1lckV2ZW50LmJpbmQodGhpcykuZGVsYXkodGhpcy5kZWNheSAqIHRoaXMuZnJlcXVlbmN5KTsKICB9LAoKICBvblRpbWVyRXZlbnQ6IGZ1bmN0aW9uKCkgewogICAgdGhpcy51cGRhdGVyID0gbmV3IEFqYXguVXBkYXRlcih0aGlzLmNvbnRhaW5lciwgdGhpcy51cmwsIHRoaXMub3B0aW9ucyk7CiAgfQp9KTsKCgpmdW5jdGlvbiAkKGVsZW1lbnQpIHsKICBpZiAoYXJndW1lbnRzLmxlbmd0aCA+IDEpIHsKICAgIGZvciAodmFyIGkgPSAwLCBlbGVtZW50cyA9IFtdLCBsZW5ndGggPSBhcmd1bWVudHMubGVuZ3RoOyBpIDwgbGVuZ3RoOyBpKyspCiAgICAgIGVsZW1lbnRzLnB1c2goJChhcmd1bWVudHNbaV0pKTsKICAgIHJldHVybiBlbGVtZW50czsKICB9CiAgaWYgKE9iamVjdC5pc1N0cmluZyhlbGVtZW50KSkKICAgIGVsZW1lbnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChlbGVtZW50KTsKICByZXR1cm4gRWxlbWVudC5leHRlbmQoZWxlbWVudCk7Cn0KCmlmIChQcm90b3R5cGUuQnJvd3NlckZlYXR1cmVzLlhQYXRoKSB7CiAgZG9jdW1lbnQuX2dldEVsZW1lbnRzQnlYUGF0aCA9IGZ1bmN0aW9uKGV4cHJlc3Npb24sIHBhcmVudEVsZW1lbnQpIHsKICAgIHZhciByZXN1bHRzID0gW107CiAgICB2YXIgcXVlcnkgPSBkb2N1bWVudC5ldmFsdWF0ZShleHByZXNzaW9uLCAkKHBhcmVudEVsZW1lbnQpIHx8IGRvY3VtZW50LAogICAgICBudWxsLCBYUGF0aFJlc3VsdC5PUkRFUkVEX05PREVfU05BUFNIT1RfVFlQRSwgbnVsbCk7CiAgICBmb3IgKHZhciBpID0gMCwgbGVuZ3RoID0gcXVlcnkuc25hcHNob3RMZW5ndGg7IGkgPCBsZW5ndGg7IGkrKykKICAgICAgcmVzdWx0cy5wdXNoKEVsZW1lbnQuZXh0ZW5kKHF1ZXJ5LnNuYXBzaG90SXRlbShpKSkpOwogICAgcmV0dXJuIHJlc3VsdHM7CiAgfTsKfQoKLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovCgppZiAoIU5vZGUpIHZhciBOb2RlID0geyB9OwoKaWYgKCFOb2RlLkVMRU1FTlRfTk9ERSkgewogIE9iamVjdC5leHRlbmQoTm9kZSwgewogICAgRUxFTUVOVF9OT0RFOiAxLAogICAgQVRUUklCVVRFX05PREU6IDIsCiAgICBURVhUX05PREU6IDMsCiAgICBDREFUQV9TRUNUSU9OX05PREU6IDQsCiAgICBFTlRJVFlfUkVGRVJFTkNFX05PREU6IDUsCiAgICBFTlRJVFlfTk9ERTogNiwKICAgIFBST0NFU1NJTkdfSU5TVFJVQ1RJT05fTk9ERTogNywKICAgIENPTU1FTlRfTk9ERTogOCwKICAgIERPQ1VNRU5UX05PREU6IDksCiAgICBET0NVTUVOVF9UWVBFX05PREU6IDEwLAogICAgRE9DVU1FTlRfRlJBR01FTlRfTk9ERTogMTEsCiAgICBOT1RBVElPTl9OT0RFOiAxMgogIH0pOwp9CgoKCihmdW5jdGlvbihnbG9iYWwpIHsKICBmdW5jdGlvbiBzaG91bGRVc2VDYWNoZSh0YWdOYW1lLCBhdHRyaWJ1dGVzKSB7CiAgICBpZiAodGFnTmFtZSA9PT0gJ3NlbGVjdCcpIHJldHVybiBmYWxzZTsKICAgIGlmICgndHlwZScgaW4gYXR0cmlidXRlcykgcmV0dXJuIGZhbHNlOwogICAgcmV0dXJuIHRydWU7CiAgfQoKICB2YXIgSEFTX0VYVEVOREVEX0NSRUFURV9FTEVNRU5UX1NZTlRBWCA9IChmdW5jdGlvbigpewogICAgdHJ5IHsKICAgICAgdmFyIGVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnPGlucHV0IG5hbWU9IngiPicpOwogICAgICByZXR1cm4gZWwudGFnTmFtZS50b0xvd2VyQ2FzZSgpID09PSAnaW5wdXQnICYmIGVsLm5hbWUgPT09ICd4JzsKICAgIH0KICAgIGNhdGNoKGVycikgewogICAgICByZXR1cm4gZmFsc2U7CiAgICB9CiAgfSkoKTsKCiAgdmFyIGVsZW1lbnQgPSBnbG9iYWwuRWxlbWVudDsKCiAgZ2xvYmFsLkVsZW1lbnQgPSBmdW5jdGlvbih0YWdOYW1lLCBhdHRyaWJ1dGVzKSB7CiAgICBhdHRyaWJ1dGVzID0gYXR0cmlidXRlcyB8fCB7IH07CiAgICB0YWdOYW1lID0gdGFnTmFtZS50b0xvd2VyQ2FzZSgpOwogICAgdmFyIGNhY2hlID0gRWxlbWVudC5jYWNoZTsKCiAgICBpZiAoSEFTX0VYVEVOREVEX0NSRUFURV9FTEVNRU5UX1NZTlRBWCAmJiBhdHRyaWJ1dGVzLm5hbWUpIHsKICAgICAgdGFnTmFtZSA9ICc8JyArIHRhZ05hbWUgKyAnIG5hbWU9IicgKyBhdHRyaWJ1dGVzLm5hbWUgKyAnIj4nOwogICAgICBkZWxldGUgYXR0cmlidXRlcy5uYW1lOwogICAgICByZXR1cm4gRWxlbWVudC53cml0ZUF0dHJpYnV0ZShkb2N1bWVudC5jcmVhdGVFbGVtZW50KHRhZ05hbWUpLCBhdHRyaWJ1dGVzKTsKICAgIH0KCiAgICBpZiAoIWNhY2hlW3RhZ05hbWVdKSBjYWNoZVt0YWdOYW1lXSA9IEVsZW1lbnQuZXh0ZW5kKGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQodGFnTmFtZSkpOwoKICAgIHZhciBub2RlID0gc2hvdWxkVXNlQ2FjaGUodGFnTmFtZSwgYXR0cmlidXRlcykgPwogICAgIGNhY2hlW3RhZ05hbWVdLmNsb25lTm9kZShmYWxzZSkgOiBkb2N1bWVudC5jcmVhdGVFbGVtZW50KHRhZ05hbWUpOwoKICAgIHJldHVybiBFbGVtZW50LndyaXRlQXR0cmlidXRlKG5vZGUsIGF0dHJpYnV0ZXMpOwogIH07CgogIE9iamVjdC5leHRlbmQoZ2xvYmFsLkVsZW1lbnQsIGVsZW1lbnQgfHwgeyB9KTsKICBpZiAoZWxlbWVudCkgZ2xvYmFsLkVsZW1lbnQucHJvdG90eXBlID0gZWxlbWVudC5wcm90b3R5cGU7Cgp9KSh0aGlzKTsKCkVsZW1lbnQuaWRDb3VudGVyID0gMTsKRWxlbWVudC5jYWNoZSA9IHsgfTsKCkVsZW1lbnQuX3B1cmdlRWxlbWVudCA9IGZ1bmN0aW9uKGVsZW1lbnQpIHsKICB2YXIgdWlkID0gZWxlbWVudC5fcHJvdG90eXBlVUlEOwogIGlmICh1aWQpIHsKICAgIEVsZW1lbnQuc3RvcE9ic2VydmluZyhlbGVtZW50KTsKICAgIGVsZW1lbnQuX3Byb3RvdHlwZVVJRCA9IHZvaWQgMDsKICAgIGRlbGV0ZSBFbGVtZW50LlN0b3JhZ2VbdWlkXTsKICB9Cn0KCkVsZW1lbnQuTWV0aG9kcyA9IHsKICB2aXNpYmxlOiBmdW5jdGlvbihlbGVtZW50KSB7CiAgICByZXR1cm4gJChlbGVtZW50KS5zdHlsZS5kaXNwbGF5ICE9ICdub25lJzsKICB9LAoKICB0b2dnbGU6IGZ1bmN0aW9uKGVsZW1lbnQpIHsKICAgIGVsZW1lbnQgPSAkKGVsZW1lbnQpOwogICAgRWxlbWVudFtFbGVtZW50LnZpc2libGUoZWxlbWVudCkgPyAnaGlkZScgOiAnc2hvdyddKGVsZW1lbnQpOwogICAgcmV0dXJuIGVsZW1lbnQ7CiAgfSwKCiAgaGlkZTogZnVuY3Rpb24oZWxlbWVudCkgewogICAgZWxlbWVudCA9ICQoZWxlbWVudCk7CiAgICBlbGVtZW50LnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7CiAgICByZXR1cm4gZWxlbWVudDsKICB9LAoKICBzaG93OiBmdW5jdGlvbihlbGVtZW50KSB7CiAgICBlbGVtZW50ID0gJChlbGVtZW50KTsKICAgIGVsZW1lbnQuc3R5bGUuZGlzcGxheSA9ICcnOwogICAgcmV0dXJuIGVsZW1lbnQ7CiAgfSwKCiAgcmVtb3ZlOiBmdW5jdGlvbihlbGVtZW50KSB7CiAgICBlbGVtZW50ID0gJChlbGVtZW50KTsKICAgIGVsZW1lbnQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChlbGVtZW50KTsKICAgIHJldHVybiBlbGVtZW50OwogIH0sCgogIHVwZGF0ZTogKGZ1bmN0aW9uKCl7CgogICAgdmFyIFNFTEVDVF9FTEVNRU5UX0lOTkVSSFRNTF9CVUdHWSA9IChmdW5jdGlvbigpewogICAgICB2YXIgZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJzZWxlY3QiKSwKICAgICAgICAgIGlzQnVnZ3kgPSB0cnVlOwogICAgICBlbC5pbm5lckhUTUwgPSAiPG9wdGlvbiB2YWx1ZT1cInRlc3RcIj50ZXN0PC9vcHRpb24+IjsKICAgICAgaWYgKGVsLm9wdGlvbnMgJiYgZWwub3B0aW9uc1swXSkgewogICAgICAgIGlzQnVnZ3kgPSBlbC5vcHRpb25zWzBdLm5vZGVOYW1lLnRvVXBwZXJDYXNlKCkgIT09ICJPUFRJT04iOwogICAgICB9CiAgICAgIGVsID0gbnVsbDsKICAgICAgcmV0dXJuIGlzQnVnZ3k7CiAgICB9KSgpOwoKICAgIHZhciBUQUJMRV9FTEVNRU5UX0lOTkVSSFRNTF9CVUdHWSA9IChmdW5jdGlvbigpewogICAgICB0cnkgewogICAgICAgIHZhciBlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoInRhYmxlIik7CiAgICAgICAgaWYgKGVsICYmIGVsLnRCb2RpZXMpIHsKICAgICAgICAgIGVsLmlubmVySFRNTCA9ICI8dGJvZHk+PHRyPjx0ZD50ZXN0PC90ZD48L3RyPjwvdGJvZHk+IjsKICAgICAgICAgIHZhciBpc0J1Z2d5ID0gdHlwZW9mIGVsLnRCb2RpZXNbMF0gPT0gInVuZGVmaW5lZCI7CiAgICAgICAgICBlbCA9IG51bGw7CiAgICAgICAgICByZXR1cm4gaXNCdWdneTsKICAgICAgICB9CiAgICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgfQogICAgfSkoKTsKCiAgICB2YXIgTElOS19FTEVNRU5UX0lOTkVSSFRNTF9CVUdHWSA9IChmdW5jdGlvbigpIHsKICAgICAgdHJ5IHsKICAgICAgICB2YXIgZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTsKICAgICAgICBlbC5pbm5lckhUTUwgPSAiPGxpbms+IjsKICAgICAgICB2YXIgaXNCdWdneSA9IChlbC5jaGlsZE5vZGVzLmxlbmd0aCA9PT0gMCk7CiAgICAgICAgZWwgPSBudWxsOwogICAgICAgIHJldHVybiBpc0J1Z2d5OwogICAgICB9IGNhdGNoKGUpIHsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgfQogICAgfSkoKTsKCiAgICB2YXIgQU5ZX0lOTkVSSFRNTF9CVUdHWSA9IFNFTEVDVF9FTEVNRU5UX0lOTkVSSFRNTF9CVUdHWSB8fAogICAgIFRBQkxFX0VMRU1FTlRfSU5ORVJIVE1MX0JVR0dZIHx8IExJTktfRUxFTUVOVF9JTk5FUkhUTUxfQlVHR1k7CgogICAgdmFyIFNDUklQVF9FTEVNRU5UX1JFSkVDVFNfVEVYVE5PREVfQVBQRU5ESU5HID0gKGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIHMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJzY3JpcHQiKSwKICAgICAgICAgIGlzQnVnZ3kgPSBmYWxzZTsKICAgICAgdHJ5IHsKICAgICAgICBzLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKCIiKSk7CiAgICAgICAgaXNCdWdneSA9ICFzLmZpcnN0Q2hpbGQgfHwKICAgICAgICAgIHMuZmlyc3RDaGlsZCAmJiBzLmZpcnN0Q2hpbGQubm9kZVR5cGUgIT09IDM7CiAgICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgICBpc0J1Z2d5ID0gdHJ1ZTsKICAgICAgfQogICAgICBzID0gbnVsbDsKICAgICAgcmV0dXJuIGlzQnVnZ3k7CiAgICB9KSgpOwoKCiAgICBmdW5jdGlvbiB1cGRhdGUoZWxlbWVudCwgY29udGVudCkgewogICAgICBlbGVtZW50ID0gJChlbGVtZW50KTsKICAgICAgdmFyIHB1cmdlRWxlbWVudCA9IEVsZW1lbnQuX3B1cmdlRWxlbWVudDsKCiAgICAgIHZhciBkZXNjZW5kYW50cyA9IGVsZW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJyonKSwKICAgICAgIGkgPSBkZXNjZW5kYW50cy5sZW5ndGg7CiAgICAgIHdoaWxlIChpLS0pIHB1cmdlRWxlbWVudChkZXNjZW5kYW50c1tpXSk7CgogICAgICBpZiAoY29udGVudCAmJiBjb250ZW50LnRvRWxlbWVudCkKICAgICAgICBjb250ZW50ID0gY29udGVudC50b0VsZW1lbnQoKTsKCiAgICAgIGlmIChPYmplY3QuaXNFbGVtZW50KGNvbnRlbnQpKQogICAgICAgIHJldHVybiBlbGVtZW50LnVwZGF0ZSgpLmluc2VydChjb250ZW50KTsKCiAgICAgIGNvbnRlbnQgPSBPYmplY3QudG9IVE1MKGNvbnRlbnQpOwoKICAgICAgdmFyIHRhZ05hbWUgPSBlbGVtZW50LnRhZ05hbWUudG9VcHBlckNhc2UoKTsKCiAgICAgIGlmICh0YWdOYW1lID09PSAnU0NSSVBUJyAmJiBTQ1JJUFRfRUxFTUVOVF9SRUpFQ1RTX1RFWFROT0RFX0FQUEVORElORykgewogICAgICAgIGVsZW1lbnQudGV4dCA9IGNvbnRlbnQ7CiAgICAgICAgcmV0dXJuIGVsZW1lbnQ7CiAgICAgIH0KCiAgICAgIGlmIChBTllfSU5ORVJIVE1MX0JVR0dZKSB7CiAgICAgICAgaWYgKHRhZ05hbWUgaW4gRWxlbWVudC5faW5zZXJ0aW9uVHJhbnNsYXRpb25zLnRhZ3MpIHsKICAgICAgICAgIHdoaWxlIChlbGVtZW50LmZpcnN0Q2hpbGQpIHsKICAgICAgICAgICAgZWxlbWVudC5yZW1vdmVDaGlsZChlbGVtZW50LmZpcnN0Q2hpbGQpOwogICAgICAgICAgfQogICAgICAgICAgRWxlbWVudC5fZ2V0Q29udGVudEZyb21Bbm9ueW1vdXNFbGVtZW50KHRhZ05hbWUsIGNvbnRlbnQuc3RyaXBTY3JpcHRzKCkpCiAgICAgICAgICAgIC5lYWNoKGZ1bmN0aW9uKG5vZGUpIHsKICAgICAgICAgICAgICBlbGVtZW50LmFwcGVuZENoaWxkKG5vZGUpCiAgICAgICAgICAgIH0pOwogICAgICAgIH0gZWxzZSBpZiAoTElOS19FTEVNRU5UX0lOTkVSSFRNTF9CVUdHWSAmJiBPYmplY3QuaXNTdHJpbmcoY29udGVudCkgJiYgY29udGVudC5pbmRleE9mKCc8bGluaycpID4gLTEpIHsKICAgICAgICAgIHdoaWxlIChlbGVtZW50LmZpcnN0Q2hpbGQpIHsKICAgICAgICAgICAgZWxlbWVudC5yZW1vdmVDaGlsZChlbGVtZW50LmZpcnN0Q2hpbGQpOwogICAgICAgICAgfQogICAgICAgICAgdmFyIG5vZGVzID0gRWxlbWVudC5fZ2V0Q29udGVudEZyb21Bbm9ueW1vdXNFbGVtZW50KHRhZ05hbWUsIGNvbnRlbnQuc3RyaXBTY3JpcHRzKCksIHRydWUpOwogICAgICAgICAgbm9kZXMuZWFjaChmdW5jdGlvbihub2RlKSB7IGVsZW1lbnQuYXBwZW5kQ2hpbGQobm9kZSkgfSk7CiAgICAgICAgfQogICAgICAgIGVsc2UgewogICAgICAgICAgZWxlbWVudC5pbm5lckhUTUwgPSBjb250ZW50LnN0cmlwU2NyaXB0cygpOwogICAgICAgIH0KICAgICAgfQogICAgICBlbHNlIHsKICAgICAgICBlbGVtZW50LmlubmVySFRNTCA9IGNvbnRlbnQuc3RyaXBTY3JpcHRzKCk7CiAgICAgIH0KCiAgICAgIGNvbnRlbnQuZXZhbFNjcmlwdHMuYmluZChjb250ZW50KS5kZWZlcigpOwogICAgICByZXR1cm4gZWxlbWVudDsKICAgIH0KCiAgICByZXR1cm4gdXBkYXRlOwogIH0pKCksCgogIHJlcGxhY2U6IGZ1bmN0aW9uKGVsZW1lbnQsIGNvbnRlbnQpIHsKICAgIGVsZW1lbnQgPSAkKGVsZW1lbnQpOwogICAgaWYgKGNvbnRlbnQgJiYgY29udGVudC50b0VsZW1lbnQpIGNvbnRlbnQgPSBjb250ZW50LnRvRWxlbWVudCgpOwogICAgZWxzZSBpZiAoIU9iamVjdC5pc0VsZW1lbnQoY29udGVudCkpIHsKICAgICAgY29udGVudCA9IE9iamVjdC50b0hUTUwoY29udGVudCk7CiAgICAgIHZhciByYW5nZSA9IGVsZW1lbnQub3duZXJEb2N1bWVudC5jcmVhdGVSYW5nZSgpOwogICAgICByYW5nZS5zZWxlY3ROb2RlKGVsZW1lbnQpOwogICAgICBjb250ZW50LmV2YWxTY3JpcHRzLmJpbmQoY29udGVudCkuZGVmZXIoKTsKICAgICAgY29udGVudCA9IHJhbmdlLmNyZWF0ZUNvbnRleHR1YWxGcmFnbWVudChjb250ZW50LnN0cmlwU2NyaXB0cygpKTsKICAgIH0KICAgIGVsZW1lbnQucGFyZW50Tm9kZS5yZXBsYWNlQ2hpbGQoY29udGVudCwgZWxlbWVudCk7CiAgICByZXR1cm4gZWxlbWVudDsKICB9LAoKICBpbnNlcnQ6IGZ1bmN0aW9uKGVsZW1lbnQsIGluc2VydGlvbnMpIHsKICAgIGVsZW1lbnQgPSAkKGVsZW1lbnQpOwoKICAgIGlmIChPYmplY3QuaXNTdHJpbmcoaW5zZXJ0aW9ucykgfHwgT2JqZWN0LmlzTnVtYmVyKGluc2VydGlvbnMpIHx8CiAgICAgICAgT2JqZWN0LmlzRWxlbWVudChpbnNlcnRpb25zKSB8fCAoaW5zZXJ0aW9ucyAmJiAoaW5zZXJ0aW9ucy50b0VsZW1lbnQgfHwgaW5zZXJ0aW9ucy50b0hUTUwpKSkKICAgICAgICAgIGluc2VydGlvbnMgPSB7Ym90dG9tOmluc2VydGlvbnN9OwoKICAgIHZhciBjb250ZW50LCBpbnNlcnQsIHRhZ05hbWUsIGNoaWxkTm9kZXM7CgogICAgZm9yICh2YXIgcG9zaXRpb24gaW4gaW5zZXJ0aW9ucykgewogICAgICBjb250ZW50ICA9IGluc2VydGlvbnNbcG9zaXRpb25dOwogICAgICBwb3NpdGlvbiA9IHBvc2l0aW9uLnRvTG93ZXJDYXNlKCk7CiAgICAgIGluc2VydCA9IEVsZW1lbnQuX2luc2VydGlvblRyYW5zbGF0aW9uc1twb3NpdGlvbl07CgogICAgICBpZiAoY29udGVudCAmJiBjb250ZW50LnRvRWxlbWVudCkgY29udGVudCA9IGNvbnRlbnQudG9FbGVtZW50KCk7CiAgICAgIGlmIChPYmplY3QuaXNFbGVtZW50KGNvbnRlbnQpKSB7CiAgICAgICAgaW5zZXJ0KGVsZW1lbnQsIGNvbnRlbnQpOwogICAgICAgIGNvbnRpbnVlOwogICAgICB9CgogICAgICBjb250ZW50ID0gT2JqZWN0LnRvSFRNTChjb250ZW50KTsKCiAgICAgIHRhZ05hbWUgPSAoKHBvc2l0aW9uID09ICdiZWZvcmUnIHx8IHBvc2l0aW9uID09ICdhZnRlcicpCiAgICAgICAgPyBlbGVtZW50LnBhcmVudE5vZGUgOiBlbGVtZW50KS50YWdOYW1lLnRvVXBwZXJDYXNlKCk7CgogICAgICBjaGlsZE5vZGVzID0gRWxlbWVudC5fZ2V0Q29udGVudEZyb21Bbm9ueW1vdXNFbGVtZW50KHRhZ05hbWUsIGNvbnRlbnQuc3RyaXBTY3JpcHRzKCkpOwoKICAgICAgaWYgKHBvc2l0aW9uID09ICd0b3AnIHx8IHBvc2l0aW9uID09ICdhZnRlcicpIGNoaWxkTm9kZXMucmV2ZXJzZSgpOwogICAgICBjaGlsZE5vZGVzLmVhY2goaW5zZXJ0LmN1cnJ5KGVsZW1lbnQpKTsKCiAgICAgIGNvbnRlbnQuZXZhbFNjcmlwdHMuYmluZChjb250ZW50KS5kZWZlcigpOwogICAgfQoKICAgIHJldHVybiBlbGVtZW50OwogIH0sCgogIHdyYXA6IGZ1bmN0aW9uKGVsZW1lbnQsIHdyYXBwZXIsIGF0dHJpYnV0ZXMpIHsKICAgIGVsZW1lbnQgPSAkKGVsZW1lbnQpOwogICAgaWYgKE9iamVjdC5pc0VsZW1lbnQod3JhcHBlcikpCiAgICAgICQod3JhcHBlcikud3JpdGVBdHRyaWJ1dGUoYXR0cmlidXRlcyB8fCB7IH0pOwogICAgZWxzZSBpZiAoT2JqZWN0LmlzU3RyaW5nKHdyYXBwZXIpKSB3cmFwcGVyID0gbmV3IEVsZW1lbnQod3JhcHBlciwgYXR0cmlidXRlcyk7CiAgICBlbHNlIHdyYXBwZXIgPSBuZXcgRWxlbWVudCgnZGl2Jywgd3JhcHBlcik7CiAgICBpZiAoZWxlbWVudC5wYXJlbnROb2RlKQogICAgICBlbGVtZW50LnBhcmVudE5vZGUucmVwbGFjZUNoaWxkKHdyYXBwZXIsIGVsZW1lbnQpOwogICAgd3JhcHBlci5hcHBlbmRDaGlsZChlbGVtZW50KTsKICAgIHJldHVybiB3cmFwcGVyOwogIH0sCgogIGluc3BlY3Q6IGZ1bmN0aW9uKGVsZW1lbnQpIHsKICAgIGVsZW1lbnQgPSAkKGVsZW1lbnQpOwogICAgdmFyIHJlc3VsdCA9ICc8JyArIGVsZW1lbnQudGFnTmFtZS50b0xvd2VyQ2FzZSgpOwogICAgJEgoeydpZCc6ICdpZCcsICdjbGFzc05hbWUnOiAnY2xhc3MnfSkuZWFjaChmdW5jdGlvbihwYWlyKSB7CiAgICAgIHZhciBwcm9wZXJ0eSA9IHBhaXIuZmlyc3QoKSwKICAgICAgICAgIGF0dHJpYnV0ZSA9IHBhaXIubGFzdCgpLAogICAgICAgICAgdmFsdWUgPSAoZWxlbWVudFtwcm9wZXJ0eV0gfHwgJycpLnRvU3RyaW5nKCk7CiAgICAgIGlmICh2YWx1ZSkgcmVzdWx0ICs9ICcgJyArIGF0dHJpYnV0ZSArICc9JyArIHZhbHVlLmluc3BlY3QodHJ1ZSk7CiAgICB9KTsKICAgIHJldHVybiByZXN1bHQgKyAnPic7CiAgfSwKCiAgcmVjdXJzaXZlbHlDb2xsZWN0OiBmdW5jdGlvbihlbGVtZW50LCBwcm9wZXJ0eSwgbWF4aW11bUxlbmd0aCkgewogICAgZWxlbWVudCA9ICQoZWxlbWVudCk7CiAgICBtYXhpbXVtTGVuZ3RoID0gbWF4aW11bUxlbmd0aCB8fCAtMTsKICAgIHZhciBlbGVtZW50cyA9IFtdOwoKICAgIHdoaWxlIChlbGVtZW50ID0gZWxlbWVudFtwcm9wZXJ0eV0pIHsKICAgICAgaWYgKGVsZW1lbnQubm9kZVR5cGUgPT0gMSkKICAgICAgICBlbGVtZW50cy5wdXNoKEVsZW1lbnQuZXh0ZW5kKGVsZW1lbnQpKTsKICAgICAgaWYgKGVsZW1lbnRzLmxlbmd0aCA9PSBtYXhpbXVtTGVuZ3RoKQogICAgICAgIGJyZWFrOwogICAgfQoKICAgIHJldHVybiBlbGVtZW50czsKICB9LAoKICBhbmNlc3RvcnM6IGZ1bmN0aW9uKGVsZW1lbnQpIHsKICAgIHJldHVybiBFbGVtZW50LnJlY3Vyc2l2ZWx5Q29sbGVjdChlbGVtZW50LCAncGFyZW50Tm9kZScpOwogIH0sCgogIGRlc2NlbmRhbnRzOiBmdW5jdGlvbihlbGVtZW50KSB7CiAgICByZXR1cm4gRWxlbWVudC5zZWxlY3QoZWxlbWVudCwgIioiKTsKICB9LAoKICBmaXJzdERlc2NlbmRhbnQ6IGZ1bmN0aW9uKGVsZW1lbnQpIHsKICAgIGVsZW1lbnQgPSAkKGVsZW1lbnQpLmZpcnN0Q2hpbGQ7CiAgICB3aGlsZSAoZWxlbWVudCAmJiBlbGVtZW50Lm5vZGVUeXBlICE9IDEpIGVsZW1lbnQgPSBlbGVtZW50Lm5leHRTaWJsaW5nOwogICAgcmV0dXJuICQoZWxlbWVudCk7CiAgfSwKCiAgaW1tZWRpYXRlRGVzY2VuZGFudHM6IGZ1bmN0aW9uKGVsZW1lbnQpIHsKICAgIHZhciByZXN1bHRzID0gW10sIGNoaWxkID0gJChlbGVtZW50KS5maXJzdENoaWxkOwogICAgd2hpbGUgKGNoaWxkKSB7CiAgICAgIGlmIChjaGlsZC5ub2RlVHlwZSA9PT0gMSkgewogICAgICAgIHJlc3VsdHMucHVzaChFbGVtZW50LmV4dGVuZChjaGlsZCkpOwogICAgICB9CiAgICAgIGNoaWxkID0gY2hpbGQubmV4dFNpYmxpbmc7CiAgICB9CiAgICByZXR1cm4gcmVzdWx0czsKICB9LAoKICBwcmV2aW91c1NpYmxpbmdzOiBmdW5jdGlvbihlbGVtZW50LCBtYXhpbXVtTGVuZ3RoKSB7CiAgICByZXR1cm4gRWxlbWVudC5yZWN1cnNpdmVseUNvbGxlY3QoZWxlbWVudCwgJ3ByZXZpb3VzU2libGluZycpOwogIH0sCgogIG5leHRTaWJsaW5nczogZnVuY3Rpb24oZWxlbWVudCkgewogICAgcmV0dXJuIEVsZW1lbnQucmVjdXJzaXZlbHlDb2xsZWN0KGVsZW1lbnQsICduZXh0U2libGluZycpOwogIH0sCgogIHNpYmxpbmdzOiBmdW5jdGlvbihlbGVtZW50KSB7CiAgICBlbGVtZW50ID0gJChlbGVtZW50KTsKICAgIHJldHVybiBFbGVtZW50LnByZXZpb3VzU2libGluZ3MoZWxlbWVudCkucmV2ZXJzZSgpCiAgICAgIC5jb25jYXQoRWxlbWVudC5uZXh0U2libGluZ3MoZWxlbWVudCkpOwogIH0sCgogIG1hdGNoOiBmdW5jdGlvbihlbGVtZW50LCBzZWxlY3RvcikgewogICAgZWxlbWVudCA9ICQoZWxlbWVudCk7CiAgICBpZiAoT2JqZWN0LmlzU3RyaW5nKHNlbGVjdG9yKSkKICAgICAgcmV0dXJuIFByb3RvdHlwZS5TZWxlY3Rvci5tYXRjaChlbGVtZW50LCBzZWxlY3Rvcik7CiAgICByZXR1cm4gc2VsZWN0b3IubWF0Y2goZWxlbWVudCk7CiAgfSwKCiAgdXA6IGZ1bmN0aW9uKGVsZW1lbnQsIGV4cHJlc3Npb24sIGluZGV4KSB7CiAgICBlbGVtZW50ID0gJChlbGVtZW50KTsKICAgIGlmIChhcmd1bWVudHMubGVuZ3RoID09IDEpIHJldHVybiAkKGVsZW1lbnQucGFyZW50Tm9kZSk7CiAgICB2YXIgYW5jZXN0b3JzID0gRWxlbWVudC5hbmNlc3RvcnMoZWxlbWVudCk7CiAgICByZXR1cm4gT2JqZWN0LmlzTnVtYmVyKGV4cHJlc3Npb24pID8gYW5jZXN0b3JzW2V4cHJlc3Npb25dIDoKICAgICAgUHJvdG90eXBlLlNlbGVjdG9yLmZpbmQoYW5jZXN0b3JzLCBleHByZXNzaW9uLCBpbmRleCk7CiAgfSwKCiAgZG93bjogZnVuY3Rpb24oZWxlbWVudCwgZXhwcmVzc2lvbiwgaW5kZXgpIHsKICAgIGVsZW1lbnQgPSAkKGVsZW1lbnQpOwogICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPT0gMSkgcmV0dXJuIEVsZW1lbnQuZmlyc3REZXNjZW5kYW50KGVsZW1lbnQpOwogICAgcmV0dXJuIE9iamVjdC5pc051bWJlcihleHByZXNzaW9uKSA/IEVsZW1lbnQuZGVzY2VuZGFudHMoZWxlbWVudClbZXhwcmVzc2lvbl0gOgogICAgICBFbGVtZW50LnNlbGVjdChlbGVtZW50LCBleHByZXNzaW9uKVtpbmRleCB8fCAwXTsKICB9LAoKICBwcmV2aW91czogZnVuY3Rpb24oZWxlbWVudCwgZXhwcmVzc2lvbiwgaW5kZXgpIHsKICAgIGVsZW1lbnQgPSAkKGVsZW1lbnQpOwogICAgaWYgKE9iamVjdC5pc051bWJlcihleHByZXNzaW9uKSkgaW5kZXggPSBleHByZXNzaW9uLCBleHByZXNzaW9uID0gZmFsc2U7CiAgICBpZiAoIU9iamVjdC5pc051bWJlcihpbmRleCkpIGluZGV4ID0gMDsKCiAgICBpZiAoZXhwcmVzc2lvbikgewogICAgICByZXR1cm4gUHJvdG90eXBlLlNlbGVjdG9yLmZpbmQoZWxlbWVudC5wcmV2aW91c1NpYmxpbmdzKCksIGV4cHJlc3Npb24sIGluZGV4KTsKICAgIH0gZWxzZSB7CiAgICAgIHJldHVybiBlbGVtZW50LnJlY3Vyc2l2ZWx5Q29sbGVjdCgicHJldmlvdXNTaWJsaW5nIiwgaW5kZXggKyAxKVtpbmRleF07CiAgICB9CiAgfSwKCiAgbmV4dDogZnVuY3Rpb24oZWxlbWVudCwgZXhwcmVzc2lvbiwgaW5kZXgpIHsKICAgIGVsZW1lbnQgPSAkKGVsZW1lbnQpOwogICAgaWYgKE9iamVjdC5pc051bWJlcihleHByZXNzaW9uKSkgaW5kZXggPSBleHByZXNzaW9uLCBleHByZXNzaW9uID0gZmFsc2U7CiAgICBpZiAoIU9iamVjdC5pc051bWJlcihpbmRleCkpIGluZGV4ID0gMDsKCiAgICBpZiAoZXhwcmVzc2lvbikgewogICAgICByZXR1cm4gUHJvdG90eXBlLlNlbGVjdG9yLmZpbmQoZWxlbWVudC5uZXh0U2libGluZ3MoKSwgZXhwcmVzc2lvbiwgaW5kZXgpOwogICAgfSBlbHNlIHsKICAgICAgdmFyIG1heGltdW1MZW5ndGggPSBPYmplY3QuaXNOdW1iZXIoaW5kZXgpID8gaW5kZXggKyAxIDogMTsKICAgICAgcmV0dXJuIGVsZW1lbnQucmVjdXJzaXZlbHlDb2xsZWN0KCJuZXh0U2libGluZyIsIGluZGV4ICsgMSlbaW5kZXhdOwogICAgfQogIH0sCgoKICBzZWxlY3Q6IGZ1bmN0aW9uKGVsZW1lbnQpIHsKICAgIGVsZW1lbnQgPSAkKGVsZW1lbnQpOwogICAgdmFyIGV4cHJlc3Npb25zID0gQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzLCAxKS5qb2luKCcsICcpOwogICAgcmV0dXJuIFByb3RvdHlwZS5TZWxlY3Rvci5zZWxlY3QoZXhwcmVzc2lvbnMsIGVsZW1lbnQpOwogIH0sCgogIGFkamFjZW50OiBmdW5jdGlvbihlbGVtZW50KSB7CiAgICBlbGVtZW50ID0gJChlbGVtZW50KTsKICAgIHZhciBleHByZXNzaW9ucyA9IEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywgMSkuam9pbignLCAnKTsKICAgIHJldHVybiBQcm90b3R5cGUuU2VsZWN0b3Iuc2VsZWN0KGV4cHJlc3Npb25zLCBlbGVtZW50LnBhcmVudE5vZGUpLndpdGhvdXQoZWxlbWVudCk7CiAgfSwKCiAgaWRlbnRpZnk6IGZ1bmN0aW9uKGVsZW1lbnQpIHsKICAgIGVsZW1lbnQgPSAkKGVsZW1lbnQpOwogICAgdmFyIGlkID0gRWxlbWVudC5yZWFkQXR0cmlidXRlKGVsZW1lbnQsICdpZCcpOwogICAgaWYgKGlkKSByZXR1cm4gaWQ7CiAgICBkbyB7IGlkID0gJ2Fub255bW91c19lbGVtZW50XycgKyBFbGVtZW50LmlkQ291bnRlcisrIH0gd2hpbGUgKCQoaWQpKTsKICAgIEVsZW1lbnQud3JpdGVBdHRyaWJ1dGUoZWxlbWVudCwgJ2lkJywgaWQpOwogICAgcmV0dXJuIGlkOwogIH0sCgogIHJlYWRBdHRyaWJ1dGU6IGZ1bmN0aW9uKGVsZW1lbnQsIG5hbWUpIHsKICAgIGVsZW1lbnQgPSAkKGVsZW1lbnQpOwogICAgaWYgKFByb3RvdHlwZS5Ccm93c2VyLklFKSB7CiAgICAgIHZhciB0ID0gRWxlbWVudC5fYXR0cmlidXRlVHJhbnNsYXRpb25zLnJlYWQ7CiAgICAgIGlmICh0LnZhbHVlc1tuYW1lXSkgcmV0dXJuIHQudmFsdWVzW25hbWVdKGVsZW1lbnQsIG5hbWUpOwogICAgICBpZiAodC5uYW1lc1tuYW1lXSkgbmFtZSA9IHQubmFtZXNbbmFtZV07CiAgICAgIGlmIChuYW1lLmluY2x1ZGUoJzonKSkgewogICAgICAgIHJldHVybiAoIWVsZW1lbnQuYXR0cmlidXRlcyB8fCAhZWxlbWVudC5hdHRyaWJ1dGVzW25hbWVdKSA/IG51bGwgOgogICAgICAgICBlbGVtZW50LmF0dHJpYnV0ZXNbbmFtZV0udmFsdWU7CiAgICAgIH0KICAgIH0KICAgIHJldHVybiBlbGVtZW50LmdldEF0dHJpYnV0ZShuYW1lKTsKICB9LAoKICB3cml0ZUF0dHJpYnV0ZTogZnVuY3Rpb24oZWxlbWVudCwgbmFtZSwgdmFsdWUpIHsKICAgIGVsZW1lbnQgPSAkKGVsZW1lbnQpOwogICAgdmFyIGF0dHJpYnV0ZXMgPSB7IH0sIHQgPSBFbGVtZW50Ll9hdHRyaWJ1dGVUcmFuc2xhdGlvbnMud3JpdGU7CgogICAgaWYgKHR5cGVvZiBuYW1lID09ICdvYmplY3QnKSBhdHRyaWJ1dGVzID0gbmFtZTsKICAgIGVsc2UgYXR0cmlidXRlc1tuYW1lXSA9IE9iamVjdC5pc1VuZGVmaW5lZCh2YWx1ZSkgPyB0cnVlIDogdmFsdWU7CgogICAgZm9yICh2YXIgYXR0ciBpbiBhdHRyaWJ1dGVzKSB7CiAgICAgIG5hbWUgPSB0Lm5hbWVzW2F0dHJdIHx8IGF0dHI7CiAgICAgIHZhbHVlID0gYXR0cmlidXRlc1thdHRyXTsKICAgICAgaWYgKHQudmFsdWVzW2F0dHJdKSBuYW1lID0gdC52YWx1ZXNbYXR0cl0oZWxlbWVudCwgdmFsdWUpOwogICAgICBpZiAodmFsdWUgPT09IGZhbHNlIHx8IHZhbHVlID09PSBudWxsKQogICAgICAgIGVsZW1lbnQucmVtb3ZlQXR0cmlidXRlKG5hbWUpOwogICAgICBlbHNlIGlmICh2YWx1ZSA9PT0gdHJ1ZSkKICAgICAgICBlbGVtZW50LnNldEF0dHJpYnV0ZShuYW1lLCBuYW1lKTsKICAgICAgZWxzZSBlbGVtZW50LnNldEF0dHJpYnV0ZShuYW1lLCB2YWx1ZSk7CiAgICB9CiAgICByZXR1cm4gZWxlbWVudDsKICB9LAoKICBnZXRIZWlnaHQ6IGZ1bmN0aW9uKGVsZW1lbnQpIHsKICAgIHJldHVybiBFbGVtZW50LmdldERpbWVuc2lvbnMoZWxlbWVudCkuaGVpZ2h0OwogIH0sCgogIGdldFdpZHRoOiBmdW5jdGlvbihlbGVtZW50KSB7CiAgICByZXR1cm4gRWxlbWVudC5nZXREaW1lbnNpb25zKGVsZW1lbnQpLndpZHRoOwogIH0sCgogIGNsYXNzTmFtZXM6IGZ1bmN0aW9uKGVsZW1lbnQpIHsKICAgIHJldHVybiBuZXcgRWxlbWVudC5DbGFzc05hbWVzKGVsZW1lbnQpOwogIH0sCgogIGhhc0NsYXNzTmFtZTogZnVuY3Rpb24oZWxlbWVudCwgY2xhc3NOYW1lKSB7CiAgICBpZiAoIShlbGVtZW50ID0gJChlbGVtZW50KSkpIHJldHVybjsKICAgIHZhciBlbGVtZW50Q2xhc3NOYW1lID0gZWxlbWVudC5jbGFzc05hbWU7CiAgICByZXR1cm4gKGVsZW1lbnRDbGFzc05hbWUubGVuZ3RoID4gMCAmJiAoZWxlbWVudENsYXNzTmFtZSA9PSBjbGFzc05hbWUgfHwKICAgICAgbmV3IFJlZ0V4cCgiKF58XFxzKSIgKyBjbGFzc05hbWUgKyAiKFxcc3wkKSIpLnRlc3QoZWxlbWVudENsYXNzTmFtZSkpKTsKICB9LAoKICBhZGRDbGFzc05hbWU6IGZ1bmN0aW9uKGVsZW1lbnQsIGNsYXNzTmFtZSkgewogICAgaWYgKCEoZWxlbWVudCA9ICQoZWxlbWVudCkpKSByZXR1cm47CiAgICBpZiAoIUVsZW1lbnQuaGFzQ2xhc3NOYW1lKGVsZW1lbnQsIGNsYXNzTmFtZSkpCiAgICAgIGVsZW1lbnQuY2xhc3NOYW1lICs9IChlbGVtZW50LmNsYXNzTmFtZSA/ICcgJyA6ICcnKSArIGNsYXNzTmFtZTsKICAgIHJldHVybiBlbGVtZW50OwogIH0sCgogIHJlbW92ZUNsYXNzTmFtZTogZnVuY3Rpb24oZWxlbWVudCwgY2xhc3NOYW1lKSB7CiAgICBpZiAoIShlbGVtZW50ID0gJChlbGVtZW50KSkpIHJldHVybjsKICAgIGVsZW1lbnQuY2xhc3NOYW1lID0gZWxlbWVudC5jbGFzc05hbWUucmVwbGFjZSgKICAgICAgbmV3IFJlZ0V4cCgiKF58XFxzKykiICsgY2xhc3NOYW1lICsgIihcXHMrfCQpIiksICcgJykuc3RyaXAoKTsKICAgIHJldHVybiBlbGVtZW50OwogIH0sCgogIHRvZ2dsZUNsYXNzTmFtZTogZnVuY3Rpb24oZWxlbWVudCwgY2xhc3NOYW1lKSB7CiAgICBpZiAoIShlbGVtZW50ID0gJChlbGVtZW50KSkpIHJldHVybjsKICAgIHJldHVybiBFbGVtZW50W0VsZW1lbnQuaGFzQ2xhc3NOYW1lKGVsZW1lbnQsIGNsYXNzTmFtZSkgPwogICAgICAncmVtb3ZlQ2xhc3NOYW1lJyA6ICdhZGRDbGFzc05hbWUnXShlbGVtZW50LCBjbGFzc05hbWUpOwogIH0sCgogIGNsZWFuV2hpdGVzcGFjZTogZnVuY3Rpb24oZWxlbWVudCkgewogICAgZWxlbWVudCA9ICQoZWxlbWVudCk7CiAgICB2YXIgbm9kZSA9IGVsZW1lbnQuZmlyc3RDaGlsZDsKICAgIHdoaWxlIChub2RlKSB7CiAgICAgIHZhciBuZXh0Tm9kZSA9IG5vZGUubmV4dFNpYmxpbmc7CiAgICAgIGlmIChub2RlLm5vZGVUeXBlID09IDMgJiYgIS9cUy8udGVzdChub2RlLm5vZGVWYWx1ZSkpCiAgICAgICAgZWxlbWVudC5yZW1vdmVDaGlsZChub2RlKTsKICAgICAgbm9kZSA9IG5leHROb2RlOwogICAgfQogICAgcmV0dXJuIGVsZW1lbnQ7CiAgfSwKCiAgZW1wdHk6IGZ1bmN0aW9uKGVsZW1lbnQpIHsKICAgIHJldHVybiAkKGVsZW1lbnQpLmlubmVySFRNTC5ibGFuaygpOwogIH0sCgogIGRlc2NlbmRhbnRPZjogZnVuY3Rpb24oZWxlbWVudCwgYW5jZXN0b3IpIHsKICAgIGVsZW1lbnQgPSAkKGVsZW1lbnQpLCBhbmNlc3RvciA9ICQoYW5jZXN0b3IpOwoKICAgIGlmIChlbGVtZW50LmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uKQogICAgICByZXR1cm4gKGVsZW1lbnQuY29tcGFyZURvY3VtZW50UG9zaXRpb24oYW5jZXN0b3IpICYgOCkgPT09IDg7CgogICAgaWYgKGFuY2VzdG9yLmNvbnRhaW5zKQogICAgICByZXR1cm4gYW5jZXN0b3IuY29udGFpbnMoZWxlbWVudCkgJiYgYW5jZXN0b3IgIT09IGVsZW1lbnQ7CgogICAgd2hpbGUgKGVsZW1lbnQgPSBlbGVtZW50LnBhcmVudE5vZGUpCiAgICAgIGlmIChlbGVtZW50ID09IGFuY2VzdG9yKSByZXR1cm4gdHJ1ZTsKCiAgICByZXR1cm4gZmFsc2U7CiAgfSwKCiAgc2Nyb2xsVG86IGZ1bmN0aW9uKGVsZW1lbnQpIHsKICAgIGVsZW1lbnQgPSAkKGVsZW1lbnQpOwogICAgdmFyIHBvcyA9IEVsZW1lbnQuY3VtdWxhdGl2ZU9mZnNldChlbGVtZW50KTsKICAgIHdpbmRvdy5zY3JvbGxUbyhwb3NbMF0sIHBvc1sxXSk7CiAgICByZXR1cm4gZWxlbWVudDsKICB9LAoKICBnZXRTdHlsZTogZnVuY3Rpb24oZWxlbWVudCwgc3R5bGUpIHsKICAgIGVsZW1lbnQgPSAkKGVsZW1lbnQpOwogICAgc3R5bGUgPSBzdHlsZSA9PSAnZmxvYXQnID8gJ2Nzc0Zsb2F0JyA6IHN0eWxlLmNhbWVsaXplKCk7CiAgICB2YXIgdmFsdWUgPSBlbGVtZW50LnN0eWxlW3N0eWxlXTsKICAgIGlmICghdmFsdWUgfHwgdmFsdWUgPT0gJ2F1dG8nKSB7CiAgICAgIHZhciBjc3MgPSBkb2N1bWVudC5kZWZhdWx0Vmlldy5nZXRDb21wdXRlZFN0eWxlKGVsZW1lbnQsIG51bGwpOwogICAgICB2YWx1ZSA9IGNzcyA/IGNzc1tzdHlsZV0gOiBudWxsOwogICAgfQogICAgaWYgKHN0eWxlID09ICdvcGFjaXR5JykgcmV0dXJuIHZhbHVlID8gcGFyc2VGbG9hdCh2YWx1ZSkgOiAxLjA7CiAgICByZXR1cm4gdmFsdWUgPT0gJ2F1dG8nID8gbnVsbCA6IHZhbHVlOwogIH0sCgogIGdldE9wYWNpdHk6IGZ1bmN0aW9uKGVsZW1lbnQpIHsKICAgIHJldHVybiAkKGVsZW1lbnQpLmdldFN0eWxlKCdvcGFjaXR5Jyk7CiAgfSwKCiAgc2V0U3R5bGU6IGZ1bmN0aW9uKGVsZW1lbnQsIHN0eWxlcykgewogICAgZWxlbWVudCA9ICQoZWxlbWVudCk7CiAgICB2YXIgZWxlbWVudFN0eWxlID0gZWxlbWVudC5zdHlsZSwgbWF0Y2g7CiAgICBpZiAoT2JqZWN0LmlzU3RyaW5nKHN0eWxlcykpIHsKICAgICAgZWxlbWVudC5zdHlsZS5jc3NUZXh0ICs9ICc7JyArIHN0eWxlczsKICAgICAgcmV0dXJuIHN0eWxlcy5pbmNsdWRlKCdvcGFjaXR5JykgPwogICAgICAgIGVsZW1lbnQuc2V0T3BhY2l0eShzdHlsZXMubWF0Y2goL29wYWNpdHk6XHMqKFxkP1wuP1xkKikvKVsxXSkgOiBlbGVtZW50OwogICAgfQogICAgZm9yICh2YXIgcHJvcGVydHkgaW4gc3R5bGVzKQogICAgICBpZiAocHJvcGVydHkgPT0gJ29wYWNpdHknKSBlbGVtZW50LnNldE9wYWNpdHkoc3R5bGVzW3Byb3BlcnR5XSk7CiAgICAgIGVsc2UKICAgICAgICBlbGVtZW50U3R5bGVbKHByb3BlcnR5ID09ICdmbG9hdCcgfHwgcHJvcGVydHkgPT0gJ2Nzc0Zsb2F0JykgPwogICAgICAgICAgKE9iamVjdC5pc1VuZGVmaW5lZChlbGVtZW50U3R5bGUuc3R5bGVGbG9hdCkgPyAnY3NzRmxvYXQnIDogJ3N0eWxlRmxvYXQnKSA6CiAgICAgICAgICAgIHByb3BlcnR5XSA9IHN0eWxlc1twcm9wZXJ0eV07CgogICAgcmV0dXJuIGVsZW1lbnQ7CiAgfSwKCiAgc2V0T3BhY2l0eTogZnVuY3Rpb24oZWxlbWVudCwgdmFsdWUpIHsKICAgIGVsZW1lbnQgPSAkKGVsZW1lbnQpOwogICAgZWxlbWVudC5zdHlsZS5vcGFjaXR5ID0gKHZhbHVlID09IDEgfHwgdmFsdWUgPT09ICcnKSA/ICcnIDoKICAgICAgKHZhbHVlIDwgMC4wMDAwMSkgPyAwIDogdmFsdWU7CiAgICByZXR1cm4gZWxlbWVudDsKICB9LAoKICBtYWtlUG9zaXRpb25lZDogZnVuY3Rpb24oZWxlbWVudCkgewogICAgZWxlbWVudCA9ICQoZWxlbWVudCk7CiAgICB2YXIgcG9zID0gRWxlbWVudC5nZXRTdHlsZShlbGVtZW50LCAncG9zaXRpb24nKTsKICAgIGlmIChwb3MgPT0gJ3N0YXRpYycgfHwgIXBvcykgewogICAgICBlbGVtZW50Ll9tYWRlUG9zaXRpb25lZCA9IHRydWU7CiAgICAgIGVsZW1lbnQuc3R5bGUucG9zaXRpb24gPSAncmVsYXRpdmUnOwogICAgICBpZiAoUHJvdG90eXBlLkJyb3dzZXIuT3BlcmEpIHsKICAgICAgICBlbGVtZW50LnN0eWxlLnRvcCA9IDA7CiAgICAgICAgZWxlbWVudC5zdHlsZS5sZWZ0ID0gMDsKICAgICAgfQogICAgfQogICAgcmV0dXJuIGVsZW1lbnQ7CiAgfSwKCiAgdW5kb1Bvc2l0aW9uZWQ6IGZ1bmN0aW9uKGVsZW1lbnQpIHsKICAgIGVsZW1lbnQgPSAkKGVsZW1lbnQpOwogICAgaWYgKGVsZW1lbnQuX21hZGVQb3NpdGlvbmVkKSB7CiAgICAgIGVsZW1lbnQuX21hZGVQb3NpdGlvbmVkID0gdW5kZWZpbmVkOwogICAgICBlbGVtZW50LnN0eWxlLnBvc2l0aW9uID0KICAgICAgICBlbGVtZW50LnN0eWxlLnRvcCA9CiAgICAgICAgZWxlbWVudC5zdHlsZS5sZWZ0ID0KICAgICAgICBlbGVtZW50LnN0eWxlLmJvdHRvbSA9CiAgICAgICAgZWxlbWVudC5zdHlsZS5yaWdodCA9ICcnOwogICAgfQogICAgcmV0dXJuIGVsZW1lbnQ7CiAgfSwKCiAgbWFrZUNsaXBwaW5nOiBmdW5jdGlvbihlbGVtZW50KSB7CiAgICBlbGVtZW50ID0gJChlbGVtZW50KTsKICAgIGlmIChlbGVtZW50Ll9vdmVyZmxvdykgcmV0dXJuIGVsZW1lbnQ7CiAgICBlbGVtZW50Ll9vdmVyZmxvdyA9IEVsZW1lbnQuZ2V0U3R5bGUoZWxlbWVudCwgJ292ZXJmbG93JykgfHwgJ2F1dG8nOwogICAgaWYgKGVsZW1lbnQuX292ZXJmbG93ICE9PSAnaGlkZGVuJykKICAgICAgZWxlbWVudC5zdHlsZS5vdmVyZmxvdyA9ICdoaWRkZW4nOwogICAgcmV0dXJuIGVsZW1lbnQ7CiAgfSwKCiAgdW5kb0NsaXBwaW5nOiBmdW5jdGlvbihlbGVtZW50KSB7CiAgICBlbGVtZW50ID0gJChlbGVtZW50KTsKICAgIGlmICghZWxlbWVudC5fb3ZlcmZsb3cpIHJldHVybiBlbGVtZW50OwogICAgZWxlbWVudC5zdHlsZS5vdmVyZmxvdyA9IGVsZW1lbnQuX292ZXJmbG93ID09ICdhdXRvJyA/ICcnIDogZWxlbWVudC5fb3ZlcmZsb3c7CiAgICBlbGVtZW50Ll9vdmVyZmxvdyA9IG51bGw7CiAgICByZXR1cm4gZWxlbWVudDsKICB9LAoKICBjbG9uZVBvc2l0aW9uOiBmdW5jdGlvbihlbGVtZW50LCBzb3VyY2UpIHsKICAgIHZhciBvcHRpb25zID0gT2JqZWN0LmV4dGVuZCh7CiAgICAgIHNldExlZnQ6ICAgIHRydWUsCiAgICAgIHNldFRvcDogICAgIHRydWUsCiAgICAgIHNldFdpZHRoOiAgIHRydWUsCiAgICAgIHNldEhlaWdodDogIHRydWUsCiAgICAgIG9mZnNldFRvcDogIDAsCiAgICAgIG9mZnNldExlZnQ6IDAKICAgIH0sIGFyZ3VtZW50c1syXSB8fCB7IH0pOwoKICAgIHNvdXJjZSA9ICQoc291cmNlKTsKICAgIHZhciBwID0gRWxlbWVudC52aWV3cG9ydE9mZnNldChzb3VyY2UpLCBkZWx0YSA9IFswLCAwXSwgcGFyZW50ID0gbnVsbDsKCiAgICBlbGVtZW50ID0gJChlbGVtZW50KTsKCiAgICBpZiAoRWxlbWVudC5nZXRTdHlsZShlbGVtZW50LCAncG9zaXRpb24nKSA9PSAnYWJzb2x1dGUnKSB7CiAgICAgIHBhcmVudCA9IEVsZW1lbnQuZ2V0T2Zmc2V0UGFyZW50KGVsZW1lbnQpOwogICAgICBkZWx0YSA9IEVsZW1lbnQudmlld3BvcnRPZmZzZXQocGFyZW50KTsKICAgIH0KCiAgICBpZiAocGFyZW50ID09IGRvY3VtZW50LmJvZHkpIHsKICAgICAgZGVsdGFbMF0gLT0gZG9jdW1lbnQuYm9keS5vZmZzZXRMZWZ0OwogICAgICBkZWx0YVsxXSAtPSBkb2N1bWVudC5ib2R5Lm9mZnNldFRvcDsKICAgIH0KCiAgICBpZiAob3B0aW9ucy5zZXRMZWZ0KSAgIGVsZW1lbnQuc3R5bGUubGVmdCAgPSAocFswXSAtIGRlbHRhWzBdICsgb3B0aW9ucy5vZmZzZXRMZWZ0KSArICdweCc7CiAgICBpZiAob3B0aW9ucy5zZXRUb3ApICAgIGVsZW1lbnQuc3R5bGUudG9wICAgPSAocFsxXSAtIGRlbHRhWzFdICsgb3B0aW9ucy5vZmZzZXRUb3ApICsgJ3B4JzsKICAgIGlmIChvcHRpb25zLnNldFdpZHRoKSAgZWxlbWVudC5zdHlsZS53aWR0aCA9IHNvdXJjZS5vZmZzZXRXaWR0aCArICdweCc7CiAgICBpZiAob3B0aW9ucy5zZXRIZWlnaHQpIGVsZW1lbnQuc3R5bGUuaGVpZ2h0ID0gc291cmNlLm9mZnNldEhlaWdodCArICdweCc7CiAgICByZXR1cm4gZWxlbWVudDsKICB9Cn07CgpPYmplY3QuZXh0ZW5kKEVsZW1lbnQuTWV0aG9kcywgewogIGdldEVsZW1lbnRzQnlTZWxlY3RvcjogRWxlbWVudC5NZXRob2RzLnNlbGVjdCwKCiAgY2hpbGRFbGVtZW50czogRWxlbWVudC5NZXRob2RzLmltbWVkaWF0ZURlc2NlbmRhbnRzCn0pOwoKRWxlbWVudC5fYXR0cmlidXRlVHJhbnNsYXRpb25zID0gewogIHdyaXRlOiB7CiAgICBuYW1lczogewogICAgICBjbGFzc05hbWU6ICdjbGFzcycsCiAgICAgIGh0bWxGb3I6ICAgJ2ZvcicKICAgIH0sCiAgICB2YWx1ZXM6IHsgfQogIH0KfTsKCmlmIChQcm90b3R5cGUuQnJvd3Nlci5PcGVyYSkgewogIEVsZW1lbnQuTWV0aG9kcy5nZXRTdHlsZSA9IEVsZW1lbnQuTWV0aG9kcy5nZXRTdHlsZS53cmFwKAogICAgZnVuY3Rpb24ocHJvY2VlZCwgZWxlbWVudCwgc3R5bGUpIHsKICAgICAgc3dpdGNoIChzdHlsZSkgewogICAgICAgIGNhc2UgJ2hlaWdodCc6IGNhc2UgJ3dpZHRoJzoKICAgICAgICAgIGlmICghRWxlbWVudC52aXNpYmxlKGVsZW1lbnQpKSByZXR1cm4gbnVsbDsKCiAgICAgICAgICB2YXIgZGltID0gcGFyc2VJbnQocHJvY2VlZChlbGVtZW50LCBzdHlsZSksIDEwKTsKCiAgICAgICAgICBpZiAoZGltICE9PSBlbGVtZW50WydvZmZzZXQnICsgc3R5bGUuY2FwaXRhbGl6ZSgpXSkKICAgICAgICAgICAgcmV0dXJuIGRpbSArICdweCc7CgogICAgICAgICAgdmFyIHByb3BlcnRpZXM7CiAgICAgICAgICBpZiAoc3R5bGUgPT09ICdoZWlnaHQnKSB7CiAgICAgICAgICAgIHByb3BlcnRpZXMgPSBbJ2JvcmRlci10b3Atd2lkdGgnLCAncGFkZGluZy10b3AnLAogICAgICAgICAgICAgJ3BhZGRpbmctYm90dG9tJywgJ2JvcmRlci1ib3R0b20td2lkdGgnXTsKICAgICAgICAgIH0KICAgICAgICAgIGVsc2UgewogICAgICAgICAgICBwcm9wZXJ0aWVzID0gWydib3JkZXItbGVmdC13aWR0aCcsICdwYWRkaW5nLWxlZnQnLAogICAgICAgICAgICAgJ3BhZGRpbmctcmlnaHQnLCAnYm9yZGVyLXJpZ2h0LXdpZHRoJ107CiAgICAgICAgICB9CiAgICAgICAgICByZXR1cm4gcHJvcGVydGllcy5pbmplY3QoZGltLCBmdW5jdGlvbihtZW1vLCBwcm9wZXJ0eSkgewogICAgICAgICAgICB2YXIgdmFsID0gcHJvY2VlZChlbGVtZW50LCBwcm9wZXJ0eSk7CiAgICAgICAgICAgIHJldHVybiB2YWwgPT09IG51bGwgPyBtZW1vIDogbWVtbyAtIHBhcnNlSW50KHZhbCwgMTApOwogICAgICAgICAgfSkgKyAncHgnOwogICAgICAgIGRlZmF1bHQ6IHJldHVybiBwcm9jZWVkKGVsZW1lbnQsIHN0eWxlKTsKICAgICAgfQogICAgfQogICk7CgogIEVsZW1lbnQuTWV0aG9kcy5yZWFkQXR0cmlidXRlID0gRWxlbWVudC5NZXRob2RzLnJlYWRBdHRyaWJ1dGUud3JhcCgKICAgIGZ1bmN0aW9uKHByb2NlZWQsIGVsZW1lbnQsIGF0dHJpYnV0ZSkgewogICAgICBpZiAoYXR0cmlidXRlID09PSAndGl0bGUnKSByZXR1cm4gZWxlbWVudC50aXRsZTsKICAgICAgcmV0dXJuIHByb2NlZWQoZWxlbWVudCwgYXR0cmlidXRlKTsKICAgIH0KICApOwp9CgplbHNlIGlmIChQcm90b3R5cGUuQnJvd3Nlci5JRSkgewogIEVsZW1lbnQuTWV0aG9kcy5nZXRTdHlsZSA9IGZ1bmN0aW9uKGVsZW1lbnQsIHN0eWxlKSB7CiAgICBlbGVtZW50ID0gJChlbGVtZW50KTsKICAgIHN0eWxlID0gKHN0eWxlID09ICdmbG9hdCcgfHwgc3R5bGUgPT0gJ2Nzc0Zsb2F0JykgPyAnc3R5bGVGbG9hdCcgOiBzdHlsZS5jYW1lbGl6ZSgpOwogICAgdmFyIHZhbHVlID0gZWxlbWVudC5zdHlsZVtzdHlsZV07CiAgICBpZiAoIXZhbHVlICYmIGVsZW1lbnQuY3VycmVudFN0eWxlKSB2YWx1ZSA9IGVsZW1lbnQuY3VycmVudFN0eWxlW3N0eWxlXTsKCiAgICBpZiAoc3R5bGUgPT0gJ29wYWNpdHknKSB7CiAgICAgIGlmICh2YWx1ZSA9IChlbGVtZW50LmdldFN0eWxlKCdmaWx0ZXInKSB8fCAnJykubWF0Y2goL2FscGhhXChvcGFjaXR5PSguKilcKS8pKQogICAgICAgIGlmICh2YWx1ZVsxXSkgcmV0dXJuIHBhcnNlRmxvYXQodmFsdWVbMV0pIC8gMTAwOwogICAgICByZXR1cm4gMS4wOwogICAgfQoKICAgIGlmICh2YWx1ZSA9PSAnYXV0bycpIHsKICAgICAgaWYgKChzdHlsZSA9PSAnd2lkdGgnIHx8IHN0eWxlID09ICdoZWlnaHQnKSAmJiAoZWxlbWVudC5nZXRTdHlsZSgnZGlzcGxheScpICE9ICdub25lJykpCiAgICAgICAgcmV0dXJuIGVsZW1lbnRbJ29mZnNldCcgKyBzdHlsZS5jYXBpdGFsaXplKCldICsgJ3B4JzsKICAgICAgcmV0dXJuIG51bGw7CiAgICB9CiAgICByZXR1cm4gdmFsdWU7CiAgfTsKCiAgRWxlbWVudC5NZXRob2RzLnNldE9wYWNpdHkgPSBmdW5jdGlvbihlbGVtZW50LCB2YWx1ZSkgewogICAgZnVuY3Rpb24gc3RyaXBBbHBoYShmaWx0ZXIpewogICAgICByZXR1cm4gZmlsdGVyLnJlcGxhY2UoL2FscGhhXChbXlwpXSpcKS9naSwnJyk7CiAgICB9CiAgICBlbGVtZW50ID0gJChlbGVtZW50KTsKICAgIHZhciBjdXJyZW50U3R5bGUgPSBlbGVtZW50LmN1cnJlbnRTdHlsZTsKICAgIGlmICgoY3VycmVudFN0eWxlICYmICFjdXJyZW50U3R5bGUuaGFzTGF5b3V0KSB8fAogICAgICAoIWN1cnJlbnRTdHlsZSAmJiBlbGVtZW50LnN0eWxlLnpvb20gPT0gJ25vcm1hbCcpKQogICAgICAgIGVsZW1lbnQuc3R5bGUuem9vbSA9IDE7CgogICAgdmFyIGZpbHRlciA9IGVsZW1lbnQuZ2V0U3R5bGUoJ2ZpbHRlcicpLCBzdHlsZSA9IGVsZW1lbnQuc3R5bGU7CiAgICBpZiAodmFsdWUgPT0gMSB8fCB2YWx1ZSA9PT0gJycpIHsKICAgICAgKGZpbHRlciA9IHN0cmlwQWxwaGEoZmlsdGVyKSkgPwogICAgICAgIHN0eWxlLmZpbHRlciA9IGZpbHRlciA6IHN0eWxlLnJlbW92ZUF0dHJpYnV0ZSgnZmlsdGVyJyk7CiAgICAgIHJldHVybiBlbGVtZW50OwogICAgfSBlbHNlIGlmICh2YWx1ZSA8IDAuMDAwMDEpIHZhbHVlID0gMDsKICAgIHN0eWxlLmZpbHRlciA9IHN0cmlwQWxwaGEoZmlsdGVyKSArCiAgICAgICdhbHBoYShvcGFjaXR5PScgKyAodmFsdWUgKiAxMDApICsgJyknOwogICAgcmV0dXJuIGVsZW1lbnQ7CiAgfTsKCiAgRWxlbWVudC5fYXR0cmlidXRlVHJhbnNsYXRpb25zID0gKGZ1bmN0aW9uKCl7CgogICAgdmFyIGNsYXNzUHJvcCA9ICdjbGFzc05hbWUnLAogICAgICAgIGZvclByb3AgPSAnZm9yJywKICAgICAgICBlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpOwoKICAgIGVsLnNldEF0dHJpYnV0ZShjbGFzc1Byb3AsICd4Jyk7CgogICAgaWYgKGVsLmNsYXNzTmFtZSAhPT0gJ3gnKSB7CiAgICAgIGVsLnNldEF0dHJpYnV0ZSgnY2xhc3MnLCAneCcpOwogICAgICBpZiAoZWwuY2xhc3NOYW1lID09PSAneCcpIHsKICAgICAgICBjbGFzc1Byb3AgPSAnY2xhc3MnOwogICAgICB9CiAgICB9CiAgICBlbCA9IG51bGw7CgogICAgZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsYWJlbCcpOwogICAgZWwuc2V0QXR0cmlidXRlKGZvclByb3AsICd4Jyk7CiAgICBpZiAoZWwuaHRtbEZvciAhPT0gJ3gnKSB7CiAgICAgIGVsLnNldEF0dHJpYnV0ZSgnaHRtbEZvcicsICd4Jyk7CiAgICAgIGlmIChlbC5odG1sRm9yID09PSAneCcpIHsKICAgICAgICBmb3JQcm9wID0gJ2h0bWxGb3InOwogICAgICB9CiAgICB9CiAgICBlbCA9IG51bGw7CgogICAgcmV0dXJuIHsKICAgICAgcmVhZDogewogICAgICAgIG5hbWVzOiB7CiAgICAgICAgICAnY2xhc3MnOiAgICAgIGNsYXNzUHJvcCwKICAgICAgICAgICdjbGFzc05hbWUnOiAgY2xhc3NQcm9wLAogICAgICAgICAgJ2Zvcic6ICAgICAgICBmb3JQcm9wLAogICAgICAgICAgJ2h0bWxGb3InOiAgICBmb3JQcm9wCiAgICAgICAgfSwKICAgICAgICB2YWx1ZXM6IHsKICAgICAgICAgIF9nZXRBdHRyOiBmdW5jdGlvbihlbGVtZW50LCBhdHRyaWJ1dGUpIHsKICAgICAgICAgICAgcmV0dXJuIGVsZW1lbnQuZ2V0QXR0cmlidXRlKGF0dHJpYnV0ZSk7CiAgICAgICAgICB9LAogICAgICAgICAgX2dldEF0dHIyOiBmdW5jdGlvbihlbGVtZW50LCBhdHRyaWJ1dGUpIHsKICAgICAgICAgICAgcmV0dXJuIGVsZW1lbnQuZ2V0QXR0cmlidXRlKGF0dHJpYnV0ZSwgMik7CiAgICAgICAgICB9LAogICAgICAgICAgX2dldEF0dHJOb2RlOiBmdW5jdGlvbihlbGVtZW50LCBhdHRyaWJ1dGUpIHsKICAgICAgICAgICAgdmFyIG5vZGUgPSBlbGVtZW50LmdldEF0dHJpYnV0ZU5vZGUoYXR0cmlidXRlKTsKICAgICAgICAgICAgcmV0dXJuIG5vZGUgPyBub2RlLnZhbHVlIDogIiI7CiAgICAgICAgICB9LAogICAgICAgICAgX2dldEV2OiAoZnVuY3Rpb24oKXsKCiAgICAgICAgICAgIHZhciBlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpLCBmOwogICAgICAgICAgICBlbC5vbmNsaWNrID0gUHJvdG90eXBlLmVtcHR5RnVuY3Rpb247CiAgICAgICAgICAgIHZhciB2YWx1ZSA9IGVsLmdldEF0dHJpYnV0ZSgnb25jbGljaycpOwoKICAgICAgICAgICAgaWYgKFN0cmluZyh2YWx1ZSkuaW5kZXhPZigneycpID4gLTEpIHsKICAgICAgICAgICAgICBmID0gZnVuY3Rpb24oZWxlbWVudCwgYXR0cmlidXRlKSB7CiAgICAgICAgICAgICAgICBhdHRyaWJ1dGUgPSBlbGVtZW50LmdldEF0dHJpYnV0ZShhdHRyaWJ1dGUpOwogICAgICAgICAgICAgICAgaWYgKCFhdHRyaWJ1dGUpIHJldHVybiBudWxsOwogICAgICAgICAgICAgICAgYXR0cmlidXRlID0gYXR0cmlidXRlLnRvU3RyaW5nKCk7CiAgICAgICAgICAgICAgICBhdHRyaWJ1dGUgPSBhdHRyaWJ1dGUuc3BsaXQoJ3snKVsxXTsKICAgICAgICAgICAgICAgIGF0dHJpYnV0ZSA9IGF0dHJpYnV0ZS5zcGxpdCgnfScpWzBdOwogICAgICAgICAgICAgICAgcmV0dXJuIGF0dHJpYnV0ZS5zdHJpcCgpOwogICAgICAgICAgICAgIH07CiAgICAgICAgICAgIH0KICAgICAgICAgICAgZWxzZSBpZiAodmFsdWUgPT09ICcnKSB7CiAgICAgICAgICAgICAgZiA9IGZ1bmN0aW9uKGVsZW1lbnQsIGF0dHJpYnV0ZSkgewogICAgICAgICAgICAgICAgYXR0cmlidXRlID0gZWxlbWVudC5nZXRBdHRyaWJ1dGUoYXR0cmlidXRlKTsKICAgICAgICAgICAgICAgIGlmICghYXR0cmlidXRlKSByZXR1cm4gbnVsbDsKICAgICAgICAgICAgICAgIHJldHVybiBhdHRyaWJ1dGUuc3RyaXAoKTsKICAgICAgICAgICAgICB9OwogICAgICAgICAgICB9CiAgICAgICAgICAgIGVsID0gbnVsbDsKICAgICAgICAgICAgcmV0dXJuIGY7CiAgICAgICAgICB9KSgpLAogICAgICAgICAgX2ZsYWc6IGZ1bmN0aW9uKGVsZW1lbnQsIGF0dHJpYnV0ZSkgewogICAgICAgICAgICByZXR1cm4gJChlbGVtZW50KS5oYXNBdHRyaWJ1dGUoYXR0cmlidXRlKSA/IGF0dHJpYnV0ZSA6IG51bGw7CiAgICAgICAgICB9LAogICAgICAgICAgc3R5bGU6IGZ1bmN0aW9uKGVsZW1lbnQpIHsKICAgICAgICAgICAgcmV0dXJuIGVsZW1lbnQuc3R5bGUuY3NzVGV4dC50b0xvd2VyQ2FzZSgpOwogICAgICAgICAgfSwKICAgICAgICAgIHRpdGxlOiBmdW5jdGlvbihlbGVtZW50KSB7CiAgICAgICAgICAgIHJldHVybiBlbGVtZW50LnRpdGxlOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogICAgfQogIH0pKCk7CgogIEVsZW1lbnQuX2F0dHJpYnV0ZVRyYW5zbGF0aW9ucy53cml0ZSA9IHsKICAgIG5hbWVzOiBPYmplY3QuZXh0ZW5kKHsKICAgICAgY2VsbHBhZGRpbmc6ICdjZWxsUGFkZGluZycsCiAgICAgIGNlbGxzcGFjaW5nOiAnY2VsbFNwYWNpbmcnCiAgICB9LCBFbGVtZW50Ll9hdHRyaWJ1dGVUcmFuc2xhdGlvbnMucmVhZC5uYW1lcyksCiAgICB2YWx1ZXM6IHsKICAgICAgY2hlY2tlZDogZnVuY3Rpb24oZWxlbWVudCwgdmFsdWUpIHsKICAgICAgICBlbGVtZW50LmNoZWNrZWQgPSAhIXZhbHVlOwogICAgICB9LAoKICAgICAgc3R5bGU6IGZ1bmN0aW9uKGVsZW1lbnQsIHZhbHVlKSB7CiAgICAgICAgZWxlbWVudC5zdHlsZS5jc3NUZXh0ID0gdmFsdWUgPyB2YWx1ZSA6ICcnOwogICAgICB9CiAgICB9CiAgfTsKCiAgRWxlbWVudC5fYXR0cmlidXRlVHJhbnNsYXRpb25zLmhhcyA9IHt9OwoKICAkdygnY29sU3BhbiByb3dTcGFuIHZBbGlnbiBkYXRlVGltZSBhY2Nlc3NLZXkgdGFiSW5kZXggJyArCiAgICAgICdlbmNUeXBlIG1heExlbmd0aCByZWFkT25seSBsb25nRGVzYyBmcmFtZUJvcmRlcicpLmVhY2goZnVuY3Rpb24oYXR0cikgewogICAgRWxlbWVudC5fYXR0cmlidXRlVHJhbnNsYXRpb25zLndyaXRlLm5hbWVzW2F0dHIudG9Mb3dlckNhc2UoKV0gPSBhdHRyOwogICAgRWxlbWVudC5fYXR0cmlidXRlVHJhbnNsYXRpb25zLmhhc1thdHRyLnRvTG93ZXJDYXNlKCldID0gYXR0cjsKICB9KTsKCiAgKGZ1bmN0aW9uKHYpIHsKICAgIE9iamVjdC5leHRlbmQodiwgewogICAgICBocmVmOiAgICAgICAgdi5fZ2V0QXR0cjIsCiAgICAgIHNyYzogICAgICAgICB2Ll9nZXRBdHRyMiwKICAgICAgdHlwZTogICAgICAgIHYuX2dldEF0dHIsCiAgICAgIGFjdGlvbjogICAgICB2Ll9nZXRBdHRyTm9kZSwKICAgICAgZGlzYWJsZWQ6ICAgIHYuX2ZsYWcsCiAgICAgIGNoZWNrZWQ6ICAgICB2Ll9mbGFnLAogICAgICByZWFkb25seTogICAgdi5fZmxhZywKICAgICAgbXVsdGlwbGU6ICAgIHYuX2ZsYWcsCiAgICAgIG9ubG9hZDogICAgICB2Ll9nZXRFdiwKICAgICAgb251bmxvYWQ6ICAgIHYuX2dldEV2LAogICAgICBvbmNsaWNrOiAgICAgdi5fZ2V0RXYsCiAgICAgIG9uZGJsY2xpY2s6ICB2Ll9nZXRFdiwKICAgICAgb25tb3VzZWRvd246IHYuX2dldEV2LAogICAgICBvbm1vdXNldXA6ICAgdi5fZ2V0RXYsCiAgICAgIG9ubW91c2VvdmVyOiB2Ll9nZXRFdiwKICAgICAgb25tb3VzZW1vdmU6IHYuX2dldEV2LAogICAgICBvbm1vdXNlb3V0OiAgdi5fZ2V0RXYsCiAgICAgIG9uZm9jdXM6ICAgICB2Ll9nZXRFdiwKICAgICAgb25ibHVyOiAgICAgIHYuX2dldEV2LAogICAgICBvbmtleXByZXNzOiAgdi5fZ2V0RXYsCiAgICAgIG9ua2V5ZG93bjogICB2Ll9nZXRFdiwKICAgICAgb25rZXl1cDogICAgIHYuX2dldEV2LAogICAgICBvbnN1Ym1pdDogICAgdi5fZ2V0RXYsCiAgICAgIG9ucmVzZXQ6ICAgICB2Ll9nZXRFdiwKICAgICAgb25zZWxlY3Q6ICAgIHYuX2dldEV2LAogICAgICBvbmNoYW5nZTogICAgdi5fZ2V0RXYKICAgIH0pOwogIH0pKEVsZW1lbnQuX2F0dHJpYnV0ZVRyYW5zbGF0aW9ucy5yZWFkLnZhbHVlcyk7CgogIGlmIChQcm90b3R5cGUuQnJvd3NlckZlYXR1cmVzLkVsZW1lbnRFeHRlbnNpb25zKSB7CiAgICAoZnVuY3Rpb24oKSB7CiAgICAgIGZ1bmN0aW9uIF9kZXNjZW5kYW50cyhlbGVtZW50KSB7CiAgICAgICAgdmFyIG5vZGVzID0gZWxlbWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgnKicpLCByZXN1bHRzID0gW107CiAgICAgICAgZm9yICh2YXIgaSA9IDAsIG5vZGU7IG5vZGUgPSBub2Rlc1tpXTsgaSsrKQogICAgICAgICAgaWYgKG5vZGUudGFnTmFtZSAhPT0gIiEiKSAvLyBGaWx0ZXIgb3V0IGNvbW1lbnQgbm9kZXMuCiAgICAgICAgICAgIHJlc3VsdHMucHVzaChub2RlKTsKICAgICAgICByZXR1cm4gcmVzdWx0czsKICAgICAgfQoKICAgICAgRWxlbWVudC5NZXRob2RzLmRvd24gPSBmdW5jdGlvbihlbGVtZW50LCBleHByZXNzaW9uLCBpbmRleCkgewogICAgICAgIGVsZW1lbnQgPSAkKGVsZW1lbnQpOwogICAgICAgIGlmIChhcmd1bWVudHMubGVuZ3RoID09IDEpIHJldHVybiBlbGVtZW50LmZpcnN0RGVzY2VuZGFudCgpOwogICAgICAgIHJldHVybiBPYmplY3QuaXNOdW1iZXIoZXhwcmVzc2lvbikgPyBfZGVzY2VuZGFudHMoZWxlbWVudClbZXhwcmVzc2lvbl0gOgogICAgICAgICAgRWxlbWVudC5zZWxlY3QoZWxlbWVudCwgZXhwcmVzc2lvbilbaW5kZXggfHwgMF07CiAgICAgIH0KICAgIH0pKCk7CiAgfQoKfQoKZWxzZSBpZiAoUHJvdG90eXBlLkJyb3dzZXIuR2Vja28gJiYgL3J2OjFcLjhcLjAvLnRlc3QobmF2aWdhdG9yLnVzZXJBZ2VudCkpIHsKICBFbGVtZW50Lk1ldGhvZHMuc2V0T3BhY2l0eSA9IGZ1bmN0aW9uKGVsZW1lbnQsIHZhbHVlKSB7CiAgICBlbGVtZW50ID0gJChlbGVtZW50KTsKICAgIGVsZW1lbnQuc3R5bGUub3BhY2l0eSA9ICh2YWx1ZSA9PSAxKSA/IDAuOTk5OTk5IDoKICAgICAgKHZhbHVlID09PSAnJykgPyAnJyA6ICh2YWx1ZSA8IDAuMDAwMDEpID8gMCA6IHZhbHVlOwogICAgcmV0dXJuIGVsZW1lbnQ7CiAgfTsKfQoKZWxzZSBpZiAoUHJvdG90eXBlLkJyb3dzZXIuV2ViS2l0KSB7CiAgRWxlbWVudC5NZXRob2RzLnNldE9wYWNpdHkgPSBmdW5jdGlvbihlbGVtZW50LCB2YWx1ZSkgewogICAgZWxlbWVudCA9ICQoZWxlbWVudCk7CiAgICBlbGVtZW50LnN0eWxlLm9wYWNpdHkgPSAodmFsdWUgPT0gMSB8fCB2YWx1ZSA9PT0gJycpID8gJycgOgogICAgICAodmFsdWUgPCAwLjAwMDAxKSA/IDAgOiB2YWx1ZTsKCiAgICBpZiAodmFsdWUgPT0gMSkKICAgICAgaWYgKGVsZW1lbnQudGFnTmFtZS50b1VwcGVyQ2FzZSgpID09ICdJTUcnICYmIGVsZW1lbnQud2lkdGgpIHsKICAgICAgICBlbGVtZW50LndpZHRoKys7IGVsZW1lbnQud2lkdGgtLTsKICAgICAgfSBlbHNlIHRyeSB7CiAgICAgICAgdmFyIG4gPSBkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZSgnICcpOwogICAgICAgIGVsZW1lbnQuYXBwZW5kQ2hpbGQobik7CiAgICAgICAgZWxlbWVudC5yZW1vdmVDaGlsZChuKTsKICAgICAgfSBjYXRjaCAoZSkgeyB9CgogICAgcmV0dXJuIGVsZW1lbnQ7CiAgfTsKfQoKaWYgKCdvdXRlckhUTUwnIGluIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudCkgewogIEVsZW1lbnQuTWV0aG9kcy5yZXBsYWNlID0gZnVuY3Rpb24oZWxlbWVudCwgY29udGVudCkgewogICAgZWxlbWVudCA9ICQoZWxlbWVudCk7CgogICAgaWYgKGNvbnRlbnQgJiYgY29udGVudC50b0VsZW1lbnQpIGNvbnRlbnQgPSBjb250ZW50LnRvRWxlbWVudCgpOwogICAgaWYgKE9iamVjdC5pc0VsZW1lbnQoY29udGVudCkpIHsKICAgICAgZWxlbWVudC5wYXJlbnROb2RlLnJlcGxhY2VDaGlsZChjb250ZW50LCBlbGVtZW50KTsKICAgICAgcmV0dXJuIGVsZW1lbnQ7CiAgICB9CgogICAgY29udGVudCA9IE9iamVjdC50b0hUTUwoY29udGVudCk7CiAgICB2YXIgcGFyZW50ID0gZWxlbWVudC5wYXJlbnROb2RlLCB0YWdOYW1lID0gcGFyZW50LnRhZ05hbWUudG9VcHBlckNhc2UoKTsKCiAgICBpZiAoRWxlbWVudC5faW5zZXJ0aW9uVHJhbnNsYXRpb25zLnRhZ3NbdGFnTmFtZV0pIHsKICAgICAgdmFyIG5leHRTaWJsaW5nID0gZWxlbWVudC5uZXh0KCksCiAgICAgICAgICBmcmFnbWVudHMgPSBFbGVtZW50Ll9nZXRDb250ZW50RnJvbUFub255bW91c0VsZW1lbnQodGFnTmFtZSwgY29udGVudC5zdHJpcFNjcmlwdHMoKSk7CiAgICAgIHBhcmVudC5yZW1vdmVDaGlsZChlbGVtZW50KTsKICAgICAgaWYgKG5leHRTaWJsaW5nKQogICAgICAgIGZyYWdtZW50cy5lYWNoKGZ1bmN0aW9uKG5vZGUpIHsgcGFyZW50Lmluc2VydEJlZm9yZShub2RlLCBuZXh0U2libGluZykgfSk7CiAgICAgIGVsc2UKICAgICAgICBmcmFnbWVudHMuZWFjaChmdW5jdGlvbihub2RlKSB7IHBhcmVudC5hcHBlbmRDaGlsZChub2RlKSB9KTsKICAgIH0KICAgIGVsc2UgZWxlbWVudC5vdXRlckhUTUwgPSBjb250ZW50LnN0cmlwU2NyaXB0cygpOwoKICAgIGNvbnRlbnQuZXZhbFNjcmlwdHMuYmluZChjb250ZW50KS5kZWZlcigpOwogICAgcmV0dXJuIGVsZW1lbnQ7CiAgfTsKfQoKRWxlbWVudC5fcmV0dXJuT2Zmc2V0ID0gZnVuY3Rpb24obCwgdCkgewogIHZhciByZXN1bHQgPSBbbCwgdF07CiAgcmVzdWx0LmxlZnQgPSBsOwogIHJlc3VsdC50b3AgPSB0OwogIHJldHVybiByZXN1bHQ7Cn07CgpFbGVtZW50Ll9nZXRDb250ZW50RnJvbUFub255bW91c0VsZW1lbnQgPSBmdW5jdGlvbih0YWdOYW1lLCBodG1sLCBmb3JjZSkgewogIHZhciBkaXYgPSBuZXcgRWxlbWVudCgnZGl2JyksCiAgICAgIHQgPSBFbGVtZW50Ll9pbnNlcnRpb25UcmFuc2xhdGlvbnMudGFnc1t0YWdOYW1lXTsKCiAgdmFyIHdvcmthcm91bmQgPSBmYWxzZTsKICBpZiAodCkgd29ya2Fyb3VuZCA9IHRydWU7CiAgZWxzZSBpZiAoZm9yY2UpIHsKICAgIHdvcmthcm91bmQgPSB0cnVlOwogICAgdCA9IFsnJywgJycsIDBdOwogIH0KCiAgaWYgKHdvcmthcm91bmQpIHsKICAgIGRpdi5pbm5lckhUTUwgPSAnJm5ic3A7JyArIHRbMF0gKyBodG1sICsgdFsxXTsKICAgIGRpdi5yZW1vdmVDaGlsZChkaXYuZmlyc3RDaGlsZCk7CiAgICBmb3IgKHZhciBpID0gdFsyXTsgaS0tOyApIHsKICAgICAgZGl2ID0gZGl2LmZpcnN0Q2hpbGQ7CiAgICB9CiAgfQogIGVsc2UgewogICAgZGl2LmlubmVySFRNTCA9IGh0bWw7CiAgfQogIHJldHVybiAkQShkaXYuY2hpbGROb2Rlcyk7Cn07CgpFbGVtZW50Ll9pbnNlcnRpb25UcmFuc2xhdGlvbnMgPSB7CiAgYmVmb3JlOiBmdW5jdGlvbihlbGVtZW50LCBub2RlKSB7CiAgICBlbGVtZW50LnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKG5vZGUsIGVsZW1lbnQpOwogIH0sCiAgdG9wOiBmdW5jdGlvbihlbGVtZW50LCBub2RlKSB7CiAgICBlbGVtZW50Lmluc2VydEJlZm9yZShub2RlLCBlbGVtZW50LmZpcnN0Q2hpbGQpOwogIH0sCiAgYm90dG9tOiBmdW5jdGlvbihlbGVtZW50LCBub2RlKSB7CiAgICBlbGVtZW50LmFwcGVuZENoaWxkKG5vZGUpOwogIH0sCiAgYWZ0ZXI6IGZ1bmN0aW9uKGVsZW1lbnQsIG5vZGUpIHsKICAgIGVsZW1lbnQucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUobm9kZSwgZWxlbWVudC5uZXh0U2libGluZyk7CiAgfSwKICB0YWdzOiB7CiAgICBUQUJMRTogIFsnPHRhYmxlPicsICAgICAgICAgICAgICAgICc8L3RhYmxlPicsICAgICAgICAgICAgICAgICAgIDFdLAogICAgVEJPRFk6ICBbJzx0YWJsZT48dGJvZHk+JywgICAgICAgICAnPC90Ym9keT48L3RhYmxlPicsICAgICAgICAgICAyXSwKICAgIFRSOiAgICAgWyc8dGFibGU+PHRib2R5Pjx0cj4nLCAgICAgJzwvdHI+PC90Ym9keT48L3RhYmxlPicsICAgICAgM10sCiAgICBURDogICAgIFsnPHRhYmxlPjx0Ym9keT48dHI+PHRkPicsICc8L3RkPjwvdHI+PC90Ym9keT48L3RhYmxlPicsIDRdLAogICAgU0VMRUNUOiBbJzxzZWxlY3Q+JywgICAgICAgICAgICAgICAnPC9zZWxlY3Q+JywgICAgICAgICAgICAgICAgICAxXQogIH0KfTsKCihmdW5jdGlvbigpIHsKICB2YXIgdGFncyA9IEVsZW1lbnQuX2luc2VydGlvblRyYW5zbGF0aW9ucy50YWdzOwogIE9iamVjdC5leHRlbmQodGFncywgewogICAgVEhFQUQ6IHRhZ3MuVEJPRFksCiAgICBURk9PVDogdGFncy5UQk9EWSwKICAgIFRIOiAgICB0YWdzLlRECiAgfSk7Cn0pKCk7CgpFbGVtZW50Lk1ldGhvZHMuU2ltdWxhdGVkID0gewogIGhhc0F0dHJpYnV0ZTogZnVuY3Rpb24oZWxlbWVudCwgYXR0cmlidXRlKSB7CiAgICBhdHRyaWJ1dGUgPSBFbGVtZW50Ll9hdHRyaWJ1dGVUcmFuc2xhdGlvbnMuaGFzW2F0dHJpYnV0ZV0gfHwgYXR0cmlidXRlOwogICAgdmFyIG5vZGUgPSAkKGVsZW1lbnQpLmdldEF0dHJpYnV0ZU5vZGUoYXR0cmlidXRlKTsKICAgIHJldHVybiAhIShub2RlICYmIG5vZGUuc3BlY2lmaWVkKTsKICB9Cn07CgpFbGVtZW50Lk1ldGhvZHMuQnlUYWcgPSB7IH07CgpPYmplY3QuZXh0ZW5kKEVsZW1lbnQsIEVsZW1lbnQuTWV0aG9kcyk7CgooZnVuY3Rpb24oZGl2KSB7CgogIGlmICghUHJvdG90eXBlLkJyb3dzZXJGZWF0dXJlcy5FbGVtZW50RXh0ZW5zaW9ucyAmJiBkaXZbJ19fcHJvdG9fXyddKSB7CiAgICB3aW5kb3cuSFRNTEVsZW1lbnQgPSB7IH07CiAgICB3aW5kb3cuSFRNTEVsZW1lbnQucHJvdG90eXBlID0gZGl2WydfX3Byb3RvX18nXTsKICAgIFByb3RvdHlwZS5Ccm93c2VyRmVhdHVyZXMuRWxlbWVudEV4dGVuc2lvbnMgPSB0cnVlOwogIH0KCiAgZGl2ID0gbnVsbDsKCn0pKGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpKTsKCkVsZW1lbnQuZXh0ZW5kID0gKGZ1bmN0aW9uKCkgewoKICBmdW5jdGlvbiBjaGVja0RlZmljaWVuY3kodGFnTmFtZSkgewogICAgaWYgKHR5cGVvZiB3aW5kb3cuRWxlbWVudCAhPSAndW5kZWZpbmVkJykgewogICAgICB2YXIgcHJvdG8gPSB3aW5kb3cuRWxlbWVudC5wcm90b3R5cGU7CiAgICAgIGlmIChwcm90bykgewogICAgICAgIHZhciBpZCA9ICdfJyArIChNYXRoLnJhbmRvbSgpKycnKS5zbGljZSgyKSwKICAgICAgICAgICAgZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KHRhZ05hbWUpOwogICAgICAgIHByb3RvW2lkXSA9ICd4JzsKICAgICAgICB2YXIgaXNCdWdneSA9IChlbFtpZF0gIT09ICd4Jyk7CiAgICAgICAgZGVsZXRlIHByb3RvW2lkXTsKICAgICAgICBlbCA9IG51bGw7CiAgICAgICAgcmV0dXJuIGlzQnVnZ3k7CiAgICAgIH0KICAgIH0KICAgIHJldHVybiBmYWxzZTsKICB9CgogIGZ1bmN0aW9uIGV4dGVuZEVsZW1lbnRXaXRoKGVsZW1lbnQsIG1ldGhvZHMpIHsKICAgIGZvciAodmFyIHByb3BlcnR5IGluIG1ldGhvZHMpIHsKICAgICAgdmFyIHZhbHVlID0gbWV0aG9kc1twcm9wZXJ0eV07CiAgICAgIGlmIChPYmplY3QuaXNGdW5jdGlvbih2YWx1ZSkgJiYgIShwcm9wZXJ0eSBpbiBlbGVtZW50KSkKICAgICAgICBlbGVtZW50W3Byb3BlcnR5XSA9IHZhbHVlLm1ldGhvZGl6ZSgpOwogICAgfQogIH0KCiAgdmFyIEhUTUxPQkpFQ1RFTEVNRU5UX1BST1RPVFlQRV9CVUdHWSA9IGNoZWNrRGVmaWNpZW5jeSgnb2JqZWN0Jyk7CgogIGlmIChQcm90b3R5cGUuQnJvd3NlckZlYXR1cmVzLlNwZWNpZmljRWxlbWVudEV4dGVuc2lvbnMpIHsKICAgIGlmIChIVE1MT0JKRUNURUxFTUVOVF9QUk9UT1RZUEVfQlVHR1kpIHsKICAgICAgcmV0dXJuIGZ1bmN0aW9uKGVsZW1lbnQpIHsKICAgICAgICBpZiAoZWxlbWVudCAmJiB0eXBlb2YgZWxlbWVudC5fZXh0ZW5kZWRCeVByb3RvdHlwZSA9PSAndW5kZWZpbmVkJykgewogICAgICAgICAgdmFyIHQgPSBlbGVtZW50LnRhZ05hbWU7CiAgICAgICAgICBpZiAodCAmJiAoL14oPzpvYmplY3R8YXBwbGV0fGVtYmVkKSQvaS50ZXN0KHQpKSkgewogICAgICAgICAgICBleHRlbmRFbGVtZW50V2l0aChlbGVtZW50LCBFbGVtZW50Lk1ldGhvZHMpOwogICAgICAgICAgICBleHRlbmRFbGVtZW50V2l0aChlbGVtZW50LCBFbGVtZW50Lk1ldGhvZHMuU2ltdWxhdGVkKTsKICAgICAgICAgICAgZXh0ZW5kRWxlbWVudFdpdGgoZWxlbWVudCwgRWxlbWVudC5NZXRob2RzLkJ5VGFnW3QudG9VcHBlckNhc2UoKV0pOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgICByZXR1cm4gZWxlbWVudDsKICAgICAgfQogICAgfQogICAgcmV0dXJuIFByb3RvdHlwZS5LOwogIH0KCiAgdmFyIE1ldGhvZHMgPSB7IH0sIEJ5VGFnID0gRWxlbWVudC5NZXRob2RzLkJ5VGFnOwoKICB2YXIgZXh0ZW5kID0gT2JqZWN0LmV4dGVuZChmdW5jdGlvbihlbGVtZW50KSB7CiAgICBpZiAoIWVsZW1lbnQgfHwgdHlwZW9mIGVsZW1lbnQuX2V4dGVuZGVkQnlQcm90b3R5cGUgIT0gJ3VuZGVmaW5lZCcgfHwKICAgICAgICBlbGVtZW50Lm5vZGVUeXBlICE9IDEgfHwgZWxlbWVudCA9PSB3aW5kb3cpIHJldHVybiBlbGVtZW50OwoKICAgIHZhciBtZXRob2RzID0gT2JqZWN0LmNsb25lKE1ldGhvZHMpLAogICAgICAgIHRhZ05hbWUgPSBlbGVtZW50LnRhZ05hbWUudG9VcHBlckNhc2UoKTsKCiAgICBpZiAoQnlUYWdbdGFnTmFtZV0pIE9iamVjdC5leHRlbmQobWV0aG9kcywgQnlUYWdbdGFnTmFtZV0pOwoKICAgIGV4dGVuZEVsZW1lbnRXaXRoKGVsZW1lbnQsIG1ldGhvZHMpOwoKICAgIGVsZW1lbnQuX2V4dGVuZGVkQnlQcm90b3R5cGUgPSBQcm90b3R5cGUuZW1wdHlGdW5jdGlvbjsKICAgIHJldHVybiBlbGVtZW50OwoKICB9LCB7CiAgICByZWZyZXNoOiBmdW5jdGlvbigpIHsKICAgICAgaWYgKCFQcm90b3R5cGUuQnJvd3NlckZlYXR1cmVzLkVsZW1lbnRFeHRlbnNpb25zKSB7CiAgICAgICAgT2JqZWN0LmV4dGVuZChNZXRob2RzLCBFbGVtZW50Lk1ldGhvZHMpOwogICAgICAgIE9iamVjdC5leHRlbmQoTWV0aG9kcywgRWxlbWVudC5NZXRob2RzLlNpbXVsYXRlZCk7CiAgICAgIH0KICAgIH0KICB9KTsKCiAgZXh0ZW5kLnJlZnJlc2goKTsKICByZXR1cm4gZXh0ZW5kOwp9KSgpOwoKaWYgKGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5oYXNBdHRyaWJ1dGUpIHsKICBFbGVtZW50Lmhhc0F0dHJpYnV0ZSA9IGZ1bmN0aW9uKGVsZW1lbnQsIGF0dHJpYnV0ZSkgewogICAgcmV0dXJuIGVsZW1lbnQuaGFzQXR0cmlidXRlKGF0dHJpYnV0ZSk7CiAgfTsKfQplbHNlIHsKICBFbGVtZW50Lmhhc0F0dHJpYnV0ZSA9IEVsZW1lbnQuTWV0aG9kcy5TaW11bGF0ZWQuaGFzQXR0cmlidXRlOwp9CgpFbGVtZW50LmFkZE1ldGhvZHMgPSBmdW5jdGlvbihtZXRob2RzKSB7CiAgdmFyIEYgPSBQcm90b3R5cGUuQnJvd3NlckZlYXR1cmVzLCBUID0gRWxlbWVudC5NZXRob2RzLkJ5VGFnOwoKICBpZiAoIW1ldGhvZHMpIHsKICAgIE9iamVjdC5leHRlbmQoRm9ybSwgRm9ybS5NZXRob2RzKTsKICAgIE9iamVjdC5leHRlbmQoRm9ybS5FbGVtZW50LCBGb3JtLkVsZW1lbnQuTWV0aG9kcyk7CiAgICBPYmplY3QuZXh0ZW5kKEVsZW1lbnQuTWV0aG9kcy5CeVRhZywgewogICAgICAiRk9STSI6ICAgICBPYmplY3QuY2xvbmUoRm9ybS5NZXRob2RzKSwKICAgICAgIklOUFVUIjogICAgT2JqZWN0LmNsb25lKEZvcm0uRWxlbWVudC5NZXRob2RzKSwKICAgICAgIlNFTEVDVCI6ICAgT2JqZWN0LmNsb25lKEZvcm0uRWxlbWVudC5NZXRob2RzKSwKICAgICAgIlRFWFRBUkVBIjogT2JqZWN0LmNsb25lKEZvcm0uRWxlbWVudC5NZXRob2RzKSwKICAgICAgIkJVVFRPTiI6ICAgT2JqZWN0LmNsb25lKEZvcm0uRWxlbWVudC5NZXRob2RzKQogICAgfSk7CiAgfQoKICBpZiAoYXJndW1lbnRzLmxlbmd0aCA9PSAyKSB7CiAgICB2YXIgdGFnTmFtZSA9IG1ldGhvZHM7CiAgICBtZXRob2RzID0gYXJndW1lbnRzWzFdOwogIH0KCiAgaWYgKCF0YWdOYW1lKSBPYmplY3QuZXh0ZW5kKEVsZW1lbnQuTWV0aG9kcywgbWV0aG9kcyB8fCB7IH0pOwogIGVsc2UgewogICAgaWYgKE9iamVjdC5pc0FycmF5KHRhZ05hbWUpKSB0YWdOYW1lLmVhY2goZXh0ZW5kKTsKICAgIGVsc2UgZXh0ZW5kKHRhZ05hbWUpOwogIH0KCiAgZnVuY3Rpb24gZXh0ZW5kKHRhZ05hbWUpIHsKICAgIHRhZ05hbWUgPSB0YWdOYW1lLnRvVXBwZXJDYXNlKCk7CiAgICBpZiAoIUVsZW1lbnQuTWV0aG9kcy5CeVRhZ1t0YWdOYW1lXSkKICAgICAgRWxlbWVudC5NZXRob2RzLkJ5VGFnW3RhZ05hbWVdID0geyB9OwogICAgT2JqZWN0LmV4dGVuZChFbGVtZW50Lk1ldGhvZHMuQnlUYWdbdGFnTmFtZV0sIG1ldGhvZHMpOwogIH0KCiAgZnVuY3Rpb24gY29weShtZXRob2RzLCBkZXN0aW5hdGlvbiwgb25seUlmQWJzZW50KSB7CiAgICBvbmx5SWZBYnNlbnQgPSBvbmx5SWZBYnNlbnQgfHwgZmFsc2U7CiAgICBmb3IgKHZhciBwcm9wZXJ0eSBpbiBtZXRob2RzKSB7CiAgICAgIHZhciB2YWx1ZSA9IG1ldGhvZHNbcHJvcGVydHldOwogICAgICBpZiAoIU9iamVjdC5pc0Z1bmN0aW9uKHZhbHVlKSkgY29udGludWU7CiAgICAgIGlmICghb25seUlmQWJzZW50IHx8ICEocHJvcGVydHkgaW4gZGVzdGluYXRpb24pKQogICAgICAgIGRlc3RpbmF0aW9uW3Byb3BlcnR5XSA9IHZhbHVlLm1ldGhvZGl6ZSgpOwogICAgfQogIH0KCiAgZnVuY3Rpb24gZmluZERPTUNsYXNzKHRhZ05hbWUpIHsKICAgIHZhciBrbGFzczsKICAgIHZhciB0cmFucyA9IHsKICAgICAgIk9QVEdST1VQIjogIk9wdEdyb3VwIiwgIlRFWFRBUkVBIjogIlRleHRBcmVhIiwgIlAiOiAiUGFyYWdyYXBoIiwKICAgICAgIkZJRUxEU0VUIjogIkZpZWxkU2V0IiwgIlVMIjogIlVMaXN0IiwgIk9MIjogIk9MaXN0IiwgIkRMIjogIkRMaXN0IiwKICAgICAgIkRJUiI6ICJEaXJlY3RvcnkiLCAiSDEiOiAiSGVhZGluZyIsICJIMiI6ICJIZWFkaW5nIiwgIkgzIjogIkhlYWRpbmciLAogICAgICAiSDQiOiAiSGVhZGluZyIsICJINSI6ICJIZWFkaW5nIiwgIkg2IjogIkhlYWRpbmciLCAiUSI6ICJRdW90ZSIsCiAgICAgICJJTlMiOiAiTW9kIiwgIkRFTCI6ICJNb2QiLCAiQSI6ICJBbmNob3IiLCAiSU1HIjogIkltYWdlIiwgIkNBUFRJT04iOgogICAgICAiVGFibGVDYXB0aW9uIiwgIkNPTCI6ICJUYWJsZUNvbCIsICJDT0xHUk9VUCI6ICJUYWJsZUNvbCIsICJUSEVBRCI6CiAgICAgICJUYWJsZVNlY3Rpb24iLCAiVEZPT1QiOiAiVGFibGVTZWN0aW9uIiwgIlRCT0RZIjogIlRhYmxlU2VjdGlvbiIsICJUUiI6CiAgICAgICJUYWJsZVJvdyIsICJUSCI6ICJUYWJsZUNlbGwiLCAiVEQiOiAiVGFibGVDZWxsIiwgIkZSQU1FU0VUIjoKICAgICAgIkZyYW1lU2V0IiwgIklGUkFNRSI6ICJJRnJhbWUiCiAgICB9OwogICAgaWYgKHRyYW5zW3RhZ05hbWVdKSBrbGFzcyA9ICdIVE1MJyArIHRyYW5zW3RhZ05hbWVdICsgJ0VsZW1lbnQnOwogICAgaWYgKHdpbmRvd1trbGFzc10pIHJldHVybiB3aW5kb3dba2xhc3NdOwogICAga2xhc3MgPSAnSFRNTCcgKyB0YWdOYW1lICsgJ0VsZW1lbnQnOwogICAgaWYgKHdpbmRvd1trbGFzc10pIHJldHVybiB3aW5kb3dba2xhc3NdOwogICAga2xhc3MgPSAnSFRNTCcgKyB0YWdOYW1lLmNhcGl0YWxpemUoKSArICdFbGVtZW50JzsKICAgIGlmICh3aW5kb3dba2xhc3NdKSByZXR1cm4gd2luZG93W2tsYXNzXTsKCiAgICB2YXIgZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQodGFnTmFtZSksCiAgICAgICAgcHJvdG8gPSBlbGVtZW50WydfX3Byb3RvX18nXSB8fCBlbGVtZW50LmNvbnN0cnVjdG9yLnByb3RvdHlwZTsKCiAgICBlbGVtZW50ID0gbnVsbDsKICAgIHJldHVybiBwcm90bzsKICB9CgogIHZhciBlbGVtZW50UHJvdG90eXBlID0gd2luZG93LkhUTUxFbGVtZW50ID8gSFRNTEVsZW1lbnQucHJvdG90eXBlIDoKICAgRWxlbWVudC5wcm90b3R5cGU7CgogIGlmIChGLkVsZW1lbnRFeHRlbnNpb25zKSB7CiAgICBjb3B5KEVsZW1lbnQuTWV0aG9kcywgZWxlbWVudFByb3RvdHlwZSk7CiAgICBjb3B5KEVsZW1lbnQuTWV0aG9kcy5TaW11bGF0ZWQsIGVsZW1lbnRQcm90b3R5cGUsIHRydWUpOwogIH0KCiAgaWYgKEYuU3BlY2lmaWNFbGVtZW50RXh0ZW5zaW9ucykgewogICAgZm9yICh2YXIgdGFnIGluIEVsZW1lbnQuTWV0aG9kcy5CeVRhZykgewogICAgICB2YXIga2xhc3MgPSBmaW5kRE9NQ2xhc3ModGFnKTsKICAgICAgaWYgKE9iamVjdC5pc1VuZGVmaW5lZChrbGFzcykpIGNvbnRpbnVlOwogICAgICBjb3B5KFRbdGFnXSwga2xhc3MucHJvdG90eXBlKTsKICAgIH0KICB9CgogIE9iamVjdC5leHRlbmQoRWxlbWVudCwgRWxlbWVudC5NZXRob2RzKTsKICBkZWxldGUgRWxlbWVudC5CeVRhZzsKCiAgaWYgKEVsZW1lbnQuZXh0ZW5kLnJlZnJlc2gpIEVsZW1lbnQuZXh0ZW5kLnJlZnJlc2goKTsKICBFbGVtZW50LmNhY2hlID0geyB9Owp9OwoKCmRvY3VtZW50LnZpZXdwb3J0ID0gewoKICBnZXREaW1lbnNpb25zOiBmdW5jdGlvbigpIHsKICAgIHJldHVybiB7IHdpZHRoOiB0aGlzLmdldFdpZHRoKCksIGhlaWdodDogdGhpcy5nZXRIZWlnaHQoKSB9OwogIH0sCgogIGdldFNjcm9sbE9mZnNldHM6IGZ1bmN0aW9uKCkgewogICAgcmV0dXJuIEVsZW1lbnQuX3JldHVybk9mZnNldCgKICAgICAgd2luZG93LnBhZ2VYT2Zmc2V0IHx8IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zY3JvbGxMZWZ0IHx8IGRvY3VtZW50LmJvZHkuc2Nyb2xsTGVmdCwKICAgICAgd2luZG93LnBhZ2VZT2Zmc2V0IHx8IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zY3JvbGxUb3AgIHx8IGRvY3VtZW50LmJvZHkuc2Nyb2xsVG9wKTsKICB9Cn07CgooZnVuY3Rpb24odmlld3BvcnQpIHsKICB2YXIgQiA9IFByb3RvdHlwZS5Ccm93c2VyLCBkb2MgPSBkb2N1bWVudCwgZWxlbWVudCwgcHJvcGVydHkgPSB7fTsKCiAgZnVuY3Rpb24gZ2V0Um9vdEVsZW1lbnQoKSB7CiAgICBpZiAoQi5XZWJLaXQgJiYgIWRvYy5ldmFsdWF0ZSkKICAgICAgcmV0dXJuIGRvY3VtZW50OwoKICAgIGlmIChCLk9wZXJhICYmIHdpbmRvdy5wYXJzZUZsb2F0KHdpbmRvdy5vcGVyYS52ZXJzaW9uKCkpIDwgOS41KQogICAgICByZXR1cm4gZG9jdW1lbnQuYm9keTsKCiAgICByZXR1cm4gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50OwogIH0KCiAgZnVuY3Rpb24gZGVmaW5lKEQpIHsKICAgIGlmICghZWxlbWVudCkgZWxlbWVudCA9IGdldFJvb3RFbGVtZW50KCk7CgogICAgcHJvcGVydHlbRF0gPSAnY2xpZW50JyArIEQ7CgogICAgdmlld3BvcnRbJ2dldCcgKyBEXSA9IGZ1bmN0aW9uKCkgeyByZXR1cm4gZWxlbWVudFtwcm9wZXJ0eVtEXV0gfTsKICAgIHJldHVybiB2aWV3cG9ydFsnZ2V0JyArIERdKCk7CiAgfQoKICB2aWV3cG9ydC5nZXRXaWR0aCAgPSBkZWZpbmUuY3VycnkoJ1dpZHRoJyk7CgogIHZpZXdwb3J0LmdldEhlaWdodCA9IGRlZmluZS5jdXJyeSgnSGVpZ2h0Jyk7Cn0pKGRvY3VtZW50LnZpZXdwb3J0KTsKCgpFbGVtZW50LlN0b3JhZ2UgPSB7CiAgVUlEOiAxCn07CgpFbGVtZW50LmFkZE1ldGhvZHMoewogIGdldFN0b3JhZ2U6IGZ1bmN0aW9uKGVsZW1lbnQpIHsKICAgIGlmICghKGVsZW1lbnQgPSAkKGVsZW1lbnQpKSkgcmV0dXJuOwoKICAgIHZhciB1aWQ7CiAgICBpZiAoZWxlbWVudCA9PT0gd2luZG93KSB7CiAgICAgIHVpZCA9IDA7CiAgICB9IGVsc2UgewogICAgICBpZiAodHlwZW9mIGVsZW1lbnQuX3Byb3RvdHlwZVVJRCA9PT0gInVuZGVmaW5lZCIpCiAgICAgICAgZWxlbWVudC5fcHJvdG90eXBlVUlEID0gRWxlbWVudC5TdG9yYWdlLlVJRCsrOwogICAgICB1aWQgPSBlbGVtZW50Ll9wcm90b3R5cGVVSUQ7CiAgICB9CgogICAgaWYgKCFFbGVtZW50LlN0b3JhZ2VbdWlkXSkKICAgICAgRWxlbWVudC5TdG9yYWdlW3VpZF0gPSAkSCgpOwoKICAgIHJldHVybiBFbGVtZW50LlN0b3JhZ2VbdWlkXTsKICB9LAoKICBzdG9yZTogZnVuY3Rpb24oZWxlbWVudCwga2V5LCB2YWx1ZSkgewogICAgaWYgKCEoZWxlbWVudCA9ICQoZWxlbWVudCkpKSByZXR1cm47CgogICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPT09IDIpIHsKICAgICAgRWxlbWVudC5nZXRTdG9yYWdlKGVsZW1lbnQpLnVwZGF0ZShrZXkpOwogICAgfSBlbHNlIHsKICAgICAgRWxlbWVudC5nZXRTdG9yYWdlKGVsZW1lbnQpLnNldChrZXksIHZhbHVlKTsKICAgIH0KCiAgICByZXR1cm4gZWxlbWVudDsKICB9LAoKICByZXRyaWV2ZTogZnVuY3Rpb24oZWxlbWVudCwga2V5LCBkZWZhdWx0VmFsdWUpIHsKICAgIGlmICghKGVsZW1lbnQgPSAkKGVsZW1lbnQpKSkgcmV0dXJuOwogICAgdmFyIGhhc2ggPSBFbGVtZW50LmdldFN0b3JhZ2UoZWxlbWVudCksIHZhbHVlID0gaGFzaC5nZXQoa2V5KTsKCiAgICBpZiAoT2JqZWN0LmlzVW5kZWZpbmVkKHZhbHVlKSkgewogICAgICBoYXNoLnNldChrZXksIGRlZmF1bHRWYWx1ZSk7CiAgICAgIHZhbHVlID0gZGVmYXVsdFZhbHVlOwogICAgfQoKICAgIHJldHVybiB2YWx1ZTsKICB9LAoKICBjbG9uZTogZnVuY3Rpb24oZWxlbWVudCwgZGVlcCkgewogICAgaWYgKCEoZWxlbWVudCA9ICQoZWxlbWVudCkpKSByZXR1cm47CiAgICB2YXIgY2xvbmUgPSBlbGVtZW50LmNsb25lTm9kZShkZWVwKTsKICAgIGNsb25lLl9wcm90b3R5cGVVSUQgPSB2b2lkIDA7CiAgICBpZiAoZGVlcCkgewogICAgICB2YXIgZGVzY2VuZGFudHMgPSBFbGVtZW50LnNlbGVjdChjbG9uZSwgJyonKSwKICAgICAgICAgIGkgPSBkZXNjZW5kYW50cy5sZW5ndGg7CiAgICAgIHdoaWxlIChpLS0pIHsKICAgICAgICBkZXNjZW5kYW50c1tpXS5fcHJvdG90eXBlVUlEID0gdm9pZCAwOwogICAgICB9CiAgICB9CiAgICByZXR1cm4gRWxlbWVudC5leHRlbmQoY2xvbmUpOwogIH0sCgogIHB1cmdlOiBmdW5jdGlvbihlbGVtZW50KSB7CiAgICBpZiAoIShlbGVtZW50ID0gJChlbGVtZW50KSkpIHJldHVybjsKICAgIHZhciBwdXJnZUVsZW1lbnQgPSBFbGVtZW50Ll9wdXJnZUVsZW1lbnQ7CgogICAgcHVyZ2VFbGVtZW50KGVsZW1lbnQpOwoKICAgIHZhciBkZXNjZW5kYW50cyA9IGVsZW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJyonKSwKICAgICBpID0gZGVzY2VuZGFudHMubGVuZ3RoOwoKICAgIHdoaWxlIChpLS0pIHB1cmdlRWxlbWVudChkZXNjZW5kYW50c1tpXSk7CgogICAgcmV0dXJuIG51bGw7CiAgfQp9KTsKCihmdW5jdGlvbigpIHsKCiAgZnVuY3Rpb24gdG9EZWNpbWFsKHBjdFN0cmluZykgewogICAgdmFyIG1hdGNoID0gcGN0U3RyaW5nLm1hdGNoKC9eKFxkKyklPyQvaSk7CiAgICBpZiAoIW1hdGNoKSByZXR1cm4gbnVsbDsKICAgIHJldHVybiAoTnVtYmVyKG1hdGNoWzFdKSAvIDEwMCk7CiAgfQoKICBmdW5jdGlvbiBnZXRQaXhlbFZhbHVlKHZhbHVlLCBwcm9wZXJ0eSwgY29udGV4dCkgewogICAgdmFyIGVsZW1lbnQgPSBudWxsOwogICAgaWYgKE9iamVjdC5pc0VsZW1lbnQodmFsdWUpKSB7CiAgICAgIGVsZW1lbnQgPSB2YWx1ZTsKICAgICAgdmFsdWUgPSBlbGVtZW50LmdldFN0eWxlKHByb3BlcnR5KTsKICAgIH0KCiAgICBpZiAodmFsdWUgPT09IG51bGwpIHsKICAgICAgcmV0dXJuIG51bGw7CiAgICB9CgogICAgaWYgKCgvXig/Oi0pP1xkKyhcLlxkKyk/KHB4KT8kL2kpLnRlc3QodmFsdWUpKSB7CiAgICAgIHJldHVybiB3aW5kb3cucGFyc2VGbG9hdCh2YWx1ZSk7CiAgICB9CgogICAgdmFyIGlzUGVyY2VudGFnZSA9IHZhbHVlLmluY2x1ZGUoJyUnKSwgaXNWaWV3cG9ydCA9IChjb250ZXh0ID09PSBkb2N1bWVudC52aWV3cG9ydCk7CgogICAgaWYgKC9cZC8udGVzdCh2YWx1ZSkgJiYgZWxlbWVudCAmJiBlbGVtZW50LnJ1bnRpbWVTdHlsZSAmJiAhKGlzUGVyY2VudGFnZSAmJiBpc1ZpZXdwb3J0KSkgewogICAgICB2YXIgc3R5bGUgPSBlbGVtZW50LnN0eWxlLmxlZnQsIHJTdHlsZSA9IGVsZW1lbnQucnVudGltZVN0eWxlLmxlZnQ7CiAgICAgIGVsZW1lbnQucnVudGltZVN0eWxlLmxlZnQgPSBlbGVtZW50LmN1cnJlbnRTdHlsZS5sZWZ0OwogICAgICBlbGVtZW50LnN0eWxlLmxlZnQgPSB2YWx1ZSB8fCAwOwogICAgICB2YWx1ZSA9IGVsZW1lbnQuc3R5bGUucGl4ZWxMZWZ0OwogICAgICBlbGVtZW50LnN0eWxlLmxlZnQgPSBzdHlsZTsKICAgICAgZWxlbWVudC5ydW50aW1lU3R5bGUubGVmdCA9IHJTdHlsZTsKCiAgICAgIHJldHVybiB2YWx1ZTsKICAgIH0KCiAgICBpZiAoZWxlbWVudCAmJiBpc1BlcmNlbnRhZ2UpIHsKICAgICAgY29udGV4dCA9IGNvbnRleHQgfHwgZWxlbWVudC5wYXJlbnROb2RlOwogICAgICB2YXIgZGVjaW1hbCA9IHRvRGVjaW1hbCh2YWx1ZSk7CiAgICAgIHZhciB3aG9sZSA9IG51bGw7CiAgICAgIHZhciBwb3NpdGlvbiA9IGVsZW1lbnQuZ2V0U3R5bGUoJ3Bvc2l0aW9uJyk7CgogICAgICB2YXIgaXNIb3Jpem9udGFsID0gcHJvcGVydHkuaW5jbHVkZSgnbGVmdCcpIHx8IHByb3BlcnR5LmluY2x1ZGUoJ3JpZ2h0JykgfHwKICAgICAgIHByb3BlcnR5LmluY2x1ZGUoJ3dpZHRoJyk7CgogICAgICB2YXIgaXNWZXJ0aWNhbCA9ICBwcm9wZXJ0eS5pbmNsdWRlKCd0b3AnKSB8fCBwcm9wZXJ0eS5pbmNsdWRlKCdib3R0b20nKSB8fAogICAgICAgIHByb3BlcnR5LmluY2x1ZGUoJ2hlaWdodCcpOwoKICAgICAgaWYgKGNvbnRleHQgPT09IGRvY3VtZW50LnZpZXdwb3J0KSB7CiAgICAgICAgaWYgKGlzSG9yaXpvbnRhbCkgewogICAgICAgICAgd2hvbGUgPSBkb2N1bWVudC52aWV3cG9ydC5nZXRXaWR0aCgpOwogICAgICAgIH0gZWxzZSBpZiAoaXNWZXJ0aWNhbCkgewogICAgICAgICAgd2hvbGUgPSBkb2N1bWVudC52aWV3cG9ydC5nZXRIZWlnaHQoKTsKICAgICAgICB9CiAgICAgIH0gZWxzZSB7CiAgICAgICAgaWYgKGlzSG9yaXpvbnRhbCkgewogICAgICAgICAgd2hvbGUgPSAkKGNvbnRleHQpLm1lYXN1cmUoJ3dpZHRoJyk7CiAgICAgICAgfSBlbHNlIGlmIChpc1ZlcnRpY2FsKSB7CiAgICAgICAgICB3aG9sZSA9ICQoY29udGV4dCkubWVhc3VyZSgnaGVpZ2h0Jyk7CiAgICAgICAgfQogICAgICB9CgogICAgICByZXR1cm4gKHdob2xlID09PSBudWxsKSA/IDAgOiB3aG9sZSAqIGRlY2ltYWw7CiAgICB9CgogICAgcmV0dXJuIDA7CiAgfQoKICBmdW5jdGlvbiB0b0NTU1BpeGVscyhudW1iZXIpIHsKICAgIGlmIChPYmplY3QuaXNTdHJpbmcobnVtYmVyKSAmJiBudW1iZXIuZW5kc1dpdGgoJ3B4JykpIHsKICAgICAgcmV0dXJuIG51bWJlcjsKICAgIH0KICAgIHJldHVybiBudW1iZXIgKyAncHgnOwogIH0KCiAgZnVuY3Rpb24gaXNEaXNwbGF5ZWQoZWxlbWVudCkgewogICAgdmFyIG9yaWdpbmFsRWxlbWVudCA9IGVsZW1lbnQ7CiAgICB3aGlsZSAoZWxlbWVudCAmJiBlbGVtZW50LnBhcmVudE5vZGUpIHsKICAgICAgdmFyIGRpc3BsYXkgPSBlbGVtZW50LmdldFN0eWxlKCdkaXNwbGF5Jyk7CiAgICAgIGlmIChkaXNwbGF5ID09PSAnbm9uZScpIHsKICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgIH0KICAgICAgZWxlbWVudCA9ICQoZWxlbWVudC5wYXJlbnROb2RlKTsKICAgIH0KICAgIHJldHVybiB0cnVlOwogIH0KCiAgdmFyIGhhc0xheW91dCA9IFByb3RvdHlwZS5LOwogIGlmICgnY3VycmVudFN0eWxlJyBpbiBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQpIHsKICAgIGhhc0xheW91dCA9IGZ1bmN0aW9uKGVsZW1lbnQpIHsKICAgICAgaWYgKCFlbGVtZW50LmN1cnJlbnRTdHlsZS5oYXNMYXlvdXQpIHsKICAgICAgICBlbGVtZW50LnN0eWxlLnpvb20gPSAxOwogICAgICB9CiAgICAgIHJldHVybiBlbGVtZW50OwogICAgfTsKICB9CgogIGZ1bmN0aW9uIGNzc05hbWVGb3Ioa2V5KSB7CiAgICBpZiAoa2V5LmluY2x1ZGUoJ2JvcmRlcicpKSBrZXkgPSBrZXkgKyAnLXdpZHRoJzsKICAgIHJldHVybiBrZXkuY2FtZWxpemUoKTsKICB9CgogIEVsZW1lbnQuTGF5b3V0ID0gQ2xhc3MuY3JlYXRlKEhhc2gsIHsKICAgIGluaXRpYWxpemU6IGZ1bmN0aW9uKCRzdXBlciwgZWxlbWVudCwgcHJlQ29tcHV0ZSkgewogICAgICAkc3VwZXIoKTsKICAgICAgdGhpcy5lbGVtZW50ID0gJChlbGVtZW50KTsKCiAgICAgIEVsZW1lbnQuTGF5b3V0LlBST1BFUlRJRVMuZWFjaCggZnVuY3Rpb24ocHJvcGVydHkpIHsKICAgICAgICB0aGlzLl9zZXQocHJvcGVydHksIG51bGwpOwogICAgICB9LCB0aGlzKTsKCiAgICAgIGlmIChwcmVDb21wdXRlKSB7CiAgICAgICAgdGhpcy5fcHJlQ29tcHV0aW5nID0gdHJ1ZTsKICAgICAgICB0aGlzLl9iZWdpbigpOwogICAgICAgIEVsZW1lbnQuTGF5b3V0LlBST1BFUlRJRVMuZWFjaCggdGhpcy5fY29tcHV0ZSwgdGhpcyApOwogICAgICAgIHRoaXMuX2VuZCgpOwogICAgICAgIHRoaXMuX3ByZUNvbXB1dGluZyA9IGZhbHNlOwogICAgICB9CiAgICB9LAoKICAgIF9zZXQ6IGZ1bmN0aW9uKHByb3BlcnR5LCB2YWx1ZSkgewogICAgICByZXR1cm4gSGFzaC5wcm90b3R5cGUuc2V0LmNhbGwodGhpcywgcHJvcGVydHksIHZhbHVlKTsKICAgIH0sCgogICAgc2V0OiBmdW5jdGlvbihwcm9wZXJ0eSwgdmFsdWUpIHsKICAgICAgdGhyb3cgIlByb3BlcnRpZXMgb2YgRWxlbWVudC5MYXlvdXQgYXJlIHJlYWQtb25seS4iOwogICAgfSwKCiAgICBnZXQ6IGZ1bmN0aW9uKCRzdXBlciwgcHJvcGVydHkpIHsKICAgICAgdmFyIHZhbHVlID0gJHN1cGVyKHByb3BlcnR5KTsKICAgICAgcmV0dXJuIHZhbHVlID09PSBudWxsID8gdGhpcy5fY29tcHV0ZShwcm9wZXJ0eSkgOiB2YWx1ZTsKICAgIH0sCgogICAgX2JlZ2luOiBmdW5jdGlvbigpIHsKICAgICAgaWYgKHRoaXMuX3ByZXBhcmVkKSByZXR1cm47CgogICAgICB2YXIgZWxlbWVudCA9IHRoaXMuZWxlbWVudDsKICAgICAgaWYgKGlzRGlzcGxheWVkKGVsZW1lbnQpKSB7CiAgICAgICAgdGhpcy5fcHJlcGFyZWQgPSB0cnVlOwogICAgICAgIHJldHVybjsKICAgICAgfQoKICAgICAgdmFyIG9yaWdpbmFsU3R5bGVzID0gewogICAgICAgIHBvc2l0aW9uOiAgIGVsZW1lbnQuc3R5bGUucG9zaXRpb24gICB8fCAnJywKICAgICAgICB3aWR0aDogICAgICBlbGVtZW50LnN0eWxlLndpZHRoICAgICAgfHwgJycsCiAgICAgICAgdmlzaWJpbGl0eTogZWxlbWVudC5zdHlsZS52aXNpYmlsaXR5IHx8ICcnLAogICAgICAgIGRpc3BsYXk6ICAgIGVsZW1lbnQuc3R5bGUuZGlzcGxheSAgICB8fCAnJwogICAgICB9OwoKICAgICAgZWxlbWVudC5zdG9yZSgncHJvdG90eXBlX29yaWdpbmFsX3N0eWxlcycsIG9yaWdpbmFsU3R5bGVzKTsKCiAgICAgIHZhciBwb3NpdGlvbiA9IGVsZW1lbnQuZ2V0U3R5bGUoJ3Bvc2l0aW9uJyksCiAgICAgICB3aWR0aCA9IGVsZW1lbnQuZ2V0U3R5bGUoJ3dpZHRoJyk7CgogICAgICBpZiAod2lkdGggPT09ICIwcHgiIHx8IHdpZHRoID09PSBudWxsKSB7CiAgICAgICAgZWxlbWVudC5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJzsKICAgICAgICB3aWR0aCA9IGVsZW1lbnQuZ2V0U3R5bGUoJ3dpZHRoJyk7CiAgICAgIH0KCiAgICAgIHZhciBjb250ZXh0ID0gKHBvc2l0aW9uID09PSAnZml4ZWQnKSA/IGRvY3VtZW50LnZpZXdwb3J0IDoKICAgICAgIGVsZW1lbnQucGFyZW50Tm9kZTsKCiAgICAgIGVsZW1lbnQuc2V0U3R5bGUoewogICAgICAgIHBvc2l0aW9uOiAgICdhYnNvbHV0ZScsCiAgICAgICAgdmlzaWJpbGl0eTogJ2hpZGRlbicsCiAgICAgICAgZGlzcGxheTogICAgJ2Jsb2NrJwogICAgICB9KTsKCiAgICAgIHZhciBwb3NpdGlvbmVkV2lkdGggPSBlbGVtZW50LmdldFN0eWxlKCd3aWR0aCcpOwoKICAgICAgdmFyIG5ld1dpZHRoOwogICAgICBpZiAod2lkdGggJiYgKHBvc2l0aW9uZWRXaWR0aCA9PT0gd2lkdGgpKSB7CiAgICAgICAgbmV3V2lkdGggPSBnZXRQaXhlbFZhbHVlKGVsZW1lbnQsICd3aWR0aCcsIGNvbnRleHQpOwogICAgICB9IGVsc2UgaWYgKHBvc2l0aW9uID09PSAnYWJzb2x1dGUnIHx8IHBvc2l0aW9uID09PSAnZml4ZWQnKSB7CiAgICAgICAgbmV3V2lkdGggPSBnZXRQaXhlbFZhbHVlKGVsZW1lbnQsICd3aWR0aCcsIGNvbnRleHQpOwogICAgICB9IGVsc2UgewogICAgICAgIHZhciBwYXJlbnQgPSBlbGVtZW50LnBhcmVudE5vZGUsIHBMYXlvdXQgPSAkKHBhcmVudCkuZ2V0TGF5b3V0KCk7CgogICAgICAgIG5ld1dpZHRoID0gcExheW91dC5nZXQoJ3dpZHRoJykgLQogICAgICAgICB0aGlzLmdldCgnbWFyZ2luLWxlZnQnKSAtCiAgICAgICAgIHRoaXMuZ2V0KCdib3JkZXItbGVmdCcpIC0KICAgICAgICAgdGhpcy5nZXQoJ3BhZGRpbmctbGVmdCcpIC0KICAgICAgICAgdGhpcy5nZXQoJ3BhZGRpbmctcmlnaHQnKSAtCiAgICAgICAgIHRoaXMuZ2V0KCdib3JkZXItcmlnaHQnKSAtCiAgICAgICAgIHRoaXMuZ2V0KCdtYXJnaW4tcmlnaHQnKTsKICAgICAgfQoKICAgICAgZWxlbWVudC5zZXRTdHlsZSh7IHdpZHRoOiBuZXdXaWR0aCArICdweCcgfSk7CgogICAgICB0aGlzLl9wcmVwYXJlZCA9IHRydWU7CiAgICB9LAoKICAgIF9lbmQ6IGZ1bmN0aW9uKCkgewogICAgICB2YXIgZWxlbWVudCA9IHRoaXMuZWxlbWVudDsKICAgICAgdmFyIG9yaWdpbmFsU3R5bGVzID0gZWxlbWVudC5yZXRyaWV2ZSgncHJvdG90eXBlX29yaWdpbmFsX3N0eWxlcycpOwogICAgICBlbGVtZW50LnN0b3JlKCdwcm90b3R5cGVfb3JpZ2luYWxfc3R5bGVzJywgbnVsbCk7CiAgICAgIGVsZW1lbnQuc2V0U3R5bGUob3JpZ2luYWxTdHlsZXMpOwogICAgICB0aGlzLl9wcmVwYXJlZCA9IGZhbHNlOwogICAgfSwKCiAgICBfY29tcHV0ZTogZnVuY3Rpb24ocHJvcGVydHkpIHsKICAgICAgdmFyIENPTVBVVEFUSU9OUyA9IEVsZW1lbnQuTGF5b3V0LkNPTVBVVEFUSU9OUzsKICAgICAgaWYgKCEocHJvcGVydHkgaW4gQ09NUFVUQVRJT05TKSkgewogICAgICAgIHRocm93ICJQcm9wZXJ0eSBub3QgZm91bmQuIjsKICAgICAgfQoKICAgICAgcmV0dXJuIHRoaXMuX3NldChwcm9wZXJ0eSwgQ09NUFVUQVRJT05TW3Byb3BlcnR5XS5jYWxsKHRoaXMsIHRoaXMuZWxlbWVudCkpOwogICAgfSwKCiAgICB0b09iamVjdDogZnVuY3Rpb24oKSB7CiAgICAgIHZhciBhcmdzID0gJEEoYXJndW1lbnRzKTsKICAgICAgdmFyIGtleXMgPSAoYXJncy5sZW5ndGggPT09IDApID8gRWxlbWVudC5MYXlvdXQuUFJPUEVSVElFUyA6CiAgICAgICBhcmdzLmpvaW4oJyAnKS5zcGxpdCgnICcpOwogICAgICB2YXIgb2JqID0ge307CiAgICAgIGtleXMuZWFjaCggZnVuY3Rpb24oa2V5KSB7CiAgICAgICAgaWYgKCFFbGVtZW50LkxheW91dC5QUk9QRVJUSUVTLmluY2x1ZGUoa2V5KSkgcmV0dXJuOwogICAgICAgIHZhciB2YWx1ZSA9IHRoaXMuZ2V0KGtleSk7CiAgICAgICAgaWYgKHZhbHVlICE9IG51bGwpIG9ialtrZXldID0gdmFsdWU7CiAgICAgIH0sIHRoaXMpOwogICAgICByZXR1cm4gb2JqOwogICAgfSwKCiAgICB0b0hhc2g6IGZ1bmN0aW9uKCkgewogICAgICB2YXIgb2JqID0gdGhpcy50b09iamVjdC5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICByZXR1cm4gbmV3IEhhc2gob2JqKTsKICAgIH0sCgogICAgdG9DU1M6IGZ1bmN0aW9uKCkgewogICAgICB2YXIgYXJncyA9ICRBKGFyZ3VtZW50cyk7CiAgICAgIHZhciBrZXlzID0gKGFyZ3MubGVuZ3RoID09PSAwKSA/IEVsZW1lbnQuTGF5b3V0LlBST1BFUlRJRVMgOgogICAgICAgYXJncy5qb2luKCcgJykuc3BsaXQoJyAnKTsKICAgICAgdmFyIGNzcyA9IHt9OwoKICAgICAga2V5cy5lYWNoKCBmdW5jdGlvbihrZXkpIHsKICAgICAgICBpZiAoIUVsZW1lbnQuTGF5b3V0LlBST1BFUlRJRVMuaW5jbHVkZShrZXkpKSByZXR1cm47CiAgICAgICAgaWYgKEVsZW1lbnQuTGF5b3V0LkNPTVBPU0lURV9QUk9QRVJUSUVTLmluY2x1ZGUoa2V5KSkgcmV0dXJuOwoKICAgICAgICB2YXIgdmFsdWUgPSB0aGlzLmdldChrZXkpOwogICAgICAgIGlmICh2YWx1ZSAhPSBudWxsKSBjc3NbY3NzTmFtZUZvcihrZXkpXSA9IHZhbHVlICsgJ3B4JzsKICAgICAgfSwgdGhpcyk7CiAgICAgIHJldHVybiBjc3M7CiAgICB9LAoKICAgIGluc3BlY3Q6IGZ1bmN0aW9uKCkgewogICAgICByZXR1cm4gIiM8RWxlbWVudC5MYXlvdXQ+IjsKICAgIH0KICB9KTsKCiAgT2JqZWN0LmV4dGVuZChFbGVtZW50LkxheW91dCwgewogICAgUFJPUEVSVElFUzogJHcoJ2hlaWdodCB3aWR0aCB0b3AgbGVmdCByaWdodCBib3R0b20gYm9yZGVyLWxlZnQgYm9yZGVyLXJpZ2h0IGJvcmRlci10b3AgYm9yZGVyLWJvdHRvbSBwYWRkaW5nLWxlZnQgcGFkZGluZy1yaWdodCBwYWRkaW5nLXRvcCBwYWRkaW5nLWJvdHRvbSBtYXJnaW4tdG9wIG1hcmdpbi1ib3R0b20gbWFyZ2luLWxlZnQgbWFyZ2luLXJpZ2h0IHBhZGRpbmctYm94LXdpZHRoIHBhZGRpbmctYm94LWhlaWdodCBib3JkZXItYm94LXdpZHRoIGJvcmRlci1ib3gtaGVpZ2h0IG1hcmdpbi1ib3gtd2lkdGggbWFyZ2luLWJveC1oZWlnaHQnKSwKCiAgICBDT01QT1NJVEVfUFJPUEVSVElFUzogJHcoJ3BhZGRpbmctYm94LXdpZHRoIHBhZGRpbmctYm94LWhlaWdodCBtYXJnaW4tYm94LXdpZHRoIG1hcmdpbi1ib3gtaGVpZ2h0IGJvcmRlci1ib3gtd2lkdGggYm9yZGVyLWJveC1oZWlnaHQnKSwKCiAgICBDT01QVVRBVElPTlM6IHsKICAgICAgJ2hlaWdodCc6IGZ1bmN0aW9uKGVsZW1lbnQpIHsKICAgICAgICBpZiAoIXRoaXMuX3ByZUNvbXB1dGluZykgdGhpcy5fYmVnaW4oKTsKCiAgICAgICAgdmFyIGJIZWlnaHQgPSB0aGlzLmdldCgnYm9yZGVyLWJveC1oZWlnaHQnKTsKICAgICAgICBpZiAoYkhlaWdodCA8PSAwKSB7CiAgICAgICAgICBpZiAoIXRoaXMuX3ByZUNvbXB1dGluZykgdGhpcy5fZW5kKCk7CiAgICAgICAgICByZXR1cm4gMDsKICAgICAgICB9CgogICAgICAgIHZhciBiVG9wID0gdGhpcy5nZXQoJ2JvcmRlci10b3AnKSwKICAgICAgICAgYkJvdHRvbSA9IHRoaXMuZ2V0KCdib3JkZXItYm90dG9tJyk7CgogICAgICAgIHZhciBwVG9wID0gdGhpcy5nZXQoJ3BhZGRpbmctdG9wJyksCiAgICAgICAgIHBCb3R0b20gPSB0aGlzLmdldCgncGFkZGluZy1ib3R0b20nKTsKCiAgICAgICAgaWYgKCF0aGlzLl9wcmVDb21wdXRpbmcpIHRoaXMuX2VuZCgpOwoKICAgICAgICByZXR1cm4gYkhlaWdodCAtIGJUb3AgLSBiQm90dG9tIC0gcFRvcCAtIHBCb3R0b207CiAgICAgIH0sCgogICAgICAnd2lkdGgnOiBmdW5jdGlvbihlbGVtZW50KSB7CiAgICAgICAgaWYgKCF0aGlzLl9wcmVDb21wdXRpbmcpIHRoaXMuX2JlZ2luKCk7CgogICAgICAgIHZhciBiV2lkdGggPSB0aGlzLmdldCgnYm9yZGVyLWJveC13aWR0aCcpOwogICAgICAgIGlmIChiV2lkdGggPD0gMCkgewogICAgICAgICAgaWYgKCF0aGlzLl9wcmVDb21wdXRpbmcpIHRoaXMuX2VuZCgpOwogICAgICAgICAgcmV0dXJuIDA7CiAgICAgICAgfQoKICAgICAgICB2YXIgYkxlZnQgPSB0aGlzLmdldCgnYm9yZGVyLWxlZnQnKSwKICAgICAgICAgYlJpZ2h0ID0gdGhpcy5nZXQoJ2JvcmRlci1yaWdodCcpOwoKICAgICAgICB2YXIgcExlZnQgPSB0aGlzLmdldCgncGFkZGluZy1sZWZ0JyksCiAgICAgICAgIHBSaWdodCA9IHRoaXMuZ2V0KCdwYWRkaW5nLXJpZ2h0Jyk7CgogICAgICAgIGlmICghdGhpcy5fcHJlQ29tcHV0aW5nKSB0aGlzLl9lbmQoKTsKCiAgICAgICAgcmV0dXJuIGJXaWR0aCAtIGJMZWZ0IC0gYlJpZ2h0IC0gcExlZnQgLSBwUmlnaHQ7CiAgICAgIH0sCgogICAgICAncGFkZGluZy1ib3gtaGVpZ2h0JzogZnVuY3Rpb24oZWxlbWVudCkgewogICAgICAgIHZhciBoZWlnaHQgPSB0aGlzLmdldCgnaGVpZ2h0JyksCiAgICAgICAgIHBUb3AgPSB0aGlzLmdldCgncGFkZGluZy10b3AnKSwKICAgICAgICAgcEJvdHRvbSA9IHRoaXMuZ2V0KCdwYWRkaW5nLWJvdHRvbScpOwoKICAgICAgICByZXR1cm4gaGVpZ2h0ICsgcFRvcCArIHBCb3R0b207CiAgICAgIH0sCgogICAgICAncGFkZGluZy1ib3gtd2lkdGgnOiBmdW5jdGlvbihlbGVtZW50KSB7CiAgICAgICAgdmFyIHdpZHRoID0gdGhpcy5nZXQoJ3dpZHRoJyksCiAgICAgICAgIHBMZWZ0ID0gdGhpcy5nZXQoJ3BhZGRpbmctbGVmdCcpLAogICAgICAgICBwUmlnaHQgPSB0aGlzLmdldCgncGFkZGluZy1yaWdodCcpOwoKICAgICAgICByZXR1cm4gd2lkdGggKyBwTGVmdCArIHBSaWdodDsKICAgICAgfSwKCiAgICAgICdib3JkZXItYm94LWhlaWdodCc6IGZ1bmN0aW9uKGVsZW1lbnQpIHsKICAgICAgICBpZiAoIXRoaXMuX3ByZUNvbXB1dGluZykgdGhpcy5fYmVnaW4oKTsKICAgICAgICB2YXIgaGVpZ2h0ID0gZWxlbWVudC5vZmZzZXRIZWlnaHQ7CiAgICAgICAgaWYgKCF0aGlzLl9wcmVDb21wdXRpbmcpIHRoaXMuX2VuZCgpOwogICAgICAgIHJldHVybiBoZWlnaHQ7CiAgICAgIH0sCgogICAgICAnYm9yZGVyLWJveC13aWR0aCc6IGZ1bmN0aW9uKGVsZW1lbnQpIHsKICAgICAgICBpZiAoIXRoaXMuX3ByZUNvbXB1dGluZykgdGhpcy5fYmVnaW4oKTsKICAgICAgICB2YXIgd2lkdGggPSBlbGVtZW50Lm9mZnNldFdpZHRoOwogICAgICAgIGlmICghdGhpcy5fcHJlQ29tcHV0aW5nKSB0aGlzLl9lbmQoKTsKICAgICAgICByZXR1cm4gd2lkdGg7CiAgICAgIH0sCgogICAgICAnbWFyZ2luLWJveC1oZWlnaHQnOiBmdW5jdGlvbihlbGVtZW50KSB7CiAgICAgICAgdmFyIGJIZWlnaHQgPSB0aGlzLmdldCgnYm9yZGVyLWJveC1oZWlnaHQnKSwKICAgICAgICAgbVRvcCA9IHRoaXMuZ2V0KCdtYXJnaW4tdG9wJyksCiAgICAgICAgIG1Cb3R0b20gPSB0aGlzLmdldCgnbWFyZ2luLWJvdHRvbScpOwoKICAgICAgICBpZiAoYkhlaWdodCA8PSAwKSByZXR1cm4gMDsKCiAgICAgICAgcmV0dXJuIGJIZWlnaHQgKyBtVG9wICsgbUJvdHRvbTsKICAgICAgfSwKCiAgICAgICdtYXJnaW4tYm94LXdpZHRoJzogZnVuY3Rpb24oZWxlbWVudCkgewogICAgICAgIHZhciBiV2lkdGggPSB0aGlzLmdldCgnYm9yZGVyLWJveC13aWR0aCcpLAogICAgICAgICBtTGVmdCA9IHRoaXMuZ2V0KCdtYXJnaW4tbGVmdCcpLAogICAgICAgICBtUmlnaHQgPSB0aGlzLmdldCgnbWFyZ2luLXJpZ2h0Jyk7CgogICAgICAgIGlmIChiV2lkdGggPD0gMCkgcmV0dXJuIDA7CgogICAgICAgIHJldHVybiBiV2lkdGggKyBtTGVmdCArIG1SaWdodDsKICAgICAgfSwKCiAgICAgICd0b3AnOiBmdW5jdGlvbihlbGVtZW50KSB7CiAgICAgICAgdmFyIG9mZnNldCA9IGVsZW1lbnQucG9zaXRpb25lZE9mZnNldCgpOwogICAgICAgIHJldHVybiBvZmZzZXQudG9wOwogICAgICB9LAoKICAgICAgJ2JvdHRvbSc6IGZ1bmN0aW9uKGVsZW1lbnQpIHsKICAgICAgICB2YXIgb2Zmc2V0ID0gZWxlbWVudC5wb3NpdGlvbmVkT2Zmc2V0KCksCiAgICAgICAgIHBhcmVudCA9IGVsZW1lbnQuZ2V0T2Zmc2V0UGFyZW50KCksCiAgICAgICAgIHBIZWlnaHQgPSBwYXJlbnQubWVhc3VyZSgnaGVpZ2h0Jyk7CgogICAgICAgIHZhciBtSGVpZ2h0ID0gdGhpcy5nZXQoJ2JvcmRlci1ib3gtaGVpZ2h0Jyk7CgogICAgICAgIHJldHVybiBwSGVpZ2h0IC0gbUhlaWdodCAtIG9mZnNldC50b3A7CiAgICAgIH0sCgogICAgICAnbGVmdCc6IGZ1bmN0aW9uKGVsZW1lbnQpIHsKICAgICAgICB2YXIgb2Zmc2V0ID0gZWxlbWVudC5wb3NpdGlvbmVkT2Zmc2V0KCk7CiAgICAgICAgcmV0dXJuIG9mZnNldC5sZWZ0OwogICAgICB9LAoKICAgICAgJ3JpZ2h0JzogZnVuY3Rpb24oZWxlbWVudCkgewogICAgICAgIHZhciBvZmZzZXQgPSBlbGVtZW50LnBvc2l0aW9uZWRPZmZzZXQoKSwKICAgICAgICAgcGFyZW50ID0gZWxlbWVudC5nZXRPZmZzZXRQYXJlbnQoKSwKICAgICAgICAgcFdpZHRoID0gcGFyZW50Lm1lYXN1cmUoJ3dpZHRoJyk7CgogICAgICAgIHZhciBtV2lkdGggPSB0aGlzLmdldCgnYm9yZGVyLWJveC13aWR0aCcpOwoKICAgICAgICByZXR1cm4gcFdpZHRoIC0gbVdpZHRoIC0gb2Zmc2V0LmxlZnQ7CiAgICAgIH0sCgogICAgICAncGFkZGluZy10b3AnOiBmdW5jdGlvbihlbGVtZW50KSB7CiAgICAgICAgcmV0dXJuIGdldFBpeGVsVmFsdWUoZWxlbWVudCwgJ3BhZGRpbmdUb3AnKTsKICAgICAgfSwKCiAgICAgICdwYWRkaW5nLWJvdHRvbSc6IGZ1bmN0aW9uKGVsZW1lbnQpIHsKICAgICAgICByZXR1cm4gZ2V0UGl4ZWxWYWx1ZShlbGVtZW50LCAncGFkZGluZ0JvdHRvbScpOwogICAgICB9LAoKICAgICAgJ3BhZGRpbmctbGVmdCc6IGZ1bmN0aW9uKGVsZW1lbnQpIHsKICAgICAgICByZXR1cm4gZ2V0UGl4ZWxWYWx1ZShlbGVtZW50LCAncGFkZGluZ0xlZnQnKTsKICAgICAgfSwKCiAgICAgICdwYWRkaW5nLXJpZ2h0JzogZnVuY3Rpb24oZWxlbWVudCkgewogICAgICAgIHJldHVybiBnZXRQaXhlbFZhbHVlKGVsZW1lbnQsICdwYWRkaW5nUmlnaHQnKTsKICAgICAgfSwKCiAgICAgICdib3JkZXItdG9wJzogZnVuY3Rpb24oZWxlbWVudCkgewogICAgICAgIHJldHVybiBnZXRQaXhlbFZhbHVlKGVsZW1lbnQsICdib3JkZXJUb3BXaWR0aCcpOwogICAgICB9LAoKICAgICAgJ2JvcmRlci1ib3R0b20nOiBmdW5jdGlvbihlbGVtZW50KSB7CiAgICAgICAgcmV0dXJuIGdldFBpeGVsVmFsdWUoZWxlbWVudCwgJ2JvcmRlckJvdHRvbVdpZHRoJyk7CiAgICAgIH0sCgogICAgICAnYm9yZGVyLWxlZnQnOiBmdW5jdGlvbihlbGVtZW50KSB7CiAgICAgICAgcmV0dXJuIGdldFBpeGVsVmFsdWUoZWxlbWVudCwgJ2JvcmRlckxlZnRXaWR0aCcpOwogICAgICB9LAoKICAgICAgJ2JvcmRlci1yaWdodCc6IGZ1bmN0aW9uKGVsZW1lbnQpIHsKICAgICAgICByZXR1cm4gZ2V0UGl4ZWxWYWx1ZShlbGVtZW50LCAnYm9yZGVyUmlnaHRXaWR0aCcpOwogICAgICB9LAoKICAgICAgJ21hcmdpbi10b3AnOiBmdW5jdGlvbihlbGVtZW50KSB7CiAgICAgICAgcmV0dXJuIGdldFBpeGVsVmFsdWUoZWxlbWVudCwgJ21hcmdpblRvcCcpOwogICAgICB9LAoKICAgICAgJ21hcmdpbi1ib3R0b20nOiBmdW5jdGlvbihlbGVtZW50KSB7CiAgICAgICAgcmV0dXJuIGdldFBpeGVsVmFsdWUoZWxlbWVudCwgJ21hcmdpbkJvdHRvbScpOwogICAgICB9LAoKICAgICAgJ21hcmdpbi1sZWZ0JzogZnVuY3Rpb24oZWxlbWVudCkgewogICAgICAgIHJldHVybiBnZXRQaXhlbFZhbHVlKGVsZW1lbnQsICdtYXJnaW5MZWZ0Jyk7CiAgICAgIH0sCgogICAgICAnbWFyZ2luLXJpZ2h0JzogZnVuY3Rpb24oZWxlbWVudCkgewogICAgICAgIHJldHVybiBnZXRQaXhlbFZhbHVlKGVsZW1lbnQsICdtYXJnaW5SaWdodCcpOwogICAgICB9CiAgICB9CiAgfSk7CgogIGlmICgnZ2V0Qm91bmRpbmdDbGllbnRSZWN0JyBpbiBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQpIHsKICAgIE9iamVjdC5leHRlbmQoRWxlbWVudC5MYXlvdXQuQ09NUFVUQVRJT05TLCB7CiAgICAgICdyaWdodCc6IGZ1bmN0aW9uKGVsZW1lbnQpIHsKICAgICAgICB2YXIgcGFyZW50ID0gaGFzTGF5b3V0KGVsZW1lbnQuZ2V0T2Zmc2V0UGFyZW50KCkpOwogICAgICAgIHZhciByZWN0ID0gZWxlbWVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKSwKICAgICAgICAgcFJlY3QgPSBwYXJlbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7CgogICAgICAgIHJldHVybiAocFJlY3QucmlnaHQgLSByZWN0LnJpZ2h0KS5yb3VuZCgpOwogICAgICB9LAoKICAgICAgJ2JvdHRvbSc6IGZ1bmN0aW9uKGVsZW1lbnQpIHsKICAgICAgICB2YXIgcGFyZW50ID0gaGFzTGF5b3V0KGVsZW1lbnQuZ2V0T2Zmc2V0UGFyZW50KCkpOwogICAgICAgIHZhciByZWN0ID0gZWxlbWVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKSwKICAgICAgICAgcFJlY3QgPSBwYXJlbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7CgogICAgICAgIHJldHVybiAocFJlY3QuYm90dG9tIC0gcmVjdC5ib3R0b20pLnJvdW5kKCk7CiAgICAgIH0KICAgIH0pOwogIH0KCiAgRWxlbWVudC5PZmZzZXQgPSBDbGFzcy5jcmVhdGUoewogICAgaW5pdGlhbGl6ZTogZnVuY3Rpb24obGVmdCwgdG9wKSB7CiAgICAgIHRoaXMubGVmdCA9IGxlZnQucm91bmQoKTsKICAgICAgdGhpcy50b3AgID0gdG9wLnJvdW5kKCk7CgogICAgICB0aGlzWzBdID0gdGhpcy5sZWZ0OwogICAgICB0aGlzWzFdID0gdGhpcy50b3A7CiAgICB9LAoKICAgIHJlbGF0aXZlVG86IGZ1bmN0aW9uKG9mZnNldCkgewogICAgICByZXR1cm4gbmV3IEVsZW1lbnQuT2Zmc2V0KAogICAgICAgIHRoaXMubGVmdCAtIG9mZnNldC5sZWZ0LAogICAgICAgIHRoaXMudG9wICAtIG9mZnNldC50b3AKICAgICAgKTsKICAgIH0sCgogICAgaW5zcGVjdDogZnVuY3Rpb24oKSB7CiAgICAgIHJldHVybiAiIzxFbGVtZW50Lk9mZnNldCBsZWZ0OiAje2xlZnR9IHRvcDogI3t0b3B9PiIuaW50ZXJwb2xhdGUodGhpcyk7CiAgICB9LAoKICAgIHRvU3RyaW5nOiBmdW5jdGlvbigpIHsKICAgICAgcmV0dXJuICJbI3tsZWZ0fSwgI3t0b3B9XSIuaW50ZXJwb2xhdGUodGhpcyk7CiAgICB9LAoKICAgIHRvQXJyYXk6IGZ1bmN0aW9uKCkgewogICAgICByZXR1cm4gW3RoaXMubGVmdCwgdGhpcy50b3BdOwogICAgfQogIH0pOwoKICBmdW5jdGlvbiBnZXRMYXlvdXQoZWxlbWVudCwgcHJlQ29tcHV0ZSkgewogICAgcmV0dXJuIG5ldyBFbGVtZW50LkxheW91dChlbGVtZW50LCBwcmVDb21wdXRlKTsKICB9CgogIGZ1bmN0aW9uIG1lYXN1cmUoZWxlbWVudCwgcHJvcGVydHkpIHsKICAgIHJldHVybiAkKGVsZW1lbnQpLmdldExheW91dCgpLmdldChwcm9wZXJ0eSk7CiAgfQoKICBmdW5jdGlvbiBnZXREaW1lbnNpb25zKGVsZW1lbnQpIHsKICAgIGVsZW1lbnQgPSAkKGVsZW1lbnQpOwogICAgdmFyIGRpc3BsYXkgPSBFbGVtZW50LmdldFN0eWxlKGVsZW1lbnQsICdkaXNwbGF5Jyk7CgogICAgaWYgKGRpc3BsYXkgJiYgZGlzcGxheSAhPT0gJ25vbmUnKSB7CiAgICAgIHJldHVybiB7IHdpZHRoOiBlbGVtZW50Lm9mZnNldFdpZHRoLCBoZWlnaHQ6IGVsZW1lbnQub2Zmc2V0SGVpZ2h0IH07CiAgICB9CgogICAgdmFyIHN0eWxlID0gZWxlbWVudC5zdHlsZTsKICAgIHZhciBvcmlnaW5hbFN0eWxlcyA9IHsKICAgICAgdmlzaWJpbGl0eTogc3R5bGUudmlzaWJpbGl0eSwKICAgICAgcG9zaXRpb246ICAgc3R5bGUucG9zaXRpb24sCiAgICAgIGRpc3BsYXk6ICAgIHN0eWxlLmRpc3BsYXkKICAgIH07CgogICAgdmFyIG5ld1N0eWxlcyA9IHsKICAgICAgdmlzaWJpbGl0eTogJ2hpZGRlbicsCiAgICAgIGRpc3BsYXk6ICAgICdibG9jaycKICAgIH07CgogICAgaWYgKG9yaWdpbmFsU3R5bGVzLnBvc2l0aW9uICE9PSAnZml4ZWQnKQogICAgICBuZXdTdHlsZXMucG9zaXRpb24gPSAnYWJzb2x1dGUnOwoKICAgIEVsZW1lbnQuc2V0U3R5bGUoZWxlbWVudCwgbmV3U3R5bGVzKTsKCiAgICB2YXIgZGltZW5zaW9ucyA9IHsKICAgICAgd2lkdGg6ICBlbGVtZW50Lm9mZnNldFdpZHRoLAogICAgICBoZWlnaHQ6IGVsZW1lbnQub2Zmc2V0SGVpZ2h0CiAgICB9OwoKICAgIEVsZW1lbnQuc2V0U3R5bGUoZWxlbWVudCwgb3JpZ2luYWxTdHlsZXMpOwoKICAgIHJldHVybiBkaW1lbnNpb25zOwogIH0KCiAgZnVuY3Rpb24gZ2V0T2Zmc2V0UGFyZW50KGVsZW1lbnQpIHsKICAgIGVsZW1lbnQgPSAkKGVsZW1lbnQpOwoKICAgIGlmIChpc0RvY3VtZW50KGVsZW1lbnQpIHx8IGlzRGV0YWNoZWQoZWxlbWVudCkgfHwgaXNCb2R5KGVsZW1lbnQpIHx8IGlzSHRtbChlbGVtZW50KSkKICAgICAgcmV0dXJuICQoZG9jdW1lbnQuYm9keSk7CgogICAgdmFyIGlzSW5saW5lID0gKEVsZW1lbnQuZ2V0U3R5bGUoZWxlbWVudCwgJ2Rpc3BsYXknKSA9PT0gJ2lubGluZScpOwogICAgaWYgKCFpc0lubGluZSAmJiBlbGVtZW50Lm9mZnNldFBhcmVudCkgcmV0dXJuICQoZWxlbWVudC5vZmZzZXRQYXJlbnQpOwoKICAgIHdoaWxlICgoZWxlbWVudCA9IGVsZW1lbnQucGFyZW50Tm9kZSkgJiYgZWxlbWVudCAhPT0gZG9jdW1lbnQuYm9keSkgewogICAgICBpZiAoRWxlbWVudC5nZXRTdHlsZShlbGVtZW50LCAncG9zaXRpb24nKSAhPT0gJ3N0YXRpYycpIHsKICAgICAgICByZXR1cm4gaXNIdG1sKGVsZW1lbnQpID8gJChkb2N1bWVudC5ib2R5KSA6ICQoZWxlbWVudCk7CiAgICAgIH0KICAgIH0KCiAgICByZXR1cm4gJChkb2N1bWVudC5ib2R5KTsKICB9CgoKICBmdW5jdGlvbiBjdW11bGF0aXZlT2Zmc2V0KGVsZW1lbnQpIHsKICAgIGVsZW1lbnQgPSAkKGVsZW1lbnQpOwogICAgdmFyIHZhbHVlVCA9IDAsIHZhbHVlTCA9IDA7CiAgICBpZiAoZWxlbWVudC5wYXJlbnROb2RlKSB7CiAgICAgIGRvIHsKICAgICAgICB2YWx1ZVQgKz0gZWxlbWVudC5vZmZzZXRUb3AgIHx8IDA7CiAgICAgICAgdmFsdWVMICs9IGVsZW1lbnQub2Zmc2V0TGVmdCB8fCAwOwogICAgICAgIGVsZW1lbnQgPSBlbGVtZW50Lm9mZnNldFBhcmVudDsKICAgICAgfSB3aGlsZSAoZWxlbWVudCk7CiAgICB9CiAgICByZXR1cm4gbmV3IEVsZW1lbnQuT2Zmc2V0KHZhbHVlTCwgdmFsdWVUKTsKICB9CgogIGZ1bmN0aW9uIHBvc2l0aW9uZWRPZmZzZXQoZWxlbWVudCkgewogICAgZWxlbWVudCA9ICQoZWxlbWVudCk7CgogICAgdmFyIGxheW91dCA9IGVsZW1lbnQuZ2V0TGF5b3V0KCk7CgogICAgdmFyIHZhbHVlVCA9IDAsIHZhbHVlTCA9IDA7CiAgICBkbyB7CiAgICAgIHZhbHVlVCArPSBlbGVtZW50Lm9mZnNldFRvcCAgfHwgMDsKICAgICAgdmFsdWVMICs9IGVsZW1lbnQub2Zmc2V0TGVmdCB8fCAwOwogICAgICBlbGVtZW50ID0gZWxlbWVudC5vZmZzZXRQYXJlbnQ7CiAgICAgIGlmIChlbGVtZW50KSB7CiAgICAgICAgaWYgKGlzQm9keShlbGVtZW50KSkgYnJlYWs7CiAgICAgICAgdmFyIHAgPSBFbGVtZW50LmdldFN0eWxlKGVsZW1lbnQsICdwb3NpdGlvbicpOwogICAgICAgIGlmIChwICE9PSAnc3RhdGljJykgYnJlYWs7CiAgICAgIH0KICAgIH0gd2hpbGUgKGVsZW1lbnQpOwoKICAgIHZhbHVlTCAtPSBsYXlvdXQuZ2V0KCdtYXJnaW4tdG9wJyk7CiAgICB2YWx1ZVQgLT0gbGF5b3V0LmdldCgnbWFyZ2luLWxlZnQnKTsKCiAgICByZXR1cm4gbmV3IEVsZW1lbnQuT2Zmc2V0KHZhbHVlTCwgdmFsdWVUKTsKICB9CgogIGZ1bmN0aW9uIGN1bXVsYXRpdmVTY3JvbGxPZmZzZXQoZWxlbWVudCkgewogICAgdmFyIHZhbHVlVCA9IDAsIHZhbHVlTCA9IDA7CiAgICBkbyB7CiAgICAgIHZhbHVlVCArPSBlbGVtZW50LnNjcm9sbFRvcCAgfHwgMDsKICAgICAgdmFsdWVMICs9IGVsZW1lbnQuc2Nyb2xsTGVmdCB8fCAwOwogICAgICBlbGVtZW50ID0gZWxlbWVudC5wYXJlbnROb2RlOwogICAgfSB3aGlsZSAoZWxlbWVudCk7CiAgICByZXR1cm4gbmV3IEVsZW1lbnQuT2Zmc2V0KHZhbHVlTCwgdmFsdWVUKTsKICB9CgogIGZ1bmN0aW9uIHZpZXdwb3J0T2Zmc2V0KGZvckVsZW1lbnQpIHsKICAgIGVsZW1lbnQgPSAkKGVsZW1lbnQpOwogICAgdmFyIHZhbHVlVCA9IDAsIHZhbHVlTCA9IDAsIGRvY0JvZHkgPSBkb2N1bWVudC5ib2R5OwoKICAgIHZhciBlbGVtZW50ID0gZm9yRWxlbWVudDsKICAgIGRvIHsKICAgICAgdmFsdWVUICs9IGVsZW1lbnQub2Zmc2V0VG9wICB8fCAwOwogICAgICB2YWx1ZUwgKz0gZWxlbWVudC5vZmZzZXRMZWZ0IHx8IDA7CiAgICAgIGlmIChlbGVtZW50Lm9mZnNldFBhcmVudCA9PSBkb2NCb2R5ICYmCiAgICAgICAgRWxlbWVudC5nZXRTdHlsZShlbGVtZW50LCAncG9zaXRpb24nKSA9PSAnYWJzb2x1dGUnKSBicmVhazsKICAgIH0gd2hpbGUgKGVsZW1lbnQgPSBlbGVtZW50Lm9mZnNldFBhcmVudCk7CgogICAgZWxlbWVudCA9IGZvckVsZW1lbnQ7CiAgICBkbyB7CiAgICAgIGlmIChlbGVtZW50ICE9IGRvY0JvZHkpIHsKICAgICAgICB2YWx1ZVQgLT0gZWxlbWVudC5zY3JvbGxUb3AgIHx8IDA7CiAgICAgICAgdmFsdWVMIC09IGVsZW1lbnQuc2Nyb2xsTGVmdCB8fCAwOwogICAgICB9CiAgICB9IHdoaWxlIChlbGVtZW50ID0gZWxlbWVudC5wYXJlbnROb2RlKTsKICAgIHJldHVybiBuZXcgRWxlbWVudC5PZmZzZXQodmFsdWVMLCB2YWx1ZVQpOwogIH0KCiAgZnVuY3Rpb24gYWJzb2x1dGl6ZShlbGVtZW50KSB7CiAgICBlbGVtZW50ID0gJChlbGVtZW50KTsKCiAgICBpZiAoRWxlbWVudC5nZXRTdHlsZShlbGVtZW50LCAncG9zaXRpb24nKSA9PT0gJ2Fic29sdXRlJykgewogICAgICByZXR1cm4gZWxlbWVudDsKICAgIH0KCiAgICB2YXIgb2Zmc2V0UGFyZW50ID0gZ2V0T2Zmc2V0UGFyZW50KGVsZW1lbnQpOwogICAgdmFyIGVPZmZzZXQgPSBlbGVtZW50LnZpZXdwb3J0T2Zmc2V0KCksCiAgICAgcE9mZnNldCA9IG9mZnNldFBhcmVudC52aWV3cG9ydE9mZnNldCgpOwoKICAgIHZhciBvZmZzZXQgPSBlT2Zmc2V0LnJlbGF0aXZlVG8ocE9mZnNldCk7CiAgICB2YXIgbGF5b3V0ID0gZWxlbWVudC5nZXRMYXlvdXQoKTsKCiAgICBlbGVtZW50LnN0b3JlKCdwcm90b3R5cGVfYWJzb2x1dGl6ZV9vcmlnaW5hbF9zdHlsZXMnLCB7CiAgICAgIGxlZnQ6ICAgZWxlbWVudC5nZXRTdHlsZSgnbGVmdCcpLAogICAgICB0b3A6ICAgIGVsZW1lbnQuZ2V0U3R5bGUoJ3RvcCcpLAogICAgICB3aWR0aDogIGVsZW1lbnQuZ2V0U3R5bGUoJ3dpZHRoJyksCiAgICAgIGhlaWdodDogZWxlbWVudC5nZXRTdHlsZSgnaGVpZ2h0JykKICAgIH0pOwoKICAgIGVsZW1lbnQuc2V0U3R5bGUoewogICAgICBwb3NpdGlvbjogJ2Fic29sdXRlJywKICAgICAgdG9wOiAgICBvZmZzZXQudG9wICsgJ3B4JywKICAgICAgbGVmdDogICBvZmZzZXQubGVmdCArICdweCcsCiAgICAgIHdpZHRoOiAgbGF5b3V0LmdldCgnd2lkdGgnKSArICdweCcsCiAgICAgIGhlaWdodDogbGF5b3V0LmdldCgnaGVpZ2h0JykgKyAncHgnCiAgICB9KTsKCiAgICByZXR1cm4gZWxlbWVudDsKICB9CgogIGZ1bmN0aW9uIHJlbGF0aXZpemUoZWxlbWVudCkgewogICAgZWxlbWVudCA9ICQoZWxlbWVudCk7CiAgICBpZiAoRWxlbWVudC5nZXRTdHlsZShlbGVtZW50LCAncG9zaXRpb24nKSA9PT0gJ3JlbGF0aXZlJykgewogICAgICByZXR1cm4gZWxlbWVudDsKICAgIH0KCiAgICB2YXIgb3JpZ2luYWxTdHlsZXMgPQogICAgIGVsZW1lbnQucmV0cmlldmUoJ3Byb3RvdHlwZV9hYnNvbHV0aXplX29yaWdpbmFsX3N0eWxlcycpOwoKICAgIGlmIChvcmlnaW5hbFN0eWxlcykgZWxlbWVudC5zZXRTdHlsZShvcmlnaW5hbFN0eWxlcyk7CiAgICByZXR1cm4gZWxlbWVudDsKICB9CgogIGlmIChQcm90b3R5cGUuQnJvd3Nlci5JRSkgewogICAgZ2V0T2Zmc2V0UGFyZW50ID0gZ2V0T2Zmc2V0UGFyZW50LndyYXAoCiAgICAgIGZ1bmN0aW9uKHByb2NlZWQsIGVsZW1lbnQpIHsKICAgICAgICBlbGVtZW50ID0gJChlbGVtZW50KTsKCiAgICAgICAgaWYgKGlzRG9jdW1lbnQoZWxlbWVudCkgfHwgaXNEZXRhY2hlZChlbGVtZW50KSB8fCBpc0JvZHkoZWxlbWVudCkgfHwgaXNIdG1sKGVsZW1lbnQpKQogICAgICAgICAgcmV0dXJuICQoZG9jdW1lbnQuYm9keSk7CgogICAgICAgIHZhciBwb3NpdGlvbiA9IGVsZW1lbnQuZ2V0U3R5bGUoJ3Bvc2l0aW9uJyk7CiAgICAgICAgaWYgKHBvc2l0aW9uICE9PSAnc3RhdGljJykgcmV0dXJuIHByb2NlZWQoZWxlbWVudCk7CgogICAgICAgIGVsZW1lbnQuc2V0U3R5bGUoeyBwb3NpdGlvbjogJ3JlbGF0aXZlJyB9KTsKICAgICAgICB2YXIgdmFsdWUgPSBwcm9jZWVkKGVsZW1lbnQpOwogICAgICAgIGVsZW1lbnQuc2V0U3R5bGUoeyBwb3NpdGlvbjogcG9zaXRpb24gfSk7CiAgICAgICAgcmV0dXJuIHZhbHVlOwogICAgICB9CiAgICApOwoKICAgIHBvc2l0aW9uZWRPZmZzZXQgPSBwb3NpdGlvbmVkT2Zmc2V0LndyYXAoZnVuY3Rpb24ocHJvY2VlZCwgZWxlbWVudCkgewogICAgICBlbGVtZW50ID0gJChlbGVtZW50KTsKICAgICAgaWYgKCFlbGVtZW50LnBhcmVudE5vZGUpIHJldHVybiBuZXcgRWxlbWVudC5PZmZzZXQoMCwgMCk7CiAgICAgIHZhciBwb3NpdGlvbiA9IGVsZW1lbnQuZ2V0U3R5bGUoJ3Bvc2l0aW9uJyk7CiAgICAgIGlmIChwb3NpdGlvbiAhPT0gJ3N0YXRpYycpIHJldHVybiBwcm9jZWVkKGVsZW1lbnQpOwoKICAgICAgdmFyIG9mZnNldFBhcmVudCA9IGVsZW1lbnQuZ2V0T2Zmc2V0UGFyZW50KCk7CiAgICAgIGlmIChvZmZzZXRQYXJlbnQgJiYgb2Zmc2V0UGFyZW50LmdldFN0eWxlKCdwb3NpdGlvbicpID09PSAnZml4ZWQnKQogICAgICAgIGhhc0xheW91dChvZmZzZXRQYXJlbnQpOwoKICAgICAgZWxlbWVudC5zZXRTdHlsZSh7IHBvc2l0aW9uOiAncmVsYXRpdmUnIH0pOwogICAgICB2YXIgdmFsdWUgPSBwcm9jZWVkKGVsZW1lbnQpOwogICAgICBlbGVtZW50LnNldFN0eWxlKHsgcG9zaXRpb246IHBvc2l0aW9uIH0pOwogICAgICByZXR1cm4gdmFsdWU7CiAgICB9KTsKICB9IGVsc2UgaWYgKFByb3RvdHlwZS5Ccm93c2VyLldlYmtpdCkgewogICAgY3VtdWxhdGl2ZU9mZnNldCA9IGZ1bmN0aW9uKGVsZW1lbnQpIHsKICAgICAgZWxlbWVudCA9ICQoZWxlbWVudCk7CiAgICAgIHZhciB2YWx1ZVQgPSAwLCB2YWx1ZUwgPSAwOwogICAgICBkbyB7CiAgICAgICAgdmFsdWVUICs9IGVsZW1lbnQub2Zmc2V0VG9wICB8fCAwOwogICAgICAgIHZhbHVlTCArPSBlbGVtZW50Lm9mZnNldExlZnQgfHwgMDsKICAgICAgICBpZiAoZWxlbWVudC5vZmZzZXRQYXJlbnQgPT0gZG9jdW1lbnQuYm9keSkKICAgICAgICAgIGlmIChFbGVtZW50LmdldFN0eWxlKGVsZW1lbnQsICdwb3NpdGlvbicpID09ICdhYnNvbHV0ZScpIGJyZWFrOwoKICAgICAgICBlbGVtZW50ID0gZWxlbWVudC5vZmZzZXRQYXJlbnQ7CiAgICAgIH0gd2hpbGUgKGVsZW1lbnQpOwoKICAgICAgcmV0dXJuIG5ldyBFbGVtZW50Lk9mZnNldCh2YWx1ZUwsIHZhbHVlVCk7CiAgICB9OwogIH0KCgogIEVsZW1lbnQuYWRkTWV0aG9kcyh7CiAgICBnZXRMYXlvdXQ6ICAgICAgICAgICAgICBnZXRMYXlvdXQsCiAgICBtZWFzdXJlOiAgICAgICAgICAgICAgICBtZWFzdXJlLAogICAgZ2V0RGltZW5zaW9uczogICAgICAgICAgZ2V0RGltZW5zaW9ucywKICAgIGdldE9mZnNldFBhcmVudDogICAgICAgIGdldE9mZnNldFBhcmVudCwKICAgIGN1bXVsYXRpdmVPZmZzZXQ6ICAgICAgIGN1bXVsYXRpdmVPZmZzZXQsCiAgICBwb3NpdGlvbmVkT2Zmc2V0OiAgICAgICBwb3NpdGlvbmVkT2Zmc2V0LAogICAgY3VtdWxhdGl2ZVNjcm9sbE9mZnNldDogY3VtdWxhdGl2ZVNjcm9sbE9mZnNldCwKICAgIHZpZXdwb3J0T2Zmc2V0OiAgICAgICAgIHZpZXdwb3J0T2Zmc2V0LAogICAgYWJzb2x1dGl6ZTogICAgICAgICAgICAgYWJzb2x1dGl6ZSwKICAgIHJlbGF0aXZpemU6ICAgICAgICAgICAgIHJlbGF0aXZpemUKICB9KTsKCiAgZnVuY3Rpb24gaXNCb2R5KGVsZW1lbnQpIHsKICAgIHJldHVybiBlbGVtZW50Lm5vZGVOYW1lLnRvVXBwZXJDYXNlKCkgPT09ICdCT0RZJzsKICB9CgogIGZ1bmN0aW9uIGlzSHRtbChlbGVtZW50KSB7CiAgICByZXR1cm4gZWxlbWVudC5ub2RlTmFtZS50b1VwcGVyQ2FzZSgpID09PSAnSFRNTCc7CiAgfQoKICBmdW5jdGlvbiBpc0RvY3VtZW50KGVsZW1lbnQpIHsKICAgIHJldHVybiBlbGVtZW50Lm5vZGVUeXBlID09PSBOb2RlLkRPQ1VNRU5UX05PREU7CiAgfQoKICBmdW5jdGlvbiBpc0RldGFjaGVkKGVsZW1lbnQpIHsKICAgIHJldHVybiBlbGVtZW50ICE9PSBkb2N1bWVudC5ib2R5ICYmCiAgICAgIUVsZW1lbnQuZGVzY2VuZGFudE9mKGVsZW1lbnQsIGRvY3VtZW50LmJvZHkpOwogIH0KCiAgaWYgKCdnZXRCb3VuZGluZ0NsaWVudFJlY3QnIGluIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudCkgewogICAgRWxlbWVudC5hZGRNZXRob2RzKHsKICAgICAgdmlld3BvcnRPZmZzZXQ6IGZ1bmN0aW9uKGVsZW1lbnQpIHsKICAgICAgICBlbGVtZW50ID0gJChlbGVtZW50KTsKICAgICAgICBpZiAoaXNEZXRhY2hlZChlbGVtZW50KSkgcmV0dXJuIG5ldyBFbGVtZW50Lk9mZnNldCgwLCAwKTsKCiAgICAgICAgdmFyIHJlY3QgPSBlbGVtZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLAogICAgICAgICBkb2NFbCA9IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudDsKICAgICAgICByZXR1cm4gbmV3IEVsZW1lbnQuT2Zmc2V0KHJlY3QubGVmdCAtIGRvY0VsLmNsaWVudExlZnQsCiAgICAgICAgIHJlY3QudG9wIC0gZG9jRWwuY2xpZW50VG9wKTsKICAgICAgfQogICAgfSk7CiAgfQp9KSgpOwp3aW5kb3cuJCQgPSBmdW5jdGlvbigpIHsKICB2YXIgZXhwcmVzc2lvbiA9ICRBKGFyZ3VtZW50cykuam9pbignLCAnKTsKICByZXR1cm4gUHJvdG90eXBlLlNlbGVjdG9yLnNlbGVjdChleHByZXNzaW9uLCBkb2N1bWVudCk7Cn07CgpQcm90b3R5cGUuU2VsZWN0b3IgPSAoZnVuY3Rpb24oKSB7CgogIGZ1bmN0aW9uIHNlbGVjdCgpIHsKICAgIHRocm93IG5ldyBFcnJvcignTWV0aG9kICJQcm90b3R5cGUuU2VsZWN0b3Iuc2VsZWN0IiBtdXN0IGJlIGRlZmluZWQuJyk7CiAgfQoKICBmdW5jdGlvbiBtYXRjaCgpIHsKICAgIHRocm93IG5ldyBFcnJvcignTWV0aG9kICJQcm90b3R5cGUuU2VsZWN0b3IubWF0Y2giIG11c3QgYmUgZGVmaW5lZC4nKTsKICB9CgogIGZ1bmN0aW9uIGZpbmQoZWxlbWVudHMsIGV4cHJlc3Npb24sIGluZGV4KSB7CiAgICBpbmRleCA9IGluZGV4IHx8IDA7CiAgICB2YXIgbWF0Y2ggPSBQcm90b3R5cGUuU2VsZWN0b3IubWF0Y2gsIGxlbmd0aCA9IGVsZW1lbnRzLmxlbmd0aCwgbWF0Y2hJbmRleCA9IDAsIGk7CgogICAgZm9yIChpID0gMDsgaSA8IGxlbmd0aDsgaSsrKSB7CiAgICAgIGlmIChtYXRjaChlbGVtZW50c1tpXSwgZXhwcmVzc2lvbikgJiYgaW5kZXggPT0gbWF0Y2hJbmRleCsrKSB7CiAgICAgICAgcmV0dXJuIEVsZW1lbnQuZXh0ZW5kKGVsZW1lbnRzW2ldKTsKICAgICAgfQogICAgfQogIH0KCiAgZnVuY3Rpb24gZXh0ZW5kRWxlbWVudHMoZWxlbWVudHMpIHsKICAgIGZvciAodmFyIGkgPSAwLCBsZW5ndGggPSBlbGVtZW50cy5sZW5ndGg7IGkgPCBsZW5ndGg7IGkrKykgewogICAgICBFbGVtZW50LmV4dGVuZChlbGVtZW50c1tpXSk7CiAgICB9CiAgICByZXR1cm4gZWxlbWVudHM7CiAgfQoKCiAgdmFyIEsgPSBQcm90b3R5cGUuSzsKCiAgcmV0dXJuIHsKICAgIHNlbGVjdDogc2VsZWN0LAogICAgbWF0Y2g6IG1hdGNoLAogICAgZmluZDogZmluZCwKICAgIGV4dGVuZEVsZW1lbnRzOiAoRWxlbWVudC5leHRlbmQgPT09IEspID8gSyA6IGV4dGVuZEVsZW1lbnRzLAogICAgZXh0ZW5kRWxlbWVudDogRWxlbWVudC5leHRlbmQKICB9Owp9KSgpOwovKiEKICogU2l6emxlIENTUyBTZWxlY3RvciBFbmdpbmUgLSB2MS4wCiAqICBDb3B5cmlnaHQgMjAwOSwgVGhlIERvam8gRm91bmRhdGlvbgogKiAgUmVsZWFzZWQgdW5kZXIgdGhlIE1JVCwgQlNELCBhbmQgR1BMIExpY2Vuc2VzLgogKiAgTW9yZSBpbmZvcm1hdGlvbjogaHR0cDovL3NpenpsZWpzLmNvbS8KICovCihmdW5jdGlvbigpewoKdmFyIGNodW5rZXIgPSAvKCg/OlwoKD86XChbXigpXStcKXxbXigpXSspK1wpfFxbKD86XFtbXltcXV0qXF18WyciXVteJyJdKlsnIl18W15bXF0nIl0rKStcXXxcXC58W14gPit+LChcW1xcXSspK3xbPit+XSkoXHMqLFxzKik/KCg/Oi58XHJ8XG4pKikvZywKCWRvbmUgPSAwLAoJdG9TdHJpbmcgPSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLAoJaGFzRHVwbGljYXRlID0gZmFsc2UsCgliYXNlSGFzRHVwbGljYXRlID0gdHJ1ZTsKClswLCAwXS5zb3J0KGZ1bmN0aW9uKCl7CgliYXNlSGFzRHVwbGljYXRlID0gZmFsc2U7CglyZXR1cm4gMDsKfSk7Cgp2YXIgU2l6emxlID0gZnVuY3Rpb24oc2VsZWN0b3IsIGNvbnRleHQsIHJlc3VsdHMsIHNlZWQpIHsKCXJlc3VsdHMgPSByZXN1bHRzIHx8IFtdOwoJdmFyIG9yaWdDb250ZXh0ID0gY29udGV4dCA9IGNvbnRleHQgfHwgZG9jdW1lbnQ7CgoJaWYgKCBjb250ZXh0Lm5vZGVUeXBlICE9PSAxICYmIGNvbnRleHQubm9kZVR5cGUgIT09IDkgKSB7CgkJcmV0dXJuIFtdOwoJfQoKCWlmICggIXNlbGVjdG9yIHx8IHR5cGVvZiBzZWxlY3RvciAhPT0gInN0cmluZyIgKSB7CgkJcmV0dXJuIHJlc3VsdHM7Cgl9CgoJdmFyIHBhcnRzID0gW10sIG0sIHNldCwgY2hlY2tTZXQsIGNoZWNrLCBtb2RlLCBleHRyYSwgcHJ1bmUgPSB0cnVlLCBjb250ZXh0WE1MID0gaXNYTUwoY29udGV4dCksCgkJc29GYXIgPSBzZWxlY3RvcjsKCgl3aGlsZSAoIChjaHVua2VyLmV4ZWMoIiIpLCBtID0gY2h1bmtlci5leGVjKHNvRmFyKSkgIT09IG51bGwgKSB7CgkJc29GYXIgPSBtWzNdOwoKCQlwYXJ0cy5wdXNoKCBtWzFdICk7CgoJCWlmICggbVsyXSApIHsKCQkJZXh0cmEgPSBtWzNdOwoJCQlicmVhazsKCQl9Cgl9CgoJaWYgKCBwYXJ0cy5sZW5ndGggPiAxICYmIG9yaWdQT1MuZXhlYyggc2VsZWN0b3IgKSApIHsKCQlpZiAoIHBhcnRzLmxlbmd0aCA9PT0gMiAmJiBFeHByLnJlbGF0aXZlWyBwYXJ0c1swXSBdICkgewoJCQlzZXQgPSBwb3NQcm9jZXNzKCBwYXJ0c1swXSArIHBhcnRzWzFdLCBjb250ZXh0ICk7CgkJfSBlbHNlIHsKCQkJc2V0ID0gRXhwci5yZWxhdGl2ZVsgcGFydHNbMF0gXSA/CgkJCQlbIGNvbnRleHQgXSA6CgkJCQlTaXp6bGUoIHBhcnRzLnNoaWZ0KCksIGNvbnRleHQgKTsKCgkJCXdoaWxlICggcGFydHMubGVuZ3RoICkgewoJCQkJc2VsZWN0b3IgPSBwYXJ0cy5zaGlmdCgpOwoKCQkJCWlmICggRXhwci5yZWxhdGl2ZVsgc2VsZWN0b3IgXSApCgkJCQkJc2VsZWN0b3IgKz0gcGFydHMuc2hpZnQoKTsKCgkJCQlzZXQgPSBwb3NQcm9jZXNzKCBzZWxlY3Rvciwgc2V0ICk7CgkJCX0KCQl9Cgl9IGVsc2UgewoJCWlmICggIXNlZWQgJiYgcGFydHMubGVuZ3RoID4gMSAmJiBjb250ZXh0Lm5vZGVUeXBlID09PSA5ICYmICFjb250ZXh0WE1MICYmCgkJCQlFeHByLm1hdGNoLklELnRlc3QocGFydHNbMF0pICYmICFFeHByLm1hdGNoLklELnRlc3QocGFydHNbcGFydHMubGVuZ3RoIC0gMV0pICkgewoJCQl2YXIgcmV0ID0gU2l6emxlLmZpbmQoIHBhcnRzLnNoaWZ0KCksIGNvbnRleHQsIGNvbnRleHRYTUwgKTsKCQkJY29udGV4dCA9IHJldC5leHByID8gU2l6emxlLmZpbHRlciggcmV0LmV4cHIsIHJldC5zZXQgKVswXSA6IHJldC5zZXRbMF07CgkJfQoKCQlpZiAoIGNvbnRleHQgKSB7CgkJCXZhciByZXQgPSBzZWVkID8KCQkJCXsgZXhwcjogcGFydHMucG9wKCksIHNldDogbWFrZUFycmF5KHNlZWQpIH0gOgoJCQkJU2l6emxlLmZpbmQoIHBhcnRzLnBvcCgpLCBwYXJ0cy5sZW5ndGggPT09IDEgJiYgKHBhcnRzWzBdID09PSAifiIgfHwgcGFydHNbMF0gPT09ICIrIikgJiYgY29udGV4dC5wYXJlbnROb2RlID8gY29udGV4dC5wYXJlbnROb2RlIDogY29udGV4dCwgY29udGV4dFhNTCApOwoJCQlzZXQgPSByZXQuZXhwciA/IFNpenpsZS5maWx0ZXIoIHJldC5leHByLCByZXQuc2V0ICkgOiByZXQuc2V0OwoKCQkJaWYgKCBwYXJ0cy5sZW5ndGggPiAwICkgewoJCQkJY2hlY2tTZXQgPSBtYWtlQXJyYXkoc2V0KTsKCQkJfSBlbHNlIHsKCQkJCXBydW5lID0gZmFsc2U7CgkJCX0KCgkJCXdoaWxlICggcGFydHMubGVuZ3RoICkgewoJCQkJdmFyIGN1ciA9IHBhcnRzLnBvcCgpLCBwb3AgPSBjdXI7CgoJCQkJaWYgKCAhRXhwci5yZWxhdGl2ZVsgY3VyIF0gKSB7CgkJCQkJY3VyID0gIiI7CgkJCQl9IGVsc2UgewoJCQkJCXBvcCA9IHBhcnRzLnBvcCgpOwoJCQkJfQoKCQkJCWlmICggcG9wID09IG51bGwgKSB7CgkJCQkJcG9wID0gY29udGV4dDsKCQkJCX0KCgkJCQlFeHByLnJlbGF0aXZlWyBjdXIgXSggY2hlY2tTZXQsIHBvcCwgY29udGV4dFhNTCApOwoJCQl9CgkJfSBlbHNlIHsKCQkJY2hlY2tTZXQgPSBwYXJ0cyA9IFtdOwoJCX0KCX0KCglpZiAoICFjaGVja1NldCApIHsKCQljaGVja1NldCA9IHNldDsKCX0KCglpZiAoICFjaGVja1NldCApIHsKCQl0aHJvdyAiU3ludGF4IGVycm9yLCB1bnJlY29nbml6ZWQgZXhwcmVzc2lvbjogIiArIChjdXIgfHwgc2VsZWN0b3IpOwoJfQoKCWlmICggdG9TdHJpbmcuY2FsbChjaGVja1NldCkgPT09ICJbb2JqZWN0IEFycmF5XSIgKSB7CgkJaWYgKCAhcHJ1bmUgKSB7CgkJCXJlc3VsdHMucHVzaC5hcHBseSggcmVzdWx0cywgY2hlY2tTZXQgKTsKCQl9IGVsc2UgaWYgKCBjb250ZXh0ICYmIGNvbnRleHQubm9kZVR5cGUgPT09IDEgKSB7CgkJCWZvciAoIHZhciBpID0gMDsgY2hlY2tTZXRbaV0gIT0gbnVsbDsgaSsrICkgewoJCQkJaWYgKCBjaGVja1NldFtpXSAmJiAoY2hlY2tTZXRbaV0gPT09IHRydWUgfHwgY2hlY2tTZXRbaV0ubm9kZVR5cGUgPT09IDEgJiYgY29udGFpbnMoY29udGV4dCwgY2hlY2tTZXRbaV0pKSApIHsKCQkJCQlyZXN1bHRzLnB1c2goIHNldFtpXSApOwoJCQkJfQoJCQl9CgkJfSBlbHNlIHsKCQkJZm9yICggdmFyIGkgPSAwOyBjaGVja1NldFtpXSAhPSBudWxsOyBpKysgKSB7CgkJCQlpZiAoIGNoZWNrU2V0W2ldICYmIGNoZWNrU2V0W2ldLm5vZGVUeXBlID09PSAxICkgewoJCQkJCXJlc3VsdHMucHVzaCggc2V0W2ldICk7CgkJCQl9CgkJCX0KCQl9Cgl9IGVsc2UgewoJCW1ha2VBcnJheSggY2hlY2tTZXQsIHJlc3VsdHMgKTsKCX0KCglpZiAoIGV4dHJhICkgewoJCVNpenpsZSggZXh0cmEsIG9yaWdDb250ZXh0LCByZXN1bHRzLCBzZWVkICk7CgkJU2l6emxlLnVuaXF1ZVNvcnQoIHJlc3VsdHMgKTsKCX0KCglyZXR1cm4gcmVzdWx0czsKfTsKClNpenpsZS51bmlxdWVTb3J0ID0gZnVuY3Rpb24ocmVzdWx0cyl7CglpZiAoIHNvcnRPcmRlciApIHsKCQloYXNEdXBsaWNhdGUgPSBiYXNlSGFzRHVwbGljYXRlOwoJCXJlc3VsdHMuc29ydChzb3J0T3JkZXIpOwoKCQlpZiAoIGhhc0R1cGxpY2F0ZSApIHsKCQkJZm9yICggdmFyIGkgPSAxOyBpIDwgcmVzdWx0cy5sZW5ndGg7IGkrKyApIHsKCQkJCWlmICggcmVzdWx0c1tpXSA9PT0gcmVzdWx0c1tpLTFdICkgewoJCQkJCXJlc3VsdHMuc3BsaWNlKGktLSwgMSk7CgkJCQl9CgkJCX0KCQl9Cgl9CgoJcmV0dXJuIHJlc3VsdHM7Cn07CgpTaXp6bGUubWF0Y2hlcyA9IGZ1bmN0aW9uKGV4cHIsIHNldCl7CglyZXR1cm4gU2l6emxlKGV4cHIsIG51bGwsIG51bGwsIHNldCk7Cn07CgpTaXp6bGUuZmluZCA9IGZ1bmN0aW9uKGV4cHIsIGNvbnRleHQsIGlzWE1MKXsKCXZhciBzZXQsIG1hdGNoOwoKCWlmICggIWV4cHIgKSB7CgkJcmV0dXJuIFtdOwoJfQoKCWZvciAoIHZhciBpID0gMCwgbCA9IEV4cHIub3JkZXIubGVuZ3RoOyBpIDwgbDsgaSsrICkgewoJCXZhciB0eXBlID0gRXhwci5vcmRlcltpXSwgbWF0Y2g7CgoJCWlmICggKG1hdGNoID0gRXhwci5sZWZ0TWF0Y2hbIHR5cGUgXS5leGVjKCBleHByICkpICkgewoJCQl2YXIgbGVmdCA9IG1hdGNoWzFdOwoJCQltYXRjaC5zcGxpY2UoMSwxKTsKCgkJCWlmICggbGVmdC5zdWJzdHIoIGxlZnQubGVuZ3RoIC0gMSApICE9PSAiXFwiICkgewoJCQkJbWF0Y2hbMV0gPSAobWF0Y2hbMV0gfHwgIiIpLnJlcGxhY2UoL1xcL2csICIiKTsKCQkJCXNldCA9IEV4cHIuZmluZFsgdHlwZSBdKCBtYXRjaCwgY29udGV4dCwgaXNYTUwgKTsKCQkJCWlmICggc2V0ICE9IG51bGwgKSB7CgkJCQkJZXhwciA9IGV4cHIucmVwbGFjZSggRXhwci5tYXRjaFsgdHlwZSBdLCAiIiApOwoJCQkJCWJyZWFrOwoJCQkJfQoJCQl9CgkJfQoJfQoKCWlmICggIXNldCApIHsKCQlzZXQgPSBjb250ZXh0LmdldEVsZW1lbnRzQnlUYWdOYW1lKCIqIik7Cgl9CgoJcmV0dXJuIHtzZXQ6IHNldCwgZXhwcjogZXhwcn07Cn07CgpTaXp6bGUuZmlsdGVyID0gZnVuY3Rpb24oZXhwciwgc2V0LCBpbnBsYWNlLCBub3QpewoJdmFyIG9sZCA9IGV4cHIsIHJlc3VsdCA9IFtdLCBjdXJMb29wID0gc2V0LCBtYXRjaCwgYW55Rm91bmQsCgkJaXNYTUxGaWx0ZXIgPSBzZXQgJiYgc2V0WzBdICYmIGlzWE1MKHNldFswXSk7CgoJd2hpbGUgKCBleHByICYmIHNldC5sZW5ndGggKSB7CgkJZm9yICggdmFyIHR5cGUgaW4gRXhwci5maWx0ZXIgKSB7CgkJCWlmICggKG1hdGNoID0gRXhwci5tYXRjaFsgdHlwZSBdLmV4ZWMoIGV4cHIgKSkgIT0gbnVsbCApIHsKCQkJCXZhciBmaWx0ZXIgPSBFeHByLmZpbHRlclsgdHlwZSBdLCBmb3VuZCwgaXRlbTsKCQkJCWFueUZvdW5kID0gZmFsc2U7CgoJCQkJaWYgKCBjdXJMb29wID09IHJlc3VsdCApIHsKCQkJCQlyZXN1bHQgPSBbXTsKCQkJCX0KCgkJCQlpZiAoIEV4cHIucHJlRmlsdGVyWyB0eXBlIF0gKSB7CgkJCQkJbWF0Y2ggPSBFeHByLnByZUZpbHRlclsgdHlwZSBdKCBtYXRjaCwgY3VyTG9vcCwgaW5wbGFjZSwgcmVzdWx0LCBub3QsIGlzWE1MRmlsdGVyICk7CgoJCQkJCWlmICggIW1hdGNoICkgewoJCQkJCQlhbnlGb3VuZCA9IGZvdW5kID0gdHJ1ZTsKCQkJCQl9IGVsc2UgaWYgKCBtYXRjaCA9PT0gdHJ1ZSApIHsKCQkJCQkJY29udGludWU7CgkJCQkJfQoJCQkJfQoKCQkJCWlmICggbWF0Y2ggKSB7CgkJCQkJZm9yICggdmFyIGkgPSAwOyAoaXRlbSA9IGN1ckxvb3BbaV0pICE9IG51bGw7IGkrKyApIHsKCQkJCQkJaWYgKCBpdGVtICkgewoJCQkJCQkJZm91bmQgPSBmaWx0ZXIoIGl0ZW0sIG1hdGNoLCBpLCBjdXJMb29wICk7CgkJCQkJCQl2YXIgcGFzcyA9IG5vdCBeICEhZm91bmQ7CgoJCQkJCQkJaWYgKCBpbnBsYWNlICYmIGZvdW5kICE9IG51bGwgKSB7CgkJCQkJCQkJaWYgKCBwYXNzICkgewoJCQkJCQkJCQlhbnlGb3VuZCA9IHRydWU7CgkJCQkJCQkJfSBlbHNlIHsKCQkJCQkJCQkJY3VyTG9vcFtpXSA9IGZhbHNlOwoJCQkJCQkJCX0KCQkJCQkJCX0gZWxzZSBpZiAoIHBhc3MgKSB7CgkJCQkJCQkJcmVzdWx0LnB1c2goIGl0ZW0gKTsKCQkJCQkJCQlhbnlGb3VuZCA9IHRydWU7CgkJCQkJCQl9CgkJCQkJCX0KCQkJCQl9CgkJCQl9CgoJCQkJaWYgKCBmb3VuZCAhPT0gdW5kZWZpbmVkICkgewoJCQkJCWlmICggIWlucGxhY2UgKSB7CgkJCQkJCWN1ckxvb3AgPSByZXN1bHQ7CgkJCQkJfQoKCQkJCQlleHByID0gZXhwci5yZXBsYWNlKCBFeHByLm1hdGNoWyB0eXBlIF0sICIiICk7CgoJCQkJCWlmICggIWFueUZvdW5kICkgewoJCQkJCQlyZXR1cm4gW107CgkJCQkJfQoKCQkJCQlicmVhazsKCQkJCX0KCQkJfQoJCX0KCgkJaWYgKCBleHByID09IG9sZCApIHsKCQkJaWYgKCBhbnlGb3VuZCA9PSBudWxsICkgewoJCQkJdGhyb3cgIlN5bnRheCBlcnJvciwgdW5yZWNvZ25pemVkIGV4cHJlc3Npb246ICIgKyBleHByOwoJCQl9IGVsc2UgewoJCQkJYnJlYWs7CgkJCX0KCQl9CgoJCW9sZCA9IGV4cHI7Cgl9CgoJcmV0dXJuIGN1ckxvb3A7Cn07Cgp2YXIgRXhwciA9IFNpenpsZS5zZWxlY3RvcnMgPSB7CglvcmRlcjogWyAiSUQiLCAiTkFNRSIsICJUQUciIF0sCgltYXRjaDogewoJCUlEOiAvIygoPzpbXHdcdTAwYzAtXHVGRkZGLV18XFwuKSspLywKCQlDTEFTUzogL1wuKCg/Oltcd1x1MDBjMC1cdUZGRkYtXXxcXC4pKykvLAoJCU5BTUU6IC9cW25hbWU9WyciXSooKD86W1x3XHUwMGMwLVx1RkZGRi1dfFxcLikrKVsnIl0qXF0vLAoJCUFUVFI6IC9cW1xzKigoPzpbXHdcdTAwYzAtXHVGRkZGLV18XFwuKSspXHMqKD86KFxTPz0pXHMqKFsnIl0qKSguKj8pXDN8KVxzKlxdLywKCQlUQUc6IC9eKCg/Oltcd1x1MDBjMC1cdUZGRkZcKi1dfFxcLikrKS8sCgkJQ0hJTEQ6IC86KG9ubHl8bnRofGxhc3R8Zmlyc3QpLWNoaWxkKD86XCgoZXZlbnxvZGR8W1xkbistXSopXCkpPy8sCgkJUE9TOiAvOihudGh8ZXF8Z3R8bHR8Zmlyc3R8bGFzdHxldmVufG9kZCkoPzpcKChcZCopXCkpPyg/PVteLV18JCkvLAoJCVBTRVVETzogLzooKD86W1x3XHUwMGMwLVx1RkZGRi1dfFxcLikrKSg/OlwoKFsnIl0qKSgoPzpcKFteXCldK1wpfFteXDJcKFwpXSopKylcMlwpKT8vCgl9LAoJbGVmdE1hdGNoOiB7fSwKCWF0dHJNYXA6IHsKCQkiY2xhc3MiOiAiY2xhc3NOYW1lIiwKCQkiZm9yIjogImh0bWxGb3IiCgl9LAoJYXR0ckhhbmRsZTogewoJCWhyZWY6IGZ1bmN0aW9uKGVsZW0pewoJCQlyZXR1cm4gZWxlbS5nZXRBdHRyaWJ1dGUoImhyZWYiKTsKCQl9Cgl9LAoJcmVsYXRpdmU6IHsKCQkiKyI6IGZ1bmN0aW9uKGNoZWNrU2V0LCBwYXJ0LCBpc1hNTCl7CgkJCXZhciBpc1BhcnRTdHIgPSB0eXBlb2YgcGFydCA9PT0gInN0cmluZyIsCgkJCQlpc1RhZyA9IGlzUGFydFN0ciAmJiAhL1xXLy50ZXN0KHBhcnQpLAoJCQkJaXNQYXJ0U3RyTm90VGFnID0gaXNQYXJ0U3RyICYmICFpc1RhZzsKCgkJCWlmICggaXNUYWcgJiYgIWlzWE1MICkgewoJCQkJcGFydCA9IHBhcnQudG9VcHBlckNhc2UoKTsKCQkJfQoKCQkJZm9yICggdmFyIGkgPSAwLCBsID0gY2hlY2tTZXQubGVuZ3RoLCBlbGVtOyBpIDwgbDsgaSsrICkgewoJCQkJaWYgKCAoZWxlbSA9IGNoZWNrU2V0W2ldKSApIHsKCQkJCQl3aGlsZSAoIChlbGVtID0gZWxlbS5wcmV2aW91c1NpYmxpbmcpICYmIGVsZW0ubm9kZVR5cGUgIT09IDEgKSB7fQoKCQkJCQljaGVja1NldFtpXSA9IGlzUGFydFN0ck5vdFRhZyB8fCBlbGVtICYmIGVsZW0ubm9kZU5hbWUgPT09IHBhcnQgPwoJCQkJCQllbGVtIHx8IGZhbHNlIDoKCQkJCQkJZWxlbSA9PT0gcGFydDsKCQkJCX0KCQkJfQoKCQkJaWYgKCBpc1BhcnRTdHJOb3RUYWcgKSB7CgkJCQlTaXp6bGUuZmlsdGVyKCBwYXJ0LCBjaGVja1NldCwgdHJ1ZSApOwoJCQl9CgkJfSwKCQkiPiI6IGZ1bmN0aW9uKGNoZWNrU2V0LCBwYXJ0LCBpc1hNTCl7CgkJCXZhciBpc1BhcnRTdHIgPSB0eXBlb2YgcGFydCA9PT0gInN0cmluZyI7CgoJCQlpZiAoIGlzUGFydFN0ciAmJiAhL1xXLy50ZXN0KHBhcnQpICkgewoJCQkJcGFydCA9IGlzWE1MID8gcGFydCA6IHBhcnQudG9VcHBlckNhc2UoKTsKCgkJCQlmb3IgKCB2YXIgaSA9IDAsIGwgPSBjaGVja1NldC5sZW5ndGg7IGkgPCBsOyBpKysgKSB7CgkJCQkJdmFyIGVsZW0gPSBjaGVja1NldFtpXTsKCQkJCQlpZiAoIGVsZW0gKSB7CgkJCQkJCXZhciBwYXJlbnQgPSBlbGVtLnBhcmVudE5vZGU7CgkJCQkJCWNoZWNrU2V0W2ldID0gcGFyZW50Lm5vZGVOYW1lID09PSBwYXJ0ID8gcGFyZW50IDogZmFsc2U7CgkJCQkJfQoJCQkJfQoJCQl9IGVsc2UgewoJCQkJZm9yICggdmFyIGkgPSAwLCBsID0gY2hlY2tTZXQubGVuZ3RoOyBpIDwgbDsgaSsrICkgewoJCQkJCXZhciBlbGVtID0gY2hlY2tTZXRbaV07CgkJCQkJaWYgKCBlbGVtICkgewoJCQkJCQljaGVja1NldFtpXSA9IGlzUGFydFN0ciA/CgkJCQkJCQllbGVtLnBhcmVudE5vZGUgOgoJCQkJCQkJZWxlbS5wYXJlbnROb2RlID09PSBwYXJ0OwoJCQkJCX0KCQkJCX0KCgkJCQlpZiAoIGlzUGFydFN0ciApIHsKCQkJCQlTaXp6bGUuZmlsdGVyKCBwYXJ0LCBjaGVja1NldCwgdHJ1ZSApOwoJCQkJfQoJCQl9CgkJfSwKCQkiIjogZnVuY3Rpb24oY2hlY2tTZXQsIHBhcnQsIGlzWE1MKXsKCQkJdmFyIGRvbmVOYW1lID0gZG9uZSsrLCBjaGVja0ZuID0gZGlyQ2hlY2s7CgoJCQlpZiAoICEvXFcvLnRlc3QocGFydCkgKSB7CgkJCQl2YXIgbm9kZUNoZWNrID0gcGFydCA9IGlzWE1MID8gcGFydCA6IHBhcnQudG9VcHBlckNhc2UoKTsKCQkJCWNoZWNrRm4gPSBkaXJOb2RlQ2hlY2s7CgkJCX0KCgkJCWNoZWNrRm4oInBhcmVudE5vZGUiLCBwYXJ0LCBkb25lTmFtZSwgY2hlY2tTZXQsIG5vZGVDaGVjaywgaXNYTUwpOwoJCX0sCgkJIn4iOiBmdW5jdGlvbihjaGVja1NldCwgcGFydCwgaXNYTUwpewoJCQl2YXIgZG9uZU5hbWUgPSBkb25lKyssIGNoZWNrRm4gPSBkaXJDaGVjazsKCgkJCWlmICggdHlwZW9mIHBhcnQgPT09ICJzdHJpbmciICYmICEvXFcvLnRlc3QocGFydCkgKSB7CgkJCQl2YXIgbm9kZUNoZWNrID0gcGFydCA9IGlzWE1MID8gcGFydCA6IHBhcnQudG9VcHBlckNhc2UoKTsKCQkJCWNoZWNrRm4gPSBkaXJOb2RlQ2hlY2s7CgkJCX0KCgkJCWNoZWNrRm4oInByZXZpb3VzU2libGluZyIsIHBhcnQsIGRvbmVOYW1lLCBjaGVja1NldCwgbm9kZUNoZWNrLCBpc1hNTCk7CgkJfQoJfSwKCWZpbmQ6IHsKCQlJRDogZnVuY3Rpb24obWF0Y2gsIGNvbnRleHQsIGlzWE1MKXsKCQkJaWYgKCB0eXBlb2YgY29udGV4dC5nZXRFbGVtZW50QnlJZCAhPT0gInVuZGVmaW5lZCIgJiYgIWlzWE1MICkgewoJCQkJdmFyIG0gPSBjb250ZXh0LmdldEVsZW1lbnRCeUlkKG1hdGNoWzFdKTsKCQkJCXJldHVybiBtID8gW21dIDogW107CgkJCX0KCQl9LAoJCU5BTUU6IGZ1bmN0aW9uKG1hdGNoLCBjb250ZXh0LCBpc1hNTCl7CgkJCWlmICggdHlwZW9mIGNvbnRleHQuZ2V0RWxlbWVudHNCeU5hbWUgIT09ICJ1bmRlZmluZWQiICkgewoJCQkJdmFyIHJldCA9IFtdLCByZXN1bHRzID0gY29udGV4dC5nZXRFbGVtZW50c0J5TmFtZShtYXRjaFsxXSk7CgoJCQkJZm9yICggdmFyIGkgPSAwLCBsID0gcmVzdWx0cy5sZW5ndGg7IGkgPCBsOyBpKysgKSB7CgkJCQkJaWYgKCByZXN1bHRzW2ldLmdldEF0dHJpYnV0ZSgibmFtZSIpID09PSBtYXRjaFsxXSApIHsKCQkJCQkJcmV0LnB1c2goIHJlc3VsdHNbaV0gKTsKCQkJCQl9CgkJCQl9CgoJCQkJcmV0dXJuIHJldC5sZW5ndGggPT09IDAgPyBudWxsIDogcmV0OwoJCQl9CgkJfSwKCQlUQUc6IGZ1bmN0aW9uKG1hdGNoLCBjb250ZXh0KXsKCQkJcmV0dXJuIGNvbnRleHQuZ2V0RWxlbWVudHNCeVRhZ05hbWUobWF0Y2hbMV0pOwoJCX0KCX0sCglwcmVGaWx0ZXI6IHsKCQlDTEFTUzogZnVuY3Rpb24obWF0Y2gsIGN1ckxvb3AsIGlucGxhY2UsIHJlc3VsdCwgbm90LCBpc1hNTCl7CgkJCW1hdGNoID0gIiAiICsgbWF0Y2hbMV0ucmVwbGFjZSgvXFwvZywgIiIpICsgIiAiOwoKCQkJaWYgKCBpc1hNTCApIHsKCQkJCXJldHVybiBtYXRjaDsKCQkJfQoKCQkJZm9yICggdmFyIGkgPSAwLCBlbGVtOyAoZWxlbSA9IGN1ckxvb3BbaV0pICE9IG51bGw7IGkrKyApIHsKCQkJCWlmICggZWxlbSApIHsKCQkJCQlpZiAoIG5vdCBeIChlbGVtLmNsYXNzTmFtZSAmJiAoIiAiICsgZWxlbS5jbGFzc05hbWUgKyAiICIpLmluZGV4T2YobWF0Y2gpID49IDApICkgewoJCQkJCQlpZiAoICFpbnBsYWNlICkKCQkJCQkJCXJlc3VsdC5wdXNoKCBlbGVtICk7CgkJCQkJfSBlbHNlIGlmICggaW5wbGFjZSApIHsKCQkJCQkJY3VyTG9vcFtpXSA9IGZhbHNlOwoJCQkJCX0KCQkJCX0KCQkJfQoKCQkJcmV0dXJuIGZhbHNlOwoJCX0sCgkJSUQ6IGZ1bmN0aW9uKG1hdGNoKXsKCQkJcmV0dXJuIG1hdGNoWzFdLnJlcGxhY2UoL1xcL2csICIiKTsKCQl9LAoJCVRBRzogZnVuY3Rpb24obWF0Y2gsIGN1ckxvb3ApewoJCQlmb3IgKCB2YXIgaSA9IDA7IGN1ckxvb3BbaV0gPT09IGZhbHNlOyBpKysgKXt9CgkJCXJldHVybiBjdXJMb29wW2ldICYmIGlzWE1MKGN1ckxvb3BbaV0pID8gbWF0Y2hbMV0gOiBtYXRjaFsxXS50b1VwcGVyQ2FzZSgpOwoJCX0sCgkJQ0hJTEQ6IGZ1bmN0aW9uKG1hdGNoKXsKCQkJaWYgKCBtYXRjaFsxXSA9PSAibnRoIiApIHsKCQkJCXZhciB0ZXN0ID0gLygtPykoXGQqKW4oKD86XCt8LSk/XGQqKS8uZXhlYygKCQkJCQltYXRjaFsyXSA9PSAiZXZlbiIgJiYgIjJuIiB8fCBtYXRjaFsyXSA9PSAib2RkIiAmJiAiMm4rMSIgfHwKCQkJCQkhL1xELy50ZXN0KCBtYXRjaFsyXSApICYmICIwbisiICsgbWF0Y2hbMl0gfHwgbWF0Y2hbMl0pOwoKCQkJCW1hdGNoWzJdID0gKHRlc3RbMV0gKyAodGVzdFsyXSB8fCAxKSkgLSAwOwoJCQkJbWF0Y2hbM10gPSB0ZXN0WzNdIC0gMDsKCQkJfQoKCQkJbWF0Y2hbMF0gPSBkb25lKys7CgoJCQlyZXR1cm4gbWF0Y2g7CgkJfSwKCQlBVFRSOiBmdW5jdGlvbihtYXRjaCwgY3VyTG9vcCwgaW5wbGFjZSwgcmVzdWx0LCBub3QsIGlzWE1MKXsKCQkJdmFyIG5hbWUgPSBtYXRjaFsxXS5yZXBsYWNlKC9cXC9nLCAiIik7CgoJCQlpZiAoICFpc1hNTCAmJiBFeHByLmF0dHJNYXBbbmFtZV0gKSB7CgkJCQltYXRjaFsxXSA9IEV4cHIuYXR0ck1hcFtuYW1lXTsKCQkJfQoKCQkJaWYgKCBtYXRjaFsyXSA9PT0gIn49IiApIHsKCQkJCW1hdGNoWzRdID0gIiAiICsgbWF0Y2hbNF0gKyAiICI7CgkJCX0KCgkJCXJldHVybiBtYXRjaDsKCQl9LAoJCVBTRVVETzogZnVuY3Rpb24obWF0Y2gsIGN1ckxvb3AsIGlucGxhY2UsIHJlc3VsdCwgbm90KXsKCQkJaWYgKCBtYXRjaFsxXSA9PT0gIm5vdCIgKSB7CgkJCQlpZiAoICggY2h1bmtlci5leGVjKG1hdGNoWzNdKSB8fCAiIiApLmxlbmd0aCA+IDEgfHwgL15cdy8udGVzdChtYXRjaFszXSkgKSB7CgkJCQkJbWF0Y2hbM10gPSBTaXp6bGUobWF0Y2hbM10sIG51bGwsIG51bGwsIGN1ckxvb3ApOwoJCQkJfSBlbHNlIHsKCQkJCQl2YXIgcmV0ID0gU2l6emxlLmZpbHRlcihtYXRjaFszXSwgY3VyTG9vcCwgaW5wbGFjZSwgdHJ1ZSBeIG5vdCk7CgkJCQkJaWYgKCAhaW5wbGFjZSApIHsKCQkJCQkJcmVzdWx0LnB1c2guYXBwbHkoIHJlc3VsdCwgcmV0ICk7CgkJCQkJfQoJCQkJCXJldHVybiBmYWxzZTsKCQkJCX0KCQkJfSBlbHNlIGlmICggRXhwci5tYXRjaC5QT1MudGVzdCggbWF0Y2hbMF0gKSB8fCBFeHByLm1hdGNoLkNISUxELnRlc3QoIG1hdGNoWzBdICkgKSB7CgkJCQlyZXR1cm4gdHJ1ZTsKCQkJfQoKCQkJcmV0dXJuIG1hdGNoOwoJCX0sCgkJUE9TOiBmdW5jdGlvbihtYXRjaCl7CgkJCW1hdGNoLnVuc2hpZnQoIHRydWUgKTsKCQkJcmV0dXJuIG1hdGNoOwoJCX0KCX0sCglmaWx0ZXJzOiB7CgkJZW5hYmxlZDogZnVuY3Rpb24oZWxlbSl7CgkJCXJldHVybiBlbGVtLmRpc2FibGVkID09PSBmYWxzZSAmJiBlbGVtLnR5cGUgIT09ICJoaWRkZW4iOwoJCX0sCgkJZGlzYWJsZWQ6IGZ1bmN0aW9uKGVsZW0pewoJCQlyZXR1cm4gZWxlbS5kaXNhYmxlZCA9PT0gdHJ1ZTsKCQl9LAoJCWNoZWNrZWQ6IGZ1bmN0aW9uKGVsZW0pewoJCQlyZXR1cm4gZWxlbS5jaGVja2VkID09PSB0cnVlOwoJCX0sCgkJc2VsZWN0ZWQ6IGZ1bmN0aW9uKGVsZW0pewoJCQllbGVtLnBhcmVudE5vZGUuc2VsZWN0ZWRJbmRleDsKCQkJcmV0dXJuIGVsZW0uc2VsZWN0ZWQgPT09IHRydWU7CgkJfSwKCQlwYXJlbnQ6IGZ1bmN0aW9uKGVsZW0pewoJCQlyZXR1cm4gISFlbGVtLmZpcnN0Q2hpbGQ7CgkJfSwKCQllbXB0eTogZnVuY3Rpb24oZWxlbSl7CgkJCXJldHVybiAhZWxlbS5maXJzdENoaWxkOwoJCX0sCgkJaGFzOiBmdW5jdGlvbihlbGVtLCBpLCBtYXRjaCl7CgkJCXJldHVybiAhIVNpenpsZSggbWF0Y2hbM10sIGVsZW0gKS5sZW5ndGg7CgkJfSwKCQloZWFkZXI6IGZ1bmN0aW9uKGVsZW0pewoJCQlyZXR1cm4gL2hcZC9pLnRlc3QoIGVsZW0ubm9kZU5hbWUgKTsKCQl9LAoJCXRleHQ6IGZ1bmN0aW9uKGVsZW0pewoJCQlyZXR1cm4gInRleHQiID09PSBlbGVtLnR5cGU7CgkJfSwKCQlyYWRpbzogZnVuY3Rpb24oZWxlbSl7CgkJCXJldHVybiAicmFkaW8iID09PSBlbGVtLnR5cGU7CgkJfSwKCQljaGVja2JveDogZnVuY3Rpb24oZWxlbSl7CgkJCXJldHVybiAiY2hlY2tib3giID09PSBlbGVtLnR5cGU7CgkJfSwKCQlmaWxlOiBmdW5jdGlvbihlbGVtKXsKCQkJcmV0dXJuICJmaWxlIiA9PT0gZWxlbS50eXBlOwoJCX0sCgkJcGFzc3dvcmQ6IGZ1bmN0aW9uKGVsZW0pewoJCQlyZXR1cm4gInBhc3N3b3JkIiA9PT0gZWxlbS50eXBlOwoJCX0sCgkJc3VibWl0OiBmdW5jdGlvbihlbGVtKXsKCQkJcmV0dXJuICJzdWJtaXQiID09PSBlbGVtLnR5cGU7CgkJfSwKCQlpbWFnZTogZnVuY3Rpb24oZWxlbSl7CgkJCXJldHVybiAiaW1hZ2UiID09PSBlbGVtLnR5cGU7CgkJfSwKCQlyZXNldDogZnVuY3Rpb24oZWxlbSl7CgkJCXJldHVybiAicmVzZXQiID09PSBlbGVtLnR5cGU7CgkJfSwKCQlidXR0b246IGZ1bmN0aW9uKGVsZW0pewoJCQlyZXR1cm4gImJ1dHRvbiIgPT09IGVsZW0udHlwZSB8fCBlbGVtLm5vZGVOYW1lLnRvVXBwZXJDYXNlKCkgPT09ICJCVVRUT04iOwoJCX0sCgkJaW5wdXQ6IGZ1bmN0aW9uKGVsZW0pewoJCQlyZXR1cm4gL2lucHV0fHNlbGVjdHx0ZXh0YXJlYXxidXR0b24vaS50ZXN0KGVsZW0ubm9kZU5hbWUpOwoJCX0KCX0sCglzZXRGaWx0ZXJzOiB7CgkJZmlyc3Q6IGZ1bmN0aW9uKGVsZW0sIGkpewoJCQlyZXR1cm4gaSA9PT0gMDsKCQl9LAoJCWxhc3Q6IGZ1bmN0aW9uKGVsZW0sIGksIG1hdGNoLCBhcnJheSl7CgkJCXJldHVybiBpID09PSBhcnJheS5sZW5ndGggLSAxOwoJCX0sCgkJZXZlbjogZnVuY3Rpb24oZWxlbSwgaSl7CgkJCXJldHVybiBpICUgMiA9PT0gMDsKCQl9LAoJCW9kZDogZnVuY3Rpb24oZWxlbSwgaSl7CgkJCXJldHVybiBpICUgMiA9PT0gMTsKCQl9LAoJCWx0OiBmdW5jdGlvbihlbGVtLCBpLCBtYXRjaCl7CgkJCXJldHVybiBpIDwgbWF0Y2hbM10gLSAwOwoJCX0sCgkJZ3Q6IGZ1bmN0aW9uKGVsZW0sIGksIG1hdGNoKXsKCQkJcmV0dXJuIGkgPiBtYXRjaFszXSAtIDA7CgkJfSwKCQludGg6IGZ1bmN0aW9uKGVsZW0sIGksIG1hdGNoKXsKCQkJcmV0dXJuIG1hdGNoWzNdIC0gMCA9PSBpOwoJCX0sCgkJZXE6IGZ1bmN0aW9uKGVsZW0sIGksIG1hdGNoKXsKCQkJcmV0dXJuIG1hdGNoWzNdIC0gMCA9PSBpOwoJCX0KCX0sCglmaWx0ZXI6IHsKCQlQU0VVRE86IGZ1bmN0aW9uKGVsZW0sIG1hdGNoLCBpLCBhcnJheSl7CgkJCXZhciBuYW1lID0gbWF0Y2hbMV0sIGZpbHRlciA9IEV4cHIuZmlsdGVyc1sgbmFtZSBdOwoKCQkJaWYgKCBmaWx0ZXIgKSB7CgkJCQlyZXR1cm4gZmlsdGVyKCBlbGVtLCBpLCBtYXRjaCwgYXJyYXkgKTsKCQkJfSBlbHNlIGlmICggbmFtZSA9PT0gImNvbnRhaW5zIiApIHsKCQkJCXJldHVybiAoZWxlbS50ZXh0Q29udGVudCB8fCBlbGVtLmlubmVyVGV4dCB8fCAiIikuaW5kZXhPZihtYXRjaFszXSkgPj0gMDsKCQkJfSBlbHNlIGlmICggbmFtZSA9PT0gIm5vdCIgKSB7CgkJCQl2YXIgbm90ID0gbWF0Y2hbM107CgoJCQkJZm9yICggdmFyIGkgPSAwLCBsID0gbm90Lmxlbmd0aDsgaSA8IGw7IGkrKyApIHsKCQkJCQlpZiAoIG5vdFtpXSA9PT0gZWxlbSApIHsKCQkJCQkJcmV0dXJuIGZhbHNlOwoJCQkJCX0KCQkJCX0KCgkJCQlyZXR1cm4gdHJ1ZTsKCQkJfQoJCX0sCgkJQ0hJTEQ6IGZ1bmN0aW9uKGVsZW0sIG1hdGNoKXsKCQkJdmFyIHR5cGUgPSBtYXRjaFsxXSwgbm9kZSA9IGVsZW07CgkJCXN3aXRjaCAodHlwZSkgewoJCQkJY2FzZSAnb25seSc6CgkJCQljYXNlICdmaXJzdCc6CgkJCQkJd2hpbGUgKCAobm9kZSA9IG5vZGUucHJldmlvdXNTaWJsaW5nKSApICB7CgkJCQkJCWlmICggbm9kZS5ub2RlVHlwZSA9PT0gMSApIHJldHVybiBmYWxzZTsKCQkJCQl9CgkJCQkJaWYgKCB0eXBlID09ICdmaXJzdCcpIHJldHVybiB0cnVlOwoJCQkJCW5vZGUgPSBlbGVtOwoJCQkJY2FzZSAnbGFzdCc6CgkJCQkJd2hpbGUgKCAobm9kZSA9IG5vZGUubmV4dFNpYmxpbmcpICkgIHsKCQkJCQkJaWYgKCBub2RlLm5vZGVUeXBlID09PSAxICkgcmV0dXJuIGZhbHNlOwoJCQkJCX0KCQkJCQlyZXR1cm4gdHJ1ZTsKCQkJCWNhc2UgJ250aCc6CgkJCQkJdmFyIGZpcnN0ID0gbWF0Y2hbMl0sIGxhc3QgPSBtYXRjaFszXTsKCgkJCQkJaWYgKCBmaXJzdCA9PSAxICYmIGxhc3QgPT0gMCApIHsKCQkJCQkJcmV0dXJuIHRydWU7CgkJCQkJfQoKCQkJCQl2YXIgZG9uZU5hbWUgPSBtYXRjaFswXSwKCQkJCQkJcGFyZW50ID0gZWxlbS5wYXJlbnROb2RlOwoKCQkJCQlpZiAoIHBhcmVudCAmJiAocGFyZW50LnNpemNhY2hlICE9PSBkb25lTmFtZSB8fCAhZWxlbS5ub2RlSW5kZXgpICkgewoJCQkJCQl2YXIgY291bnQgPSAwOwoJCQkJCQlmb3IgKCBub2RlID0gcGFyZW50LmZpcnN0Q2hpbGQ7IG5vZGU7IG5vZGUgPSBub2RlLm5leHRTaWJsaW5nICkgewoJCQkJCQkJaWYgKCBub2RlLm5vZGVUeXBlID09PSAxICkgewoJCQkJCQkJCW5vZGUubm9kZUluZGV4ID0gKytjb3VudDsKCQkJCQkJCX0KCQkJCQkJfQoJCQkJCQlwYXJlbnQuc2l6Y2FjaGUgPSBkb25lTmFtZTsKCQkJCQl9CgoJCQkJCXZhciBkaWZmID0gZWxlbS5ub2RlSW5kZXggLSBsYXN0OwoJCQkJCWlmICggZmlyc3QgPT0gMCApIHsKCQkJCQkJcmV0dXJuIGRpZmYgPT0gMDsKCQkJCQl9IGVsc2UgewoJCQkJCQlyZXR1cm4gKCBkaWZmICUgZmlyc3QgPT0gMCAmJiBkaWZmIC8gZmlyc3QgPj0gMCApOwoJCQkJCX0KCQkJfQoJCX0sCgkJSUQ6IGZ1bmN0aW9uKGVsZW0sIG1hdGNoKXsKCQkJcmV0dXJuIGVsZW0ubm9kZVR5cGUgPT09IDEgJiYgZWxlbS5nZXRBdHRyaWJ1dGUoImlkIikgPT09IG1hdGNoOwoJCX0sCgkJVEFHOiBmdW5jdGlvbihlbGVtLCBtYXRjaCl7CgkJCXJldHVybiAobWF0Y2ggPT09ICIqIiAmJiBlbGVtLm5vZGVUeXBlID09PSAxKSB8fCBlbGVtLm5vZGVOYW1lID09PSBtYXRjaDsKCQl9LAoJCUNMQVNTOiBmdW5jdGlvbihlbGVtLCBtYXRjaCl7CgkJCXJldHVybiAoIiAiICsgKGVsZW0uY2xhc3NOYW1lIHx8IGVsZW0uZ2V0QXR0cmlidXRlKCJjbGFzcyIpKSArICIgIikKCQkJCS5pbmRleE9mKCBtYXRjaCApID4gLTE7CgkJfSwKCQlBVFRSOiBmdW5jdGlvbihlbGVtLCBtYXRjaCl7CgkJCXZhciBuYW1lID0gbWF0Y2hbMV0sCgkJCQlyZXN1bHQgPSBFeHByLmF0dHJIYW5kbGVbIG5hbWUgXSA/CgkJCQkJRXhwci5hdHRySGFuZGxlWyBuYW1lIF0oIGVsZW0gKSA6CgkJCQkJZWxlbVsgbmFtZSBdICE9IG51bGwgPwoJCQkJCQllbGVtWyBuYW1lIF0gOgoJCQkJCQllbGVtLmdldEF0dHJpYnV0ZSggbmFtZSApLAoJCQkJdmFsdWUgPSByZXN1bHQgKyAiIiwKCQkJCXR5cGUgPSBtYXRjaFsyXSwKCQkJCWNoZWNrID0gbWF0Y2hbNF07CgoJCQlyZXR1cm4gcmVzdWx0ID09IG51bGwgPwoJCQkJdHlwZSA9PT0gIiE9IiA6CgkJCQl0eXBlID09PSAiPSIgPwoJCQkJdmFsdWUgPT09IGNoZWNrIDoKCQkJCXR5cGUgPT09ICIqPSIgPwoJCQkJdmFsdWUuaW5kZXhPZihjaGVjaykgPj0gMCA6CgkJCQl0eXBlID09PSAifj0iID8KCQkJCSgiICIgKyB2YWx1ZSArICIgIikuaW5kZXhPZihjaGVjaykgPj0gMCA6CgkJCQkhY2hlY2sgPwoJCQkJdmFsdWUgJiYgcmVzdWx0ICE9PSBmYWxzZSA6CgkJCQl0eXBlID09PSAiIT0iID8KCQkJCXZhbHVlICE9IGNoZWNrIDoKCQkJCXR5cGUgPT09ICJePSIgPwoJCQkJdmFsdWUuaW5kZXhPZihjaGVjaykgPT09IDAgOgoJCQkJdHlwZSA9PT0gIiQ9IiA/CgkJCQl2YWx1ZS5zdWJzdHIodmFsdWUubGVuZ3RoIC0gY2hlY2subGVuZ3RoKSA9PT0gY2hlY2sgOgoJCQkJdHlwZSA9PT0gInw9IiA/CgkJCQl2YWx1ZSA9PT0gY2hlY2sgfHwgdmFsdWUuc3Vic3RyKDAsIGNoZWNrLmxlbmd0aCArIDEpID09PSBjaGVjayArICItIiA6CgkJCQlmYWxzZTsKCQl9LAoJCVBPUzogZnVuY3Rpb24oZWxlbSwgbWF0Y2gsIGksIGFycmF5KXsKCQkJdmFyIG5hbWUgPSBtYXRjaFsyXSwgZmlsdGVyID0gRXhwci5zZXRGaWx0ZXJzWyBuYW1lIF07CgoJCQlpZiAoIGZpbHRlciApIHsKCQkJCXJldHVybiBmaWx0ZXIoIGVsZW0sIGksIG1hdGNoLCBhcnJheSApOwoJCQl9CgkJfQoJfQp9OwoKdmFyIG9yaWdQT1MgPSBFeHByLm1hdGNoLlBPUzsKCmZvciAoIHZhciB0eXBlIGluIEV4cHIubWF0Y2ggKSB7CglFeHByLm1hdGNoWyB0eXBlIF0gPSBuZXcgUmVnRXhwKCBFeHByLm1hdGNoWyB0eXBlIF0uc291cmNlICsgLyg/IVteXFtdKlxdKSg/IVteXChdKlwpKS8uc291cmNlICk7CglFeHByLmxlZnRNYXRjaFsgdHlwZSBdID0gbmV3IFJlZ0V4cCggLyheKD86LnxccnxcbikqPykvLnNvdXJjZSArIEV4cHIubWF0Y2hbIHR5cGUgXS5zb3VyY2UgKTsKfQoKdmFyIG1ha2VBcnJheSA9IGZ1bmN0aW9uKGFycmF5LCByZXN1bHRzKSB7CglhcnJheSA9IEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKCBhcnJheSwgMCApOwoKCWlmICggcmVzdWx0cyApIHsKCQlyZXN1bHRzLnB1c2guYXBwbHkoIHJlc3VsdHMsIGFycmF5ICk7CgkJcmV0dXJuIHJlc3VsdHM7Cgl9CgoJcmV0dXJuIGFycmF5Owp9OwoKdHJ5IHsKCUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKCBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2hpbGROb2RlcywgMCApOwoKfSBjYXRjaChlKXsKCW1ha2VBcnJheSA9IGZ1bmN0aW9uKGFycmF5LCByZXN1bHRzKSB7CgkJdmFyIHJldCA9IHJlc3VsdHMgfHwgW107CgoJCWlmICggdG9TdHJpbmcuY2FsbChhcnJheSkgPT09ICJbb2JqZWN0IEFycmF5XSIgKSB7CgkJCUFycmF5LnByb3RvdHlwZS5wdXNoLmFwcGx5KCByZXQsIGFycmF5ICk7CgkJfSBlbHNlIHsKCQkJaWYgKCB0eXBlb2YgYXJyYXkubGVuZ3RoID09PSAibnVtYmVyIiApIHsKCQkJCWZvciAoIHZhciBpID0gMCwgbCA9IGFycmF5Lmxlbmd0aDsgaSA8IGw7IGkrKyApIHsKCQkJCQlyZXQucHVzaCggYXJyYXlbaV0gKTsKCQkJCX0KCQkJfSBlbHNlIHsKCQkJCWZvciAoIHZhciBpID0gMDsgYXJyYXlbaV07IGkrKyApIHsKCQkJCQlyZXQucHVzaCggYXJyYXlbaV0gKTsKCQkJCX0KCQkJfQoJCX0KCgkJcmV0dXJuIHJldDsKCX07Cn0KCnZhciBzb3J0T3JkZXI7CgppZiAoIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbiApIHsKCXNvcnRPcmRlciA9IGZ1bmN0aW9uKCBhLCBiICkgewoJCWlmICggIWEuY29tcGFyZURvY3VtZW50UG9zaXRpb24gfHwgIWIuY29tcGFyZURvY3VtZW50UG9zaXRpb24gKSB7CgkJCWlmICggYSA9PSBiICkgewoJCQkJaGFzRHVwbGljYXRlID0gdHJ1ZTsKCQkJfQoJCQlyZXR1cm4gMDsKCQl9CgoJCXZhciByZXQgPSBhLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uKGIpICYgNCA/IC0xIDogYSA9PT0gYiA/IDAgOiAxOwoJCWlmICggcmV0ID09PSAwICkgewoJCQloYXNEdXBsaWNhdGUgPSB0cnVlOwoJCX0KCQlyZXR1cm4gcmV0OwoJfTsKfSBlbHNlIGlmICggInNvdXJjZUluZGV4IiBpbiBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQgKSB7Cglzb3J0T3JkZXIgPSBmdW5jdGlvbiggYSwgYiApIHsKCQlpZiAoICFhLnNvdXJjZUluZGV4IHx8ICFiLnNvdXJjZUluZGV4ICkgewoJCQlpZiAoIGEgPT0gYiApIHsKCQkJCWhhc0R1cGxpY2F0ZSA9IHRydWU7CgkJCX0KCQkJcmV0dXJuIDA7CgkJfQoKCQl2YXIgcmV0ID0gYS5zb3VyY2VJbmRleCAtIGIuc291cmNlSW5kZXg7CgkJaWYgKCByZXQgPT09IDAgKSB7CgkJCWhhc0R1cGxpY2F0ZSA9IHRydWU7CgkJfQoJCXJldHVybiByZXQ7Cgl9Owp9IGVsc2UgaWYgKCBkb2N1bWVudC5jcmVhdGVSYW5nZSApIHsKCXNvcnRPcmRlciA9IGZ1bmN0aW9uKCBhLCBiICkgewoJCWlmICggIWEub3duZXJEb2N1bWVudCB8fCAhYi5vd25lckRvY3VtZW50ICkgewoJCQlpZiAoIGEgPT0gYiApIHsKCQkJCWhhc0R1cGxpY2F0ZSA9IHRydWU7CgkJCX0KCQkJcmV0dXJuIDA7CgkJfQoKCQl2YXIgYVJhbmdlID0gYS5vd25lckRvY3VtZW50LmNyZWF0ZVJhbmdlKCksIGJSYW5nZSA9IGIub3duZXJEb2N1bWVudC5jcmVhdGVSYW5nZSgpOwoJCWFSYW5nZS5zZXRTdGFydChhLCAwKTsKCQlhUmFuZ2Uuc2V0RW5kKGEsIDApOwoJCWJSYW5nZS5zZXRTdGFydChiLCAwKTsKCQliUmFuZ2Uuc2V0RW5kKGIsIDApOwoJCXZhciByZXQgPSBhUmFuZ2UuY29tcGFyZUJvdW5kYXJ5UG9pbnRzKFJhbmdlLlNUQVJUX1RPX0VORCwgYlJhbmdlKTsKCQlpZiAoIHJldCA9PT0gMCApIHsKCQkJaGFzRHVwbGljYXRlID0gdHJ1ZTsKCQl9CgkJcmV0dXJuIHJldDsKCX07Cn0KCihmdW5jdGlvbigpewoJdmFyIGZvcm0gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKSwKCQlpZCA9ICJzY3JpcHQiICsgKG5ldyBEYXRlKS5nZXRUaW1lKCk7Cglmb3JtLmlubmVySFRNTCA9ICI8YSBuYW1lPSciICsgaWQgKyAiJy8+IjsKCgl2YXIgcm9vdCA9IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudDsKCXJvb3QuaW5zZXJ0QmVmb3JlKCBmb3JtLCByb290LmZpcnN0Q2hpbGQgKTsKCglpZiAoICEhZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoIGlkICkgKSB7CgkJRXhwci5maW5kLklEID0gZnVuY3Rpb24obWF0Y2gsIGNvbnRleHQsIGlzWE1MKXsKCQkJaWYgKCB0eXBlb2YgY29udGV4dC5nZXRFbGVtZW50QnlJZCAhPT0gInVuZGVmaW5lZCIgJiYgIWlzWE1MICkgewoJCQkJdmFyIG0gPSBjb250ZXh0LmdldEVsZW1lbnRCeUlkKG1hdGNoWzFdKTsKCQkJCXJldHVybiBtID8gbS5pZCA9PT0gbWF0Y2hbMV0gfHwgdHlwZW9mIG0uZ2V0QXR0cmlidXRlTm9kZSAhPT0gInVuZGVmaW5lZCIgJiYgbS5nZXRBdHRyaWJ1dGVOb2RlKCJpZCIpLm5vZGVWYWx1ZSA9PT0gbWF0Y2hbMV0gPyBbbV0gOiB1bmRlZmluZWQgOiBbXTsKCQkJfQoJCX07CgoJCUV4cHIuZmlsdGVyLklEID0gZnVuY3Rpb24oZWxlbSwgbWF0Y2gpewoJCQl2YXIgbm9kZSA9IHR5cGVvZiBlbGVtLmdldEF0dHJpYnV0ZU5vZGUgIT09ICJ1bmRlZmluZWQiICYmIGVsZW0uZ2V0QXR0cmlidXRlTm9kZSgiaWQiKTsKCQkJcmV0dXJuIGVsZW0ubm9kZVR5cGUgPT09IDEgJiYgbm9kZSAmJiBub2RlLm5vZGVWYWx1ZSA9PT0gbWF0Y2g7CgkJfTsKCX0KCglyb290LnJlbW92ZUNoaWxkKCBmb3JtICk7Cglyb290ID0gZm9ybSA9IG51bGw7IC8vIHJlbGVhc2UgbWVtb3J5IGluIElFCn0pKCk7CgooZnVuY3Rpb24oKXsKCgl2YXIgZGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2Iik7CglkaXYuYXBwZW5kQ2hpbGQoIGRvY3VtZW50LmNyZWF0ZUNvbW1lbnQoIiIpICk7CgoJaWYgKCBkaXYuZ2V0RWxlbWVudHNCeVRhZ05hbWUoIioiKS5sZW5ndGggPiAwICkgewoJCUV4cHIuZmluZC5UQUcgPSBmdW5jdGlvbihtYXRjaCwgY29udGV4dCl7CgkJCXZhciByZXN1bHRzID0gY29udGV4dC5nZXRFbGVtZW50c0J5VGFnTmFtZShtYXRjaFsxXSk7CgoJCQlpZiAoIG1hdGNoWzFdID09PSAiKiIgKSB7CgkJCQl2YXIgdG1wID0gW107CgoJCQkJZm9yICggdmFyIGkgPSAwOyByZXN1bHRzW2ldOyBpKysgKSB7CgkJCQkJaWYgKCByZXN1bHRzW2ldLm5vZGVUeXBlID09PSAxICkgewoJCQkJCQl0bXAucHVzaCggcmVzdWx0c1tpXSApOwoJCQkJCX0KCQkJCX0KCgkJCQlyZXN1bHRzID0gdG1wOwoJCQl9CgoJCQlyZXR1cm4gcmVzdWx0czsKCQl9OwoJfQoKCWRpdi5pbm5lckhUTUwgPSAiPGEgaHJlZj0nIyc+PC9hPiI7CglpZiAoIGRpdi5maXJzdENoaWxkICYmIHR5cGVvZiBkaXYuZmlyc3RDaGlsZC5nZXRBdHRyaWJ1dGUgIT09ICJ1bmRlZmluZWQiICYmCgkJCWRpdi5maXJzdENoaWxkLmdldEF0dHJpYnV0ZSgiaHJlZiIpICE9PSAiIyIgKSB7CgkJRXhwci5hdHRySGFuZGxlLmhyZWYgPSBmdW5jdGlvbihlbGVtKXsKCQkJcmV0dXJuIGVsZW0uZ2V0QXR0cmlidXRlKCJocmVmIiwgMik7CgkJfTsKCX0KCglkaXYgPSBudWxsOyAvLyByZWxlYXNlIG1lbW9yeSBpbiBJRQp9KSgpOwoKaWYgKCBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsICkgKGZ1bmN0aW9uKCl7Cgl2YXIgb2xkU2l6emxlID0gU2l6emxlLCBkaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKTsKCWRpdi5pbm5lckhUTUwgPSAiPHAgY2xhc3M9J1RFU1QnPjwvcD4iOwoKCWlmICggZGl2LnF1ZXJ5U2VsZWN0b3JBbGwgJiYgZGl2LnF1ZXJ5U2VsZWN0b3JBbGwoIi5URVNUIikubGVuZ3RoID09PSAwICkgewoJCXJldHVybjsKCX0KCglTaXp6bGUgPSBmdW5jdGlvbihxdWVyeSwgY29udGV4dCwgZXh0cmEsIHNlZWQpewoJCWNvbnRleHQgPSBjb250ZXh0IHx8IGRvY3VtZW50OwoKCQlpZiAoICFzZWVkICYmIGNvbnRleHQubm9kZVR5cGUgPT09IDkgJiYgIWlzWE1MKGNvbnRleHQpICkgewoJCQl0cnkgewoJCQkJcmV0dXJuIG1ha2VBcnJheSggY29udGV4dC5xdWVyeVNlbGVjdG9yQWxsKHF1ZXJ5KSwgZXh0cmEgKTsKCQkJfSBjYXRjaChlKXt9CgkJfQoKCQlyZXR1cm4gb2xkU2l6emxlKHF1ZXJ5LCBjb250ZXh0LCBleHRyYSwgc2VlZCk7Cgl9OwoKCWZvciAoIHZhciBwcm9wIGluIG9sZFNpenpsZSApIHsKCQlTaXp6bGVbIHByb3AgXSA9IG9sZFNpenpsZVsgcHJvcCBdOwoJfQoKCWRpdiA9IG51bGw7IC8vIHJlbGVhc2UgbWVtb3J5IGluIElFCn0pKCk7CgppZiAoIGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUgJiYgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUgKSAoZnVuY3Rpb24oKXsKCXZhciBkaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKTsKCWRpdi5pbm5lckhUTUwgPSAiPGRpdiBjbGFzcz0ndGVzdCBlJz48L2Rpdj48ZGl2IGNsYXNzPSd0ZXN0Jz48L2Rpdj4iOwoKCWlmICggZGl2LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoImUiKS5sZW5ndGggPT09IDAgKQoJCXJldHVybjsKCglkaXYubGFzdENoaWxkLmNsYXNzTmFtZSA9ICJlIjsKCglpZiAoIGRpdi5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCJlIikubGVuZ3RoID09PSAxICkKCQlyZXR1cm47CgoJRXhwci5vcmRlci5zcGxpY2UoMSwgMCwgIkNMQVNTIik7CglFeHByLmZpbmQuQ0xBU1MgPSBmdW5jdGlvbihtYXRjaCwgY29udGV4dCwgaXNYTUwpIHsKCQlpZiAoIHR5cGVvZiBjb250ZXh0LmdldEVsZW1lbnRzQnlDbGFzc05hbWUgIT09ICJ1bmRlZmluZWQiICYmICFpc1hNTCApIHsKCQkJcmV0dXJuIGNvbnRleHQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShtYXRjaFsxXSk7CgkJfQoJfTsKCglkaXYgPSBudWxsOyAvLyByZWxlYXNlIG1lbW9yeSBpbiBJRQp9KSgpOwoKZnVuY3Rpb24gZGlyTm9kZUNoZWNrKCBkaXIsIGN1ciwgZG9uZU5hbWUsIGNoZWNrU2V0LCBub2RlQ2hlY2ssIGlzWE1MICkgewoJdmFyIHNpYkRpciA9IGRpciA9PSAicHJldmlvdXNTaWJsaW5nIiAmJiAhaXNYTUw7Cglmb3IgKCB2YXIgaSA9IDAsIGwgPSBjaGVja1NldC5sZW5ndGg7IGkgPCBsOyBpKysgKSB7CgkJdmFyIGVsZW0gPSBjaGVja1NldFtpXTsKCQlpZiAoIGVsZW0gKSB7CgkJCWlmICggc2liRGlyICYmIGVsZW0ubm9kZVR5cGUgPT09IDEgKXsKCQkJCWVsZW0uc2l6Y2FjaGUgPSBkb25lTmFtZTsKCQkJCWVsZW0uc2l6c2V0ID0gaTsKCQkJfQoJCQllbGVtID0gZWxlbVtkaXJdOwoJCQl2YXIgbWF0Y2ggPSBmYWxzZTsKCgkJCXdoaWxlICggZWxlbSApIHsKCQkJCWlmICggZWxlbS5zaXpjYWNoZSA9PT0gZG9uZU5hbWUgKSB7CgkJCQkJbWF0Y2ggPSBjaGVja1NldFtlbGVtLnNpenNldF07CgkJCQkJYnJlYWs7CgkJCQl9CgoJCQkJaWYgKCBlbGVtLm5vZGVUeXBlID09PSAxICYmICFpc1hNTCApewoJCQkJCWVsZW0uc2l6Y2FjaGUgPSBkb25lTmFtZTsKCQkJCQllbGVtLnNpenNldCA9IGk7CgkJCQl9CgoJCQkJaWYgKCBlbGVtLm5vZGVOYW1lID09PSBjdXIgKSB7CgkJCQkJbWF0Y2ggPSBlbGVtOwoJCQkJCWJyZWFrOwoJCQkJfQoKCQkJCWVsZW0gPSBlbGVtW2Rpcl07CgkJCX0KCgkJCWNoZWNrU2V0W2ldID0gbWF0Y2g7CgkJfQoJfQp9CgpmdW5jdGlvbiBkaXJDaGVjayggZGlyLCBjdXIsIGRvbmVOYW1lLCBjaGVja1NldCwgbm9kZUNoZWNrLCBpc1hNTCApIHsKCXZhciBzaWJEaXIgPSBkaXIgPT0gInByZXZpb3VzU2libGluZyIgJiYgIWlzWE1MOwoJZm9yICggdmFyIGkgPSAwLCBsID0gY2hlY2tTZXQubGVuZ3RoOyBpIDwgbDsgaSsrICkgewoJCXZhciBlbGVtID0gY2hlY2tTZXRbaV07CgkJaWYgKCBlbGVtICkgewoJCQlpZiAoIHNpYkRpciAmJiBlbGVtLm5vZGVUeXBlID09PSAxICkgewoJCQkJZWxlbS5zaXpjYWNoZSA9IGRvbmVOYW1lOwoJCQkJZWxlbS5zaXpzZXQgPSBpOwoJCQl9CgkJCWVsZW0gPSBlbGVtW2Rpcl07CgkJCXZhciBtYXRjaCA9IGZhbHNlOwoKCQkJd2hpbGUgKCBlbGVtICkgewoJCQkJaWYgKCBlbGVtLnNpemNhY2hlID09PSBkb25lTmFtZSApIHsKCQkJCQltYXRjaCA9IGNoZWNrU2V0W2VsZW0uc2l6c2V0XTsKCQkJCQlicmVhazsKCQkJCX0KCgkJCQlpZiAoIGVsZW0ubm9kZVR5cGUgPT09IDEgKSB7CgkJCQkJaWYgKCAhaXNYTUwgKSB7CgkJCQkJCWVsZW0uc2l6Y2FjaGUgPSBkb25lTmFtZTsKCQkJCQkJZWxlbS5zaXpzZXQgPSBpOwoJCQkJCX0KCQkJCQlpZiAoIHR5cGVvZiBjdXIgIT09ICJzdHJpbmciICkgewoJCQkJCQlpZiAoIGVsZW0gPT09IGN1ciApIHsKCQkJCQkJCW1hdGNoID0gdHJ1ZTsKCQkJCQkJCWJyZWFrOwoJCQkJCQl9CgoJCQkJCX0gZWxzZSBpZiAoIFNpenpsZS5maWx0ZXIoIGN1ciwgW2VsZW1dICkubGVuZ3RoID4gMCApIHsKCQkJCQkJbWF0Y2ggPSBlbGVtOwoJCQkJCQlicmVhazsKCQkJCQl9CgkJCQl9CgoJCQkJZWxlbSA9IGVsZW1bZGlyXTsKCQkJfQoKCQkJY2hlY2tTZXRbaV0gPSBtYXRjaDsKCQl9Cgl9Cn0KCnZhciBjb250YWlucyA9IGRvY3VtZW50LmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uID8gIGZ1bmN0aW9uKGEsIGIpewoJcmV0dXJuIGEuY29tcGFyZURvY3VtZW50UG9zaXRpb24oYikgJiAxNjsKfSA6IGZ1bmN0aW9uKGEsIGIpewoJcmV0dXJuIGEgIT09IGIgJiYgKGEuY29udGFpbnMgPyBhLmNvbnRhaW5zKGIpIDogdHJ1ZSk7Cn07Cgp2YXIgaXNYTUwgPSBmdW5jdGlvbihlbGVtKXsKCXJldHVybiBlbGVtLm5vZGVUeXBlID09PSA5ICYmIGVsZW0uZG9jdW1lbnRFbGVtZW50Lm5vZGVOYW1lICE9PSAiSFRNTCIgfHwKCQkhIWVsZW0ub3duZXJEb2N1bWVudCAmJiBlbGVtLm93bmVyRG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50Lm5vZGVOYW1lICE9PSAiSFRNTCI7Cn07Cgp2YXIgcG9zUHJvY2VzcyA9IGZ1bmN0aW9uKHNlbGVjdG9yLCBjb250ZXh0KXsKCXZhciB0bXBTZXQgPSBbXSwgbGF0ZXIgPSAiIiwgbWF0Y2gsCgkJcm9vdCA9IGNvbnRleHQubm9kZVR5cGUgPyBbY29udGV4dF0gOiBjb250ZXh0OwoKCXdoaWxlICggKG1hdGNoID0gRXhwci5tYXRjaC5QU0VVRE8uZXhlYyggc2VsZWN0b3IgKSkgKSB7CgkJbGF0ZXIgKz0gbWF0Y2hbMF07CgkJc2VsZWN0b3IgPSBzZWxlY3Rvci5yZXBsYWNlKCBFeHByLm1hdGNoLlBTRVVETywgIiIgKTsKCX0KCglzZWxlY3RvciA9IEV4cHIucmVsYXRpdmVbc2VsZWN0b3JdID8gc2VsZWN0b3IgKyAiKiIgOiBzZWxlY3RvcjsKCglmb3IgKCB2YXIgaSA9IDAsIGwgPSByb290Lmxlbmd0aDsgaSA8IGw7IGkrKyApIHsKCQlTaXp6bGUoIHNlbGVjdG9yLCByb290W2ldLCB0bXBTZXQgKTsKCX0KCglyZXR1cm4gU2l6emxlLmZpbHRlciggbGF0ZXIsIHRtcFNldCApOwp9OwoKCndpbmRvdy5TaXp6bGUgPSBTaXp6bGU7Cgp9KSgpOwoKUHJvdG90eXBlLl9vcmlnaW5hbF9wcm9wZXJ0eSA9IHdpbmRvdy5TaXp6bGU7Cgo7KGZ1bmN0aW9uKGVuZ2luZSkgewogIHZhciBleHRlbmRFbGVtZW50cyA9IFByb3RvdHlwZS5TZWxlY3Rvci5leHRlbmRFbGVtZW50czsKCiAgZnVuY3Rpb24gc2VsZWN0KHNlbGVjdG9yLCBzY29wZSkgewogICAgcmV0dXJuIGV4dGVuZEVsZW1lbnRzKGVuZ2luZShzZWxlY3Rvciwgc2NvcGUgfHwgZG9jdW1lbnQpKTsKICB9CgogIGZ1bmN0aW9uIG1hdGNoKGVsZW1lbnQsIHNlbGVjdG9yKSB7CiAgICByZXR1cm4gZW5naW5lLm1hdGNoZXMoc2VsZWN0b3IsIFtlbGVtZW50XSkubGVuZ3RoID09IDE7CiAgfQoKICBQcm90b3R5cGUuU2VsZWN0b3IuZW5naW5lID0gZW5naW5lOwogIFByb3RvdHlwZS5TZWxlY3Rvci5zZWxlY3QgPSBzZWxlY3Q7CiAgUHJvdG90eXBlLlNlbGVjdG9yLm1hdGNoID0gbWF0Y2g7Cn0pKFNpenpsZSk7Cgp3aW5kb3cuU2l6emxlID0gUHJvdG90eXBlLl9vcmlnaW5hbF9wcm9wZXJ0eTsKZGVsZXRlIFByb3RvdHlwZS5fb3JpZ2luYWxfcHJvcGVydHk7Cgp2YXIgRm9ybSA9IHsKICByZXNldDogZnVuY3Rpb24oZm9ybSkgewogICAgZm9ybSA9ICQoZm9ybSk7CiAgICBmb3JtLnJlc2V0KCk7CiAgICByZXR1cm4gZm9ybTsKICB9LAoKICBzZXJpYWxpemVFbGVtZW50czogZnVuY3Rpb24oZWxlbWVudHMsIG9wdGlvbnMpIHsKICAgIGlmICh0eXBlb2Ygb3B0aW9ucyAhPSAnb2JqZWN0Jykgb3B0aW9ucyA9IHsgaGFzaDogISFvcHRpb25zIH07CiAgICBlbHNlIGlmIChPYmplY3QuaXNVbmRlZmluZWQob3B0aW9ucy5oYXNoKSkgb3B0aW9ucy5oYXNoID0gdHJ1ZTsKICAgIHZhciBrZXksIHZhbHVlLCBzdWJtaXR0ZWQgPSBmYWxzZSwgc3VibWl0ID0gb3B0aW9ucy5zdWJtaXQsIGFjY3VtdWxhdG9yLCBpbml0aWFsOwoKICAgIGlmIChvcHRpb25zLmhhc2gpIHsKICAgICAgaW5pdGlhbCA9IHt9OwogICAgICBhY2N1bXVsYXRvciA9IGZ1bmN0aW9uKHJlc3VsdCwga2V5LCB2YWx1ZSkgewogICAgICAgIGlmIChrZXkgaW4gcmVzdWx0KSB7CiAgICAgICAgICBpZiAoIU9iamVjdC5pc0FycmF5KHJlc3VsdFtrZXldKSkgcmVzdWx0W2tleV0gPSBbcmVzdWx0W2tleV1dOwogICAgICAgICAgcmVzdWx0W2tleV0ucHVzaCh2YWx1ZSk7CiAgICAgICAgfSBlbHNlIHJlc3VsdFtrZXldID0gdmFsdWU7CiAgICAgICAgcmV0dXJuIHJlc3VsdDsKICAgICAgfTsKICAgIH0gZWxzZSB7CiAgICAgIGluaXRpYWwgPSAnJzsKICAgICAgYWNjdW11bGF0b3IgPSBmdW5jdGlvbihyZXN1bHQsIGtleSwgdmFsdWUpIHsKICAgICAgICByZXR1cm4gcmVzdWx0ICsgKHJlc3VsdCA/ICcmJyA6ICcnKSArIGVuY29kZVVSSUNvbXBvbmVudChrZXkpICsgJz0nICsgZW5jb2RlVVJJQ29tcG9uZW50KHZhbHVlKTsKICAgICAgfQogICAgfQoKICAgIHJldHVybiBlbGVtZW50cy5pbmplY3QoaW5pdGlhbCwgZnVuY3Rpb24ocmVzdWx0LCBlbGVtZW50KSB7CiAgICAgIGlmICghZWxlbWVudC5kaXNhYmxlZCAmJiBlbGVtZW50Lm5hbWUpIHsKICAgICAgICBrZXkgPSBlbGVtZW50Lm5hbWU7IHZhbHVlID0gJChlbGVtZW50KS5nZXRWYWx1ZSgpOwogICAgICAgIGlmICh2YWx1ZSAhPSBudWxsICYmIGVsZW1lbnQudHlwZSAhPSAnZmlsZScgJiYgKGVsZW1lbnQudHlwZSAhPSAnc3VibWl0JyB8fCAoIXN1Ym1pdHRlZCAmJgogICAgICAgICAgICBzdWJtaXQgIT09IGZhbHNlICYmICghc3VibWl0IHx8IGtleSA9PSBzdWJtaXQpICYmIChzdWJtaXR0ZWQgPSB0cnVlKSkpKSB7CiAgICAgICAgICByZXN1bHQgPSBhY2N1bXVsYXRvcihyZXN1bHQsIGtleSwgdmFsdWUpOwogICAgICAgIH0KICAgICAgfQogICAgICByZXR1cm4gcmVzdWx0OwogICAgfSk7CiAgfQp9OwoKRm9ybS5NZXRob2RzID0gewogIHNlcmlhbGl6ZTogZnVuY3Rpb24oZm9ybSwgb3B0aW9ucykgewogICAgcmV0dXJuIEZvcm0uc2VyaWFsaXplRWxlbWVudHMoRm9ybS5nZXRFbGVtZW50cyhmb3JtKSwgb3B0aW9ucyk7CiAgfSwKCiAgZ2V0RWxlbWVudHM6IGZ1bmN0aW9uKGZvcm0pIHsKICAgIHZhciBlbGVtZW50cyA9ICQoZm9ybSkuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJyonKSwKICAgICAgICBlbGVtZW50LAogICAgICAgIGFyciA9IFsgXSwKICAgICAgICBzZXJpYWxpemVycyA9IEZvcm0uRWxlbWVudC5TZXJpYWxpemVyczsKICAgIGZvciAodmFyIGkgPSAwOyBlbGVtZW50ID0gZWxlbWVudHNbaV07IGkrKykgewogICAgICBhcnIucHVzaChlbGVtZW50KTsKICAgIH0KICAgIHJldHVybiBhcnIuaW5qZWN0KFtdLCBmdW5jdGlvbihlbGVtZW50cywgY2hpbGQpIHsKICAgICAgaWYgKHNlcmlhbGl6ZXJzW2NoaWxkLnRhZ05hbWUudG9Mb3dlckNhc2UoKV0pCiAgICAgICAgZWxlbWVudHMucHVzaChFbGVtZW50LmV4dGVuZChjaGlsZCkpOwogICAgICByZXR1cm4gZWxlbWVudHM7CiAgICB9KQogIH0sCgogIGdldElucHV0czogZnVuY3Rpb24oZm9ybSwgdHlwZU5hbWUsIG5hbWUpIHsKICAgIGZvcm0gPSAkKGZvcm0pOwogICAgdmFyIGlucHV0cyA9IGZvcm0uZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ2lucHV0Jyk7CgogICAgaWYgKCF0eXBlTmFtZSAmJiAhbmFtZSkgcmV0dXJuICRBKGlucHV0cykubWFwKEVsZW1lbnQuZXh0ZW5kKTsKCiAgICBmb3IgKHZhciBpID0gMCwgbWF0Y2hpbmdJbnB1dHMgPSBbXSwgbGVuZ3RoID0gaW5wdXRzLmxlbmd0aDsgaSA8IGxlbmd0aDsgaSsrKSB7CiAgICAgIHZhciBpbnB1dCA9IGlucHV0c1tpXTsKICAgICAgaWYgKCh0eXBlTmFtZSAmJiBpbnB1dC50eXBlICE9IHR5cGVOYW1lKSB8fCAobmFtZSAmJiBpbnB1dC5uYW1lICE9IG5hbWUpKQogICAgICAgIGNvbnRpbnVlOwogICAgICBtYXRjaGluZ0lucHV0cy5wdXNoKEVsZW1lbnQuZXh0ZW5kKGlucHV0KSk7CiAgICB9CgogICAgcmV0dXJuIG1hdGNoaW5nSW5wdXRzOwogIH0sCgogIGRpc2FibGU6IGZ1bmN0aW9uKGZvcm0pIHsKICAgIGZvcm0gPSAkKGZvcm0pOwogICAgRm9ybS5nZXRFbGVtZW50cyhmb3JtKS5pbnZva2UoJ2Rpc2FibGUnKTsKICAgIHJldHVybiBmb3JtOwogIH0sCgogIGVuYWJsZTogZnVuY3Rpb24oZm9ybSkgewogICAgZm9ybSA9ICQoZm9ybSk7CiAgICBGb3JtLmdldEVsZW1lbnRzKGZvcm0pLmludm9rZSgnZW5hYmxlJyk7CiAgICByZXR1cm4gZm9ybTsKICB9LAoKICBmaW5kRmlyc3RFbGVtZW50OiBmdW5jdGlvbihmb3JtKSB7CiAgICB2YXIgZWxlbWVudHMgPSAkKGZvcm0pLmdldEVsZW1lbnRzKCkuZmluZEFsbChmdW5jdGlvbihlbGVtZW50KSB7CiAgICAgIHJldHVybiAnaGlkZGVuJyAhPSBlbGVtZW50LnR5cGUgJiYgIWVsZW1lbnQuZGlzYWJsZWQ7CiAgICB9KTsKICAgIHZhciBmaXJzdEJ5SW5kZXggPSBlbGVtZW50cy5maW5kQWxsKGZ1bmN0aW9uKGVsZW1lbnQpIHsKICAgICAgcmV0dXJuIGVsZW1lbnQuaGFzQXR0cmlidXRlKCd0YWJJbmRleCcpICYmIGVsZW1lbnQudGFiSW5kZXggPj0gMDsKICAgIH0pLnNvcnRCeShmdW5jdGlvbihlbGVtZW50KSB7IHJldHVybiBlbGVtZW50LnRhYkluZGV4IH0pLmZpcnN0KCk7CgogICAgcmV0dXJuIGZpcnN0QnlJbmRleCA/IGZpcnN0QnlJbmRleCA6IGVsZW1lbnRzLmZpbmQoZnVuY3Rpb24oZWxlbWVudCkgewogICAgICByZXR1cm4gL14oPzppbnB1dHxzZWxlY3R8dGV4dGFyZWEpJC9pLnRlc3QoZWxlbWVudC50YWdOYW1lKTsKICAgIH0pOwogIH0sCgogIGZvY3VzRmlyc3RFbGVtZW50OiBmdW5jdGlvbihmb3JtKSB7CiAgICBmb3JtID0gJChmb3JtKTsKICAgIHZhciBlbGVtZW50ID0gZm9ybS5maW5kRmlyc3RFbGVtZW50KCk7CiAgICBpZiAoZWxlbWVudCkgZWxlbWVudC5hY3RpdmF0ZSgpOwogICAgcmV0dXJuIGZvcm07CiAgfSwKCiAgcmVxdWVzdDogZnVuY3Rpb24oZm9ybSwgb3B0aW9ucykgewogICAgZm9ybSA9ICQoZm9ybSksIG9wdGlvbnMgPSBPYmplY3QuY2xvbmUob3B0aW9ucyB8fCB7IH0pOwoKICAgIHZhciBwYXJhbXMgPSBvcHRpb25zLnBhcmFtZXRlcnMsIGFjdGlvbiA9IGZvcm0ucmVhZEF0dHJpYnV0ZSgnYWN0aW9uJykgfHwgJyc7CiAgICBpZiAoYWN0aW9uLmJsYW5rKCkpIGFjdGlvbiA9IHdpbmRvdy5sb2NhdGlvbi5ocmVmOwogICAgb3B0aW9ucy5wYXJhbWV0ZXJzID0gZm9ybS5zZXJpYWxpemUodHJ1ZSk7CgogICAgaWYgKHBhcmFtcykgewogICAgICBpZiAoT2JqZWN0LmlzU3RyaW5nKHBhcmFtcykpIHBhcmFtcyA9IHBhcmFtcy50b1F1ZXJ5UGFyYW1zKCk7CiAgICAgIE9iamVjdC5leHRlbmQob3B0aW9ucy5wYXJhbWV0ZXJzLCBwYXJhbXMpOwogICAgfQoKICAgIGlmIChmb3JtLmhhc0F0dHJpYnV0ZSgnbWV0aG9kJykgJiYgIW9wdGlvbnMubWV0aG9kKQogICAgICBvcHRpb25zLm1ldGhvZCA9IGZvcm0ubWV0aG9kOwoKICAgIHJldHVybiBuZXcgQWpheC5SZXF1ZXN0KGFjdGlvbiwgb3B0aW9ucyk7CiAgfQp9OwoKLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovCgoKRm9ybS5FbGVtZW50ID0gewogIGZvY3VzOiBmdW5jdGlvbihlbGVtZW50KSB7CiAgICAkKGVsZW1lbnQpLmZvY3VzKCk7CiAgICByZXR1cm4gZWxlbWVudDsKICB9LAoKICBzZWxlY3Q6IGZ1bmN0aW9uKGVsZW1lbnQpIHsKICAgICQoZWxlbWVudCkuc2VsZWN0KCk7CiAgICByZXR1cm4gZWxlbWVudDsKICB9Cn07CgpGb3JtLkVsZW1lbnQuTWV0aG9kcyA9IHsKCiAgc2VyaWFsaXplOiBmdW5jdGlvbihlbGVtZW50KSB7CiAgICBlbGVtZW50ID0gJChlbGVtZW50KTsKICAgIGlmICghZWxlbWVudC5kaXNhYmxlZCAmJiBlbGVtZW50Lm5hbWUpIHsKICAgICAgdmFyIHZhbHVlID0gZWxlbWVudC5nZXRWYWx1ZSgpOwogICAgICBpZiAodmFsdWUgIT0gdW5kZWZpbmVkKSB7CiAgICAgICAgdmFyIHBhaXIgPSB7IH07CiAgICAgICAgcGFpcltlbGVtZW50Lm5hbWVdID0gdmFsdWU7CiAgICAgICAgcmV0dXJuIE9iamVjdC50b1F1ZXJ5U3RyaW5nKHBhaXIpOwogICAgICB9CiAgICB9CiAgICByZXR1cm4gJyc7CiAgfSwKCiAgZ2V0VmFsdWU6IGZ1bmN0aW9uKGVsZW1lbnQpIHsKICAgIGVsZW1lbnQgPSAkKGVsZW1lbnQpOwogICAgdmFyIG1ldGhvZCA9IGVsZW1lbnQudGFnTmFtZS50b0xvd2VyQ2FzZSgpOwogICAgcmV0dXJuIEZvcm0uRWxlbWVudC5TZXJpYWxpemVyc1ttZXRob2RdKGVsZW1lbnQpOwogIH0sCgogIHNldFZhbHVlOiBmdW5jdGlvbihlbGVtZW50LCB2YWx1ZSkgewogICAgZWxlbWVudCA9ICQoZWxlbWVudCk7CiAgICB2YXIgbWV0aG9kID0gZWxlbWVudC50YWdOYW1lLnRvTG93ZXJDYXNlKCk7CiAgICBGb3JtLkVsZW1lbnQuU2VyaWFsaXplcnNbbWV0aG9kXShlbGVtZW50LCB2YWx1ZSk7CiAgICByZXR1cm4gZWxlbWVudDsKICB9LAoKICBjbGVhcjogZnVuY3Rpb24oZWxlbWVudCkgewogICAgJChlbGVtZW50KS52YWx1ZSA9ICcnOwogICAgcmV0dXJuIGVsZW1lbnQ7CiAgfSwKCiAgcHJlc2VudDogZnVuY3Rpb24oZWxlbWVudCkgewogICAgcmV0dXJuICQoZWxlbWVudCkudmFsdWUgIT0gJyc7CiAgfSwKCiAgYWN0aXZhdGU6IGZ1bmN0aW9uKGVsZW1lbnQpIHsKICAgIGVsZW1lbnQgPSAkKGVsZW1lbnQpOwogICAgdHJ5IHsKICAgICAgZWxlbWVudC5mb2N1cygpOwogICAgICBpZiAoZWxlbWVudC5zZWxlY3QgJiYgKGVsZW1lbnQudGFnTmFtZS50b0xvd2VyQ2FzZSgpICE9ICdpbnB1dCcgfHwKICAgICAgICAgICEoL14oPzpidXR0b258cmVzZXR8c3VibWl0KSQvaS50ZXN0KGVsZW1lbnQudHlwZSkpKSkKICAgICAgICBlbGVtZW50LnNlbGVjdCgpOwogICAgfSBjYXRjaCAoZSkgeyB9CiAgICByZXR1cm4gZWxlbWVudDsKICB9LAoKICBkaXNhYmxlOiBmdW5jdGlvbihlbGVtZW50KSB7CiAgICBlbGVtZW50ID0gJChlbGVtZW50KTsKICAgIGVsZW1lbnQuZGlzYWJsZWQgPSB0cnVlOwogICAgcmV0dXJuIGVsZW1lbnQ7CiAgfSwKCiAgZW5hYmxlOiBmdW5jdGlvbihlbGVtZW50KSB7CiAgICBlbGVtZW50ID0gJChlbGVtZW50KTsKICAgIGVsZW1lbnQuZGlzYWJsZWQgPSBmYWxzZTsKICAgIHJldHVybiBlbGVtZW50OwogIH0KfTsKCi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qLwoKdmFyIEZpZWxkID0gRm9ybS5FbGVtZW50OwoKdmFyICRGID0gRm9ybS5FbGVtZW50Lk1ldGhvZHMuZ2V0VmFsdWU7CgovKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi8KCkZvcm0uRWxlbWVudC5TZXJpYWxpemVycyA9IChmdW5jdGlvbigpIHsKICBmdW5jdGlvbiBpbnB1dChlbGVtZW50LCB2YWx1ZSkgewogICAgc3dpdGNoIChlbGVtZW50LnR5cGUudG9Mb3dlckNhc2UoKSkgewogICAgICBjYXNlICdjaGVja2JveCc6CiAgICAgIGNhc2UgJ3JhZGlvJzoKICAgICAgICByZXR1cm4gaW5wdXRTZWxlY3RvcihlbGVtZW50LCB2YWx1ZSk7CiAgICAgIGRlZmF1bHQ6CiAgICAgICAgcmV0dXJuIHZhbHVlU2VsZWN0b3IoZWxlbWVudCwgdmFsdWUpOwogICAgfQogIH0KCiAgZnVuY3Rpb24gaW5wdXRTZWxlY3RvcihlbGVtZW50LCB2YWx1ZSkgewogICAgaWYgKE9iamVjdC5pc1VuZGVmaW5lZCh2YWx1ZSkpCiAgICAgIHJldHVybiBlbGVtZW50LmNoZWNrZWQgPyBlbGVtZW50LnZhbHVlIDogbnVsbDsKICAgIGVsc2UgZWxlbWVudC5jaGVja2VkID0gISF2YWx1ZTsKICB9CgogIGZ1bmN0aW9uIHZhbHVlU2VsZWN0b3IoZWxlbWVudCwgdmFsdWUpIHsKICAgIGlmIChPYmplY3QuaXNVbmRlZmluZWQodmFsdWUpKSByZXR1cm4gZWxlbWVudC52YWx1ZTsKICAgIGVsc2UgZWxlbWVudC52YWx1ZSA9IHZhbHVlOwogIH0KCiAgZnVuY3Rpb24gc2VsZWN0KGVsZW1lbnQsIHZhbHVlKSB7CiAgICBpZiAoT2JqZWN0LmlzVW5kZWZpbmVkKHZhbHVlKSkKICAgICAgcmV0dXJuIChlbGVtZW50LnR5cGUgPT09ICdzZWxlY3Qtb25lJyA/IHNlbGVjdE9uZSA6IHNlbGVjdE1hbnkpKGVsZW1lbnQpOwoKICAgIHZhciBvcHQsIGN1cnJlbnRWYWx1ZSwgc2luZ2xlID0gIU9iamVjdC5pc0FycmF5KHZhbHVlKTsKICAgIGZvciAodmFyIGkgPSAwLCBsZW5ndGggPSBlbGVtZW50Lmxlbmd0aDsgaSA8IGxlbmd0aDsgaSsrKSB7CiAgICAgIG9wdCA9IGVsZW1lbnQub3B0aW9uc1tpXTsKICAgICAgY3VycmVudFZhbHVlID0gdGhpcy5vcHRpb25WYWx1ZShvcHQpOwogICAgICBpZiAoc2luZ2xlKSB7CiAgICAgICAgaWYgKGN1cnJlbnRWYWx1ZSA9PSB2YWx1ZSkgewogICAgICAgICAgb3B0LnNlbGVjdGVkID0gdHJ1ZTsKICAgICAgICAgIHJldHVybjsKICAgICAgICB9CiAgICAgIH0KICAgICAgZWxzZSBvcHQuc2VsZWN0ZWQgPSB2YWx1ZS5pbmNsdWRlKGN1cnJlbnRWYWx1ZSk7CiAgICB9CiAgfQoKICBmdW5jdGlvbiBzZWxlY3RPbmUoZWxlbWVudCkgewogICAgdmFyIGluZGV4ID0gZWxlbWVudC5zZWxlY3RlZEluZGV4OwogICAgcmV0dXJuIGluZGV4ID49IDAgPyBvcHRpb25WYWx1ZShlbGVtZW50Lm9wdGlvbnNbaW5kZXhdKSA6IG51bGw7CiAgfQoKICBmdW5jdGlvbiBzZWxlY3RNYW55KGVsZW1lbnQpIHsKICAgIHZhciB2YWx1ZXMsIGxlbmd0aCA9IGVsZW1lbnQubGVuZ3RoOwogICAgaWYgKCFsZW5ndGgpIHJldHVybiBudWxsOwoKICAgIGZvciAodmFyIGkgPSAwLCB2YWx1ZXMgPSBbXTsgaSA8IGxlbmd0aDsgaSsrKSB7CiAgICAgIHZhciBvcHQgPSBlbGVtZW50Lm9wdGlvbnNbaV07CiAgICAgIGlmIChvcHQuc2VsZWN0ZWQpIHZhbHVlcy5wdXNoKG9wdGlvblZhbHVlKG9wdCkpOwogICAgfQogICAgcmV0dXJuIHZhbHVlczsKICB9CgogIGZ1bmN0aW9uIG9wdGlvblZhbHVlKG9wdCkgewogICAgcmV0dXJuIEVsZW1lbnQuaGFzQXR0cmlidXRlKG9wdCwgJ3ZhbHVlJykgPyBvcHQudmFsdWUgOiBvcHQudGV4dDsKICB9CgogIHJldHVybiB7CiAgICBpbnB1dDogICAgICAgICBpbnB1dCwKICAgIGlucHV0U2VsZWN0b3I6IGlucHV0U2VsZWN0b3IsCiAgICB0ZXh0YXJlYTogICAgICB2YWx1ZVNlbGVjdG9yLAogICAgc2VsZWN0OiAgICAgICAgc2VsZWN0LAogICAgc2VsZWN0T25lOiAgICAgc2VsZWN0T25lLAogICAgc2VsZWN0TWFueTogICAgc2VsZWN0TWFueSwKICAgIG9wdGlvblZhbHVlOiAgIG9wdGlvblZhbHVlLAogICAgYnV0dG9uOiAgICAgICAgdmFsdWVTZWxlY3RvcgogIH07Cn0pKCk7CgovKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi8KCgpBYnN0cmFjdC5UaW1lZE9ic2VydmVyID0gQ2xhc3MuY3JlYXRlKFBlcmlvZGljYWxFeGVjdXRlciwgewogIGluaXRpYWxpemU6IGZ1bmN0aW9uKCRzdXBlciwgZWxlbWVudCwgZnJlcXVlbmN5LCBjYWxsYmFjaykgewogICAgJHN1cGVyKGNhbGxiYWNrLCBmcmVxdWVuY3kpOwogICAgdGhpcy5lbGVtZW50ICAgPSAkKGVsZW1lbnQpOwogICAgdGhpcy5sYXN0VmFsdWUgPSB0aGlzLmdldFZhbHVlKCk7CiAgfSwKCiAgZXhlY3V0ZTogZnVuY3Rpb24oKSB7CiAgICB2YXIgdmFsdWUgPSB0aGlzLmdldFZhbHVlKCk7CiAgICBpZiAoT2JqZWN0LmlzU3RyaW5nKHRoaXMubGFzdFZhbHVlKSAmJiBPYmplY3QuaXNTdHJpbmcodmFsdWUpID8KICAgICAgICB0aGlzLmxhc3RWYWx1ZSAhPSB2YWx1ZSA6IFN0cmluZyh0aGlzLmxhc3RWYWx1ZSkgIT0gU3RyaW5nKHZhbHVlKSkgewogICAgICB0aGlzLmNhbGxiYWNrKHRoaXMuZWxlbWVudCwgdmFsdWUpOwogICAgICB0aGlzLmxhc3RWYWx1ZSA9IHZhbHVlOwogICAgfQogIH0KfSk7CgpGb3JtLkVsZW1lbnQuT2JzZXJ2ZXIgPSBDbGFzcy5jcmVhdGUoQWJzdHJhY3QuVGltZWRPYnNlcnZlciwgewogIGdldFZhbHVlOiBmdW5jdGlvbigpIHsKICAgIHJldHVybiBGb3JtLkVsZW1lbnQuZ2V0VmFsdWUodGhpcy5lbGVtZW50KTsKICB9Cn0pOwoKRm9ybS5PYnNlcnZlciA9IENsYXNzLmNyZWF0ZShBYnN0cmFjdC5UaW1lZE9ic2VydmVyLCB7CiAgZ2V0VmFsdWU6IGZ1bmN0aW9uKCkgewogICAgcmV0dXJuIEZvcm0uc2VyaWFsaXplKHRoaXMuZWxlbWVudCk7CiAgfQp9KTsKCi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qLwoKQWJzdHJhY3QuRXZlbnRPYnNlcnZlciA9IENsYXNzLmNyZWF0ZSh7CiAgaW5pdGlhbGl6ZTogZnVuY3Rpb24oZWxlbWVudCwgY2FsbGJhY2spIHsKICAgIHRoaXMuZWxlbWVudCAgPSAkKGVsZW1lbnQpOwogICAgdGhpcy5jYWxsYmFjayA9IGNhbGxiYWNrOwoKICAgIHRoaXMubGFzdFZhbHVlID0gdGhpcy5nZXRWYWx1ZSgpOwogICAgaWYgKHRoaXMuZWxlbWVudC50YWdOYW1lLnRvTG93ZXJDYXNlKCkgPT0gJ2Zvcm0nKQogICAgICB0aGlzLnJlZ2lzdGVyRm9ybUNhbGxiYWNrcygpOwogICAgZWxzZQogICAgICB0aGlzLnJlZ2lzdGVyQ2FsbGJhY2sodGhpcy5lbGVtZW50KTsKICB9LAoKICBvbkVsZW1lbnRFdmVudDogZnVuY3Rpb24oKSB7CiAgICB2YXIgdmFsdWUgPSB0aGlzLmdldFZhbHVlKCk7CiAgICBpZiAodGhpcy5sYXN0VmFsdWUgIT0gdmFsdWUpIHsKICAgICAgdGhpcy5jYWxsYmFjayh0aGlzLmVsZW1lbnQsIHZhbHVlKTsKICAgICAgdGhpcy5sYXN0VmFsdWUgPSB2YWx1ZTsKICAgIH0KICB9LAoKICByZWdpc3RlckZvcm1DYWxsYmFja3M6IGZ1bmN0aW9uKCkgewogICAgRm9ybS5nZXRFbGVtZW50cyh0aGlzLmVsZW1lbnQpLmVhY2godGhpcy5yZWdpc3RlckNhbGxiYWNrLCB0aGlzKTsKICB9LAoKICByZWdpc3RlckNhbGxiYWNrOiBmdW5jdGlvbihlbGVtZW50KSB7CiAgICBpZiAoZWxlbWVudC50eXBlKSB7CiAgICAgIHN3aXRjaCAoZWxlbWVudC50eXBlLnRvTG93ZXJDYXNlKCkpIHsKICAgICAgICBjYXNlICdjaGVja2JveCc6CiAgICAgICAgY2FzZSAncmFkaW8nOgogICAgICAgICAgRXZlbnQub2JzZXJ2ZShlbGVtZW50LCAnY2xpY2snLCB0aGlzLm9uRWxlbWVudEV2ZW50LmJpbmQodGhpcykpOwogICAgICAgICAgYnJlYWs7CiAgICAgICAgZGVmYXVsdDoKICAgICAgICAgIEV2ZW50Lm9ic2VydmUoZWxlbWVudCwgJ2NoYW5nZScsIHRoaXMub25FbGVtZW50RXZlbnQuYmluZCh0aGlzKSk7CiAgICAgICAgICBicmVhazsKICAgICAgfQogICAgfQogIH0KfSk7CgpGb3JtLkVsZW1lbnQuRXZlbnRPYnNlcnZlciA9IENsYXNzLmNyZWF0ZShBYnN0cmFjdC5FdmVudE9ic2VydmVyLCB7CiAgZ2V0VmFsdWU6IGZ1bmN0aW9uKCkgewogICAgcmV0dXJuIEZvcm0uRWxlbWVudC5nZXRWYWx1ZSh0aGlzLmVsZW1lbnQpOwogIH0KfSk7CgpGb3JtLkV2ZW50T2JzZXJ2ZXIgPSBDbGFzcy5jcmVhdGUoQWJzdHJhY3QuRXZlbnRPYnNlcnZlciwgewogIGdldFZhbHVlOiBmdW5jdGlvbigpIHsKICAgIHJldHVybiBGb3JtLnNlcmlhbGl6ZSh0aGlzLmVsZW1lbnQpOwogIH0KfSk7CihmdW5jdGlvbigpIHsKCiAgdmFyIEV2ZW50ID0gewogICAgS0VZX0JBQ0tTUEFDRTogOCwKICAgIEtFWV9UQUI6ICAgICAgIDksCiAgICBLRVlfUkVUVVJOOiAgIDEzLAogICAgS0VZX0VTQzogICAgICAyNywKICAgIEtFWV9MRUZUOiAgICAgMzcsCiAgICBLRVlfVVA6ICAgICAgIDM4LAogICAgS0VZX1JJR0hUOiAgICAzOSwKICAgIEtFWV9ET1dOOiAgICAgNDAsCiAgICBLRVlfREVMRVRFOiAgIDQ2LAogICAgS0VZX0hPTUU6ICAgICAzNiwKICAgIEtFWV9FTkQ6ICAgICAgMzUsCiAgICBLRVlfUEFHRVVQOiAgIDMzLAogICAgS0VZX1BBR0VET1dOOiAzNCwKICAgIEtFWV9JTlNFUlQ6ICAgNDUsCgogICAgY2FjaGU6IHt9CiAgfTsKCiAgdmFyIGRvY0VsID0gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50OwogIHZhciBNT1VTRUVOVEVSX01PVVNFTEVBVkVfRVZFTlRTX1NVUFBPUlRFRCA9ICdvbm1vdXNlZW50ZXInIGluIGRvY0VsCiAgICAmJiAnb25tb3VzZWxlYXZlJyBpbiBkb2NFbDsKCgoKICB2YXIgaXNJRUxlZ2FjeUV2ZW50ID0gZnVuY3Rpb24oZXZlbnQpIHsgcmV0dXJuIGZhbHNlOyB9OwoKICBpZiAod2luZG93LmF0dGFjaEV2ZW50KSB7CiAgICBpZiAod2luZG93LmFkZEV2ZW50TGlzdGVuZXIpIHsKICAgICAgaXNJRUxlZ2FjeUV2ZW50ID0gZnVuY3Rpb24oZXZlbnQpIHsKICAgICAgICByZXR1cm4gIShldmVudCBpbnN0YW5jZW9mIHdpbmRvdy5FdmVudCk7CiAgICAgIH07CiAgICB9IGVsc2UgewogICAgICBpc0lFTGVnYWN5RXZlbnQgPSBmdW5jdGlvbihldmVudCkgeyByZXR1cm4gdHJ1ZTsgfTsKICAgIH0KICB9CgogIHZhciBfaXNCdXR0b247CgogIGZ1bmN0aW9uIF9pc0J1dHRvbkZvckRPTUV2ZW50cyhldmVudCwgY29kZSkgewogICAgcmV0dXJuIGV2ZW50LndoaWNoID8gKGV2ZW50LndoaWNoID09PSBjb2RlICsgMSkgOiAoZXZlbnQuYnV0dG9uID09PSBjb2RlKTsKICB9CgogIHZhciBsZWdhY3lCdXR0b25NYXAgPSB7IDA6IDEsIDE6IDQsIDI6IDIgfTsKICBmdW5jdGlvbiBfaXNCdXR0b25Gb3JMZWdhY3lFdmVudHMoZXZlbnQsIGNvZGUpIHsKICAgIHJldHVybiBldmVudC5idXR0b24gPT09IGxlZ2FjeUJ1dHRvbk1hcFtjb2RlXTsKICB9CgogIGZ1bmN0aW9uIF9pc0J1dHRvbkZvcldlYktpdChldmVudCwgY29kZSkgewogICAgc3dpdGNoIChjb2RlKSB7CiAgICAgIGNhc2UgMDogcmV0dXJuIGV2ZW50LndoaWNoID09IDEgJiYgIWV2ZW50Lm1ldGFLZXk7CiAgICAgIGNhc2UgMTogcmV0dXJuIGV2ZW50LndoaWNoID09IDIgfHwgKGV2ZW50LndoaWNoID09IDEgJiYgZXZlbnQubWV0YUtleSk7CiAgICAgIGNhc2UgMjogcmV0dXJuIGV2ZW50LndoaWNoID09IDM7CiAgICAgIGRlZmF1bHQ6IHJldHVybiBmYWxzZTsKICAgIH0KICB9CgogIGlmICh3aW5kb3cuYXR0YWNoRXZlbnQpIHsKICAgIGlmICghd2luZG93LmFkZEV2ZW50TGlzdGVuZXIpIHsKICAgICAgX2lzQnV0dG9uID0gX2lzQnV0dG9uRm9yTGVnYWN5RXZlbnRzOwogICAgfSBlbHNlIHsKICAgICAgX2lzQnV0dG9uID0gZnVuY3Rpb24oZXZlbnQsIGNvZGUpIHsKICAgICAgICByZXR1cm4gaXNJRUxlZ2FjeUV2ZW50KGV2ZW50KSA/IF9pc0J1dHRvbkZvckxlZ2FjeUV2ZW50cyhldmVudCwgY29kZSkgOgogICAgICAgICBfaXNCdXR0b25Gb3JET01FdmVudHMoZXZlbnQsIGNvZGUpOwogICAgICB9CiAgICB9CiAgfSBlbHNlIGlmIChQcm90b3R5cGUuQnJvd3Nlci5XZWJLaXQpIHsKICAgIF9pc0J1dHRvbiA9IF9pc0J1dHRvbkZvcldlYktpdDsKICB9IGVsc2UgewogICAgX2lzQnV0dG9uID0gX2lzQnV0dG9uRm9yRE9NRXZlbnRzOwogIH0KCiAgZnVuY3Rpb24gaXNMZWZ0Q2xpY2soZXZlbnQpICAgeyByZXR1cm4gX2lzQnV0dG9uKGV2ZW50LCAwKSB9CgogIGZ1bmN0aW9uIGlzTWlkZGxlQ2xpY2soZXZlbnQpIHsgcmV0dXJuIF9pc0J1dHRvbihldmVudCwgMSkgfQoKICBmdW5jdGlvbiBpc1JpZ2h0Q2xpY2soZXZlbnQpICB7IHJldHVybiBfaXNCdXR0b24oZXZlbnQsIDIpIH0KCiAgZnVuY3Rpb24gZWxlbWVudChldmVudCkgewogICAgZXZlbnQgPSBFdmVudC5leHRlbmQoZXZlbnQpOwoKICAgIHZhciBub2RlID0gZXZlbnQudGFyZ2V0LCB0eXBlID0gZXZlbnQudHlwZSwKICAgICBjdXJyZW50VGFyZ2V0ID0gZXZlbnQuY3VycmVudFRhcmdldDsKCiAgICBpZiAoY3VycmVudFRhcmdldCAmJiBjdXJyZW50VGFyZ2V0LnRhZ05hbWUpIHsKICAgICAgaWYgKHR5cGUgPT09ICdsb2FkJyB8fCB0eXBlID09PSAnZXJyb3InIHx8CiAgICAgICAgKHR5cGUgPT09ICdjbGljaycgJiYgY3VycmVudFRhcmdldC50YWdOYW1lLnRvTG93ZXJDYXNlKCkgPT09ICdpbnB1dCcKICAgICAgICAgICYmIGN1cnJlbnRUYXJnZXQudHlwZSA9PT0gJ3JhZGlvJykpCiAgICAgICAgICAgIG5vZGUgPSBjdXJyZW50VGFyZ2V0OwogICAgfQoKICAgIGlmIChub2RlLm5vZGVUeXBlID09IE5vZGUuVEVYVF9OT0RFKQogICAgICBub2RlID0gbm9kZS5wYXJlbnROb2RlOwoKICAgIHJldHVybiBFbGVtZW50LmV4dGVuZChub2RlKTsKICB9CgogIGZ1bmN0aW9uIGZpbmRFbGVtZW50KGV2ZW50LCBleHByZXNzaW9uKSB7CiAgICB2YXIgZWxlbWVudCA9IEV2ZW50LmVsZW1lbnQoZXZlbnQpOwoKICAgIGlmICghZXhwcmVzc2lvbikgcmV0dXJuIGVsZW1lbnQ7CiAgICB3aGlsZSAoZWxlbWVudCkgewogICAgICBpZiAoT2JqZWN0LmlzRWxlbWVudChlbGVtZW50KSAmJiBQcm90b3R5cGUuU2VsZWN0b3IubWF0Y2goZWxlbWVudCwgZXhwcmVzc2lvbikpIHsKICAgICAgICByZXR1cm4gRWxlbWVudC5leHRlbmQoZWxlbWVudCk7CiAgICAgIH0KICAgICAgZWxlbWVudCA9IGVsZW1lbnQucGFyZW50Tm9kZTsKICAgIH0KICB9CgogIGZ1bmN0aW9uIHBvaW50ZXIoZXZlbnQpIHsKICAgIHJldHVybiB7IHg6IHBvaW50ZXJYKGV2ZW50KSwgeTogcG9pbnRlclkoZXZlbnQpIH07CiAgfQoKICBmdW5jdGlvbiBwb2ludGVyWChldmVudCkgewogICAgdmFyIGRvY0VsZW1lbnQgPSBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQsCiAgICAgYm9keSA9IGRvY3VtZW50LmJvZHkgfHwgeyBzY3JvbGxMZWZ0OiAwIH07CgogICAgcmV0dXJuIGV2ZW50LnBhZ2VYIHx8IChldmVudC5jbGllbnRYICsKICAgICAgKGRvY0VsZW1lbnQuc2Nyb2xsTGVmdCB8fCBib2R5LnNjcm9sbExlZnQpIC0KICAgICAgKGRvY0VsZW1lbnQuY2xpZW50TGVmdCB8fCAwKSk7CiAgfQoKICBmdW5jdGlvbiBwb2ludGVyWShldmVudCkgewogICAgdmFyIGRvY0VsZW1lbnQgPSBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQsCiAgICAgYm9keSA9IGRvY3VtZW50LmJvZHkgfHwgeyBzY3JvbGxUb3A6IDAgfTsKCiAgICByZXR1cm4gIGV2ZW50LnBhZ2VZIHx8IChldmVudC5jbGllbnRZICsKICAgICAgIChkb2NFbGVtZW50LnNjcm9sbFRvcCB8fCBib2R5LnNjcm9sbFRvcCkgLQogICAgICAgKGRvY0VsZW1lbnQuY2xpZW50VG9wIHx8IDApKTsKICB9CgoKICBmdW5jdGlvbiBzdG9wKGV2ZW50KSB7CiAgICBFdmVudC5leHRlbmQoZXZlbnQpOwogICAgZXZlbnQucHJldmVudERlZmF1bHQoKTsKICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpOwoKICAgIGV2ZW50LnN0b3BwZWQgPSB0cnVlOwogIH0KCgogIEV2ZW50Lk1ldGhvZHMgPSB7CiAgICBpc0xlZnRDbGljazogICBpc0xlZnRDbGljaywKICAgIGlzTWlkZGxlQ2xpY2s6IGlzTWlkZGxlQ2xpY2ssCiAgICBpc1JpZ2h0Q2xpY2s6ICBpc1JpZ2h0Q2xpY2ssCgogICAgZWxlbWVudDogICAgIGVsZW1lbnQsCiAgICBmaW5kRWxlbWVudDogZmluZEVsZW1lbnQsCgogICAgcG9pbnRlcjogIHBvaW50ZXIsCiAgICBwb2ludGVyWDogcG9pbnRlclgsCiAgICBwb2ludGVyWTogcG9pbnRlclksCgogICAgc3RvcDogc3RvcAogIH07CgogIHZhciBtZXRob2RzID0gT2JqZWN0LmtleXMoRXZlbnQuTWV0aG9kcykuaW5qZWN0KHsgfSwgZnVuY3Rpb24obSwgbmFtZSkgewogICAgbVtuYW1lXSA9IEV2ZW50Lk1ldGhvZHNbbmFtZV0ubWV0aG9kaXplKCk7CiAgICByZXR1cm4gbTsKICB9KTsKCiAgaWYgKHdpbmRvdy5hdHRhY2hFdmVudCkgewogICAgZnVuY3Rpb24gX3JlbGF0ZWRUYXJnZXQoZXZlbnQpIHsKICAgICAgdmFyIGVsZW1lbnQ7CiAgICAgIHN3aXRjaCAoZXZlbnQudHlwZSkgewogICAgICAgIGNhc2UgJ21vdXNlb3Zlcic6CiAgICAgICAgY2FzZSAnbW91c2VlbnRlcic6CiAgICAgICAgICBlbGVtZW50ID0gZXZlbnQuZnJvbUVsZW1lbnQ7CiAgICAgICAgICBicmVhazsKICAgICAgICBjYXNlICdtb3VzZW91dCc6CiAgICAgICAgY2FzZSAnbW91c2VsZWF2ZSc6CiAgICAgICAgICBlbGVtZW50ID0gZXZlbnQudG9FbGVtZW50OwogICAgICAgICAgYnJlYWs7CiAgICAgICAgZGVmYXVsdDoKICAgICAgICAgIHJldHVybiBudWxsOwogICAgICB9CiAgICAgIHJldHVybiBFbGVtZW50LmV4dGVuZChlbGVtZW50KTsKICAgIH0KCiAgICB2YXIgYWRkaXRpb25hbE1ldGhvZHMgPSB7CiAgICAgIHN0b3BQcm9wYWdhdGlvbjogZnVuY3Rpb24oKSB7IHRoaXMuY2FuY2VsQnViYmxlID0gdHJ1ZSB9LAogICAgICBwcmV2ZW50RGVmYXVsdDogIGZ1bmN0aW9uKCkgeyB0aGlzLnJldHVyblZhbHVlID0gZmFsc2UgfSwKICAgICAgaW5zcGVjdDogZnVuY3Rpb24oKSB7IHJldHVybiAnW29iamVjdCBFdmVudF0nIH0KICAgIH07CgogICAgRXZlbnQuZXh0ZW5kID0gZnVuY3Rpb24oZXZlbnQsIGVsZW1lbnQpIHsKICAgICAgaWYgKCFldmVudCkgcmV0dXJuIGZhbHNlOwoKICAgICAgaWYgKCFpc0lFTGVnYWN5RXZlbnQoZXZlbnQpKSByZXR1cm4gZXZlbnQ7CgogICAgICBpZiAoZXZlbnQuX2V4dGVuZGVkQnlQcm90b3R5cGUpIHJldHVybiBldmVudDsKICAgICAgZXZlbnQuX2V4dGVuZGVkQnlQcm90b3R5cGUgPSBQcm90b3R5cGUuZW1wdHlGdW5jdGlvbjsKCiAgICAgIHZhciBwb2ludGVyID0gRXZlbnQucG9pbnRlcihldmVudCk7CgogICAgICBPYmplY3QuZXh0ZW5kKGV2ZW50LCB7CiAgICAgICAgdGFyZ2V0OiBldmVudC5zcmNFbGVtZW50IHx8IGVsZW1lbnQsCiAgICAgICAgcmVsYXRlZFRhcmdldDogX3JlbGF0ZWRUYXJnZXQoZXZlbnQpLAogICAgICAgIHBhZ2VYOiAgcG9pbnRlci54LAogICAgICAgIHBhZ2VZOiAgcG9pbnRlci55CiAgICAgIH0pOwoKICAgICAgT2JqZWN0LmV4dGVuZChldmVudCwgbWV0aG9kcyk7CiAgICAgIE9iamVjdC5leHRlbmQoZXZlbnQsIGFkZGl0aW9uYWxNZXRob2RzKTsKCiAgICAgIHJldHVybiBldmVudDsKICAgIH07CiAgfSBlbHNlIHsKICAgIEV2ZW50LmV4dGVuZCA9IFByb3RvdHlwZS5LOwogIH0KCiAgaWYgKHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKSB7CiAgICBFdmVudC5wcm90b3R5cGUgPSB3aW5kb3cuRXZlbnQucHJvdG90eXBlIHx8IGRvY3VtZW50LmNyZWF0ZUV2ZW50KCdIVE1MRXZlbnRzJykuX19wcm90b19fOwogICAgT2JqZWN0LmV4dGVuZChFdmVudC5wcm90b3R5cGUsIG1ldGhvZHMpOwogIH0KCiAgZnVuY3Rpb24gX2NyZWF0ZVJlc3BvbmRlcihlbGVtZW50LCBldmVudE5hbWUsIGhhbmRsZXIpIHsKICAgIHZhciByZWdpc3RyeSA9IEVsZW1lbnQucmV0cmlldmUoZWxlbWVudCwgJ3Byb3RvdHlwZV9ldmVudF9yZWdpc3RyeScpOwoKICAgIGlmIChPYmplY3QuaXNVbmRlZmluZWQocmVnaXN0cnkpKSB7CiAgICAgIENBQ0hFLnB1c2goZWxlbWVudCk7CiAgICAgIHJlZ2lzdHJ5ID0gRWxlbWVudC5yZXRyaWV2ZShlbGVtZW50LCAncHJvdG90eXBlX2V2ZW50X3JlZ2lzdHJ5JywgJEgoKSk7CiAgICB9CgogICAgdmFyIHJlc3BvbmRlcnNGb3JFdmVudCA9IHJlZ2lzdHJ5LmdldChldmVudE5hbWUpOwogICAgaWYgKE9iamVjdC5pc1VuZGVmaW5lZChyZXNwb25kZXJzRm9yRXZlbnQpKSB7CiAgICAgIHJlc3BvbmRlcnNGb3JFdmVudCA9IFtdOwogICAgICByZWdpc3RyeS5zZXQoZXZlbnROYW1lLCByZXNwb25kZXJzRm9yRXZlbnQpOwogICAgfQoKICAgIGlmIChyZXNwb25kZXJzRm9yRXZlbnQucGx1Y2soJ2hhbmRsZXInKS5pbmNsdWRlKGhhbmRsZXIpKSByZXR1cm4gZmFsc2U7CgogICAgdmFyIHJlc3BvbmRlcjsKICAgIGlmIChldmVudE5hbWUuaW5jbHVkZSgiOiIpKSB7CiAgICAgIHJlc3BvbmRlciA9IGZ1bmN0aW9uKGV2ZW50KSB7CiAgICAgICAgaWYgKE9iamVjdC5pc1VuZGVmaW5lZChldmVudC5ldmVudE5hbWUpKQogICAgICAgICAgcmV0dXJuIGZhbHNlOwoKICAgICAgICBpZiAoZXZlbnQuZXZlbnROYW1lICE9PSBldmVudE5hbWUpCiAgICAgICAgICByZXR1cm4gZmFsc2U7CgogICAgICAgIEV2ZW50LmV4dGVuZChldmVudCwgZWxlbWVudCk7CiAgICAgICAgaGFuZGxlci5jYWxsKGVsZW1lbnQsIGV2ZW50KTsKICAgICAgfTsKICAgIH0gZWxzZSB7CiAgICAgIGlmICghTU9VU0VFTlRFUl9NT1VTRUxFQVZFX0VWRU5UU19TVVBQT1JURUQgJiYKICAgICAgIChldmVudE5hbWUgPT09ICJtb3VzZWVudGVyIiB8fCBldmVudE5hbWUgPT09ICJtb3VzZWxlYXZlIikpIHsKICAgICAgICBpZiAoZXZlbnROYW1lID09PSAibW91c2VlbnRlciIgfHwgZXZlbnROYW1lID09PSAibW91c2VsZWF2ZSIpIHsKICAgICAgICAgIHJlc3BvbmRlciA9IGZ1bmN0aW9uKGV2ZW50KSB7CiAgICAgICAgICAgIEV2ZW50LmV4dGVuZChldmVudCwgZWxlbWVudCk7CgogICAgICAgICAgICB2YXIgcGFyZW50ID0gZXZlbnQucmVsYXRlZFRhcmdldDsKICAgICAgICAgICAgd2hpbGUgKHBhcmVudCAmJiBwYXJlbnQgIT09IGVsZW1lbnQpIHsKICAgICAgICAgICAgICB0cnkgeyBwYXJlbnQgPSBwYXJlbnQucGFyZW50Tm9kZTsgfQogICAgICAgICAgICAgIGNhdGNoKGUpIHsgcGFyZW50ID0gZWxlbWVudDsgfQogICAgICAgICAgICB9CgogICAgICAgICAgICBpZiAocGFyZW50ID09PSBlbGVtZW50KSByZXR1cm47CgogICAgICAgICAgICBoYW5kbGVyLmNhbGwoZWxlbWVudCwgZXZlbnQpOwogICAgICAgICAgfTsKICAgICAgICB9CiAgICAgIH0gZWxzZSB7CiAgICAgICAgcmVzcG9uZGVyID0gZnVuY3Rpb24oZXZlbnQpIHsKICAgICAgICAgIEV2ZW50LmV4dGVuZChldmVudCwgZWxlbWVudCk7CiAgICAgICAgICBoYW5kbGVyLmNhbGwoZWxlbWVudCwgZXZlbnQpOwogICAgICAgIH07CiAgICAgIH0KICAgIH0KCiAgICByZXNwb25kZXIuaGFuZGxlciA9IGhhbmRsZXI7CiAgICByZXNwb25kZXJzRm9yRXZlbnQucHVzaChyZXNwb25kZXIpOwogICAgcmV0dXJuIHJlc3BvbmRlcjsKICB9CgogIGZ1bmN0aW9uIF9kZXN0cm95Q2FjaGUoKSB7CiAgICBmb3IgKHZhciBpID0gMCwgbGVuZ3RoID0gQ0FDSEUubGVuZ3RoOyBpIDwgbGVuZ3RoOyBpKyspIHsKICAgICAgRXZlbnQuc3RvcE9ic2VydmluZyhDQUNIRVtpXSk7CiAgICAgIENBQ0hFW2ldID0gbnVsbDsKICAgIH0KICB9CgogIHZhciBDQUNIRSA9IFtdOwoKICBpZiAoUHJvdG90eXBlLkJyb3dzZXIuSUUpCiAgICB3aW5kb3cuYXR0YWNoRXZlbnQoJ29udW5sb2FkJywgX2Rlc3Ryb3lDYWNoZSk7CgogIGlmIChQcm90b3R5cGUuQnJvd3Nlci5XZWJLaXQpCiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigndW5sb2FkJywgUHJvdG90eXBlLmVtcHR5RnVuY3Rpb24sIGZhbHNlKTsKCgogIHZhciBfZ2V0RE9NRXZlbnROYW1lID0gUHJvdG90eXBlLkssCiAgICAgIHRyYW5zbGF0aW9ucyA9IHsgbW91c2VlbnRlcjogIm1vdXNlb3ZlciIsIG1vdXNlbGVhdmU6ICJtb3VzZW91dCIgfTsKCiAgaWYgKCFNT1VTRUVOVEVSX01PVVNFTEVBVkVfRVZFTlRTX1NVUFBPUlRFRCkgewogICAgX2dldERPTUV2ZW50TmFtZSA9IGZ1bmN0aW9uKGV2ZW50TmFtZSkgewogICAgICByZXR1cm4gKHRyYW5zbGF0aW9uc1tldmVudE5hbWVdIHx8IGV2ZW50TmFtZSk7CiAgICB9OwogIH0KCiAgZnVuY3Rpb24gb2JzZXJ2ZShlbGVtZW50LCBldmVudE5hbWUsIGhhbmRsZXIpIHsKICAgIGVsZW1lbnQgPSAkKGVsZW1lbnQpOwoKICAgIHZhciByZXNwb25kZXIgPSBfY3JlYXRlUmVzcG9uZGVyKGVsZW1lbnQsIGV2ZW50TmFtZSwgaGFuZGxlcik7CgogICAgaWYgKCFyZXNwb25kZXIpIHJldHVybiBlbGVtZW50OwoKICAgIGlmIChldmVudE5hbWUuaW5jbHVkZSgnOicpKSB7CiAgICAgIGlmIChlbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIpCiAgICAgICAgZWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCJkYXRhYXZhaWxhYmxlIiwgcmVzcG9uZGVyLCBmYWxzZSk7CiAgICAgIGVsc2UgewogICAgICAgIGVsZW1lbnQuYXR0YWNoRXZlbnQoIm9uZGF0YWF2YWlsYWJsZSIsIHJlc3BvbmRlcik7CiAgICAgICAgZWxlbWVudC5hdHRhY2hFdmVudCgib25sb3NlY2FwdHVyZSIsIHJlc3BvbmRlcik7CiAgICAgIH0KICAgIH0gZWxzZSB7CiAgICAgIHZhciBhY3R1YWxFdmVudE5hbWUgPSBfZ2V0RE9NRXZlbnROYW1lKGV2ZW50TmFtZSk7CgogICAgICBpZiAoZWxlbWVudC5hZGRFdmVudExpc3RlbmVyKQogICAgICAgIGVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihhY3R1YWxFdmVudE5hbWUsIHJlc3BvbmRlciwgZmFsc2UpOwogICAgICBlbHNlCiAgICAgICAgZWxlbWVudC5hdHRhY2hFdmVudCgib24iICsgYWN0dWFsRXZlbnROYW1lLCByZXNwb25kZXIpOwogICAgfQoKICAgIHJldHVybiBlbGVtZW50OwogIH0KCiAgZnVuY3Rpb24gc3RvcE9ic2VydmluZyhlbGVtZW50LCBldmVudE5hbWUsIGhhbmRsZXIpIHsKICAgIGVsZW1lbnQgPSAkKGVsZW1lbnQpOwoKICAgIHZhciByZWdpc3RyeSA9IEVsZW1lbnQucmV0cmlldmUoZWxlbWVudCwgJ3Byb3RvdHlwZV9ldmVudF9yZWdpc3RyeScpOwogICAgaWYgKCFyZWdpc3RyeSkgcmV0dXJuIGVsZW1lbnQ7CgogICAgaWYgKCFldmVudE5hbWUpIHsKICAgICAgcmVnaXN0cnkuZWFjaCggZnVuY3Rpb24ocGFpcikgewogICAgICAgIHZhciBldmVudE5hbWUgPSBwYWlyLmtleTsKICAgICAgICBzdG9wT2JzZXJ2aW5nKGVsZW1lbnQsIGV2ZW50TmFtZSk7CiAgICAgIH0pOwogICAgICByZXR1cm4gZWxlbWVudDsKICAgIH0KCiAgICB2YXIgcmVzcG9uZGVycyA9IHJlZ2lzdHJ5LmdldChldmVudE5hbWUpOwogICAgaWYgKCFyZXNwb25kZXJzKSByZXR1cm4gZWxlbWVudDsKCiAgICBpZiAoIWhhbmRsZXIpIHsKICAgICAgcmVzcG9uZGVycy5lYWNoKGZ1bmN0aW9uKHIpIHsKICAgICAgICBzdG9wT2JzZXJ2aW5nKGVsZW1lbnQsIGV2ZW50TmFtZSwgci5oYW5kbGVyKTsKICAgICAgfSk7CiAgICAgIHJldHVybiBlbGVtZW50OwogICAgfQoKICAgIHZhciBpID0gcmVzcG9uZGVycy5sZW5ndGgsIHJlc3BvbmRlcjsKICAgIHdoaWxlIChpLS0pIHsKICAgICAgaWYgKHJlc3BvbmRlcnNbaV0uaGFuZGxlciA9PT0gaGFuZGxlcikgewogICAgICAgIHJlc3BvbmRlciA9IHJlc3BvbmRlcnNbaV07CiAgICAgICAgYnJlYWs7CiAgICAgIH0KICAgIH0KICAgIGlmICghcmVzcG9uZGVyKSByZXR1cm4gZWxlbWVudDsKCiAgICBpZiAoZXZlbnROYW1lLmluY2x1ZGUoJzonKSkgewogICAgICBpZiAoZWxlbWVudC5yZW1vdmVFdmVudExpc3RlbmVyKQogICAgICAgIGVsZW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcigiZGF0YWF2YWlsYWJsZSIsIHJlc3BvbmRlciwgZmFsc2UpOwogICAgICBlbHNlIHsKICAgICAgICBlbGVtZW50LmRldGFjaEV2ZW50KCJvbmRhdGFhdmFpbGFibGUiLCByZXNwb25kZXIpOwogICAgICAgIGVsZW1lbnQuZGV0YWNoRXZlbnQoIm9ubG9zZWNhcHR1cmUiLCByZXNwb25kZXIpOwogICAgICB9CiAgICB9IGVsc2UgewogICAgICB2YXIgYWN0dWFsRXZlbnROYW1lID0gX2dldERPTUV2ZW50TmFtZShldmVudE5hbWUpOwogICAgICBpZiAoZWxlbWVudC5yZW1vdmVFdmVudExpc3RlbmVyKQogICAgICAgIGVsZW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihhY3R1YWxFdmVudE5hbWUsIHJlc3BvbmRlciwgZmFsc2UpOwogICAgICBlbHNlCiAgICAgICAgZWxlbWVudC5kZXRhY2hFdmVudCgnb24nICsgYWN0dWFsRXZlbnROYW1lLCByZXNwb25kZXIpOwogICAgfQoKICAgIHJlZ2lzdHJ5LnNldChldmVudE5hbWUsIHJlc3BvbmRlcnMud2l0aG91dChyZXNwb25kZXIpKTsKCiAgICByZXR1cm4gZWxlbWVudDsKICB9CgogIGZ1bmN0aW9uIGZpcmUoZWxlbWVudCwgZXZlbnROYW1lLCBtZW1vLCBidWJibGUpIHsKICAgIGVsZW1lbnQgPSAkKGVsZW1lbnQpOwoKICAgIGlmIChPYmplY3QuaXNVbmRlZmluZWQoYnViYmxlKSkKICAgICAgYnViYmxlID0gdHJ1ZTsKCiAgICBpZiAoZWxlbWVudCA9PSBkb2N1bWVudCAmJiBkb2N1bWVudC5jcmVhdGVFdmVudCAmJiAhZWxlbWVudC5kaXNwYXRjaEV2ZW50KQogICAgICBlbGVtZW50ID0gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50OwoKICAgIHZhciBldmVudDsKICAgIGlmIChkb2N1bWVudC5jcmVhdGVFdmVudCkgewogICAgICBldmVudCA9IGRvY3VtZW50LmNyZWF0ZUV2ZW50KCdIVE1MRXZlbnRzJyk7CiAgICAgIGV2ZW50LmluaXRFdmVudCgnZGF0YWF2YWlsYWJsZScsIGJ1YmJsZSwgdHJ1ZSk7CiAgICB9IGVsc2UgewogICAgICBldmVudCA9IGRvY3VtZW50LmNyZWF0ZUV2ZW50T2JqZWN0KCk7CiAgICAgIGV2ZW50LmV2ZW50VHlwZSA9IGJ1YmJsZSA/ICdvbmRhdGFhdmFpbGFibGUnIDogJ29ubG9zZWNhcHR1cmUnOwogICAgfQoKICAgIGV2ZW50LmV2ZW50TmFtZSA9IGV2ZW50TmFtZTsKICAgIGV2ZW50Lm1lbW8gPSBtZW1vIHx8IHsgfTsKCiAgICBpZiAoZG9jdW1lbnQuY3JlYXRlRXZlbnQpCiAgICAgIGVsZW1lbnQuZGlzcGF0Y2hFdmVudChldmVudCk7CiAgICBlbHNlCiAgICAgIGVsZW1lbnQuZmlyZUV2ZW50KGV2ZW50LmV2ZW50VHlwZSwgZXZlbnQpOwoKICAgIHJldHVybiBFdmVudC5leHRlbmQoZXZlbnQpOwogIH0KCiAgRXZlbnQuSGFuZGxlciA9IENsYXNzLmNyZWF0ZSh7CiAgICBpbml0aWFsaXplOiBmdW5jdGlvbihlbGVtZW50LCBldmVudE5hbWUsIHNlbGVjdG9yLCBjYWxsYmFjaykgewogICAgICB0aGlzLmVsZW1lbnQgICA9ICQoZWxlbWVudCk7CiAgICAgIHRoaXMuZXZlbnROYW1lID0gZXZlbnROYW1lOwogICAgICB0aGlzLnNlbGVjdG9yICA9IHNlbGVjdG9yOwogICAgICB0aGlzLmNhbGxiYWNrICA9IGNhbGxiYWNrOwogICAgICB0aGlzLmhhbmRsZXIgICA9IHRoaXMuaGFuZGxlRXZlbnQuYmluZCh0aGlzKTsKICAgIH0sCgogICAgc3RhcnQ6IGZ1bmN0aW9uKCkgewogICAgICBFdmVudC5vYnNlcnZlKHRoaXMuZWxlbWVudCwgdGhpcy5ldmVudE5hbWUsIHRoaXMuaGFuZGxlcik7CiAgICAgIHJldHVybiB0aGlzOwogICAgfSwKCiAgICBzdG9wOiBmdW5jdGlvbigpIHsKICAgICAgRXZlbnQuc3RvcE9ic2VydmluZyh0aGlzLmVsZW1lbnQsIHRoaXMuZXZlbnROYW1lLCB0aGlzLmhhbmRsZXIpOwogICAgICByZXR1cm4gdGhpczsKICAgIH0sCgogICAgaGFuZGxlRXZlbnQ6IGZ1bmN0aW9uKGV2ZW50KSB7CiAgICAgIHZhciBlbGVtZW50ID0gRXZlbnQuZmluZEVsZW1lbnQoZXZlbnQsIHRoaXMuc2VsZWN0b3IpOwogICAgICBpZiAoZWxlbWVudCkgdGhpcy5jYWxsYmFjay5jYWxsKHRoaXMuZWxlbWVudCwgZXZlbnQsIGVsZW1lbnQpOwogICAgfQogIH0pOwoKICBmdW5jdGlvbiBvbihlbGVtZW50LCBldmVudE5hbWUsIHNlbGVjdG9yLCBjYWxsYmFjaykgewogICAgZWxlbWVudCA9ICQoZWxlbWVudCk7CiAgICBpZiAoT2JqZWN0LmlzRnVuY3Rpb24oc2VsZWN0b3IpICYmIE9iamVjdC5pc1VuZGVmaW5lZChjYWxsYmFjaykpIHsKICAgICAgY2FsbGJhY2sgPSBzZWxlY3Rvciwgc2VsZWN0b3IgPSBudWxsOwogICAgfQoKICAgIHJldHVybiBuZXcgRXZlbnQuSGFuZGxlcihlbGVtZW50LCBldmVudE5hbWUsIHNlbGVjdG9yLCBjYWxsYmFjaykuc3RhcnQoKTsKICB9CgogIE9iamVjdC5leHRlbmQoRXZlbnQsIEV2ZW50Lk1ldGhvZHMpOwoKICBPYmplY3QuZXh0ZW5kKEV2ZW50LCB7CiAgICBmaXJlOiAgICAgICAgICBmaXJlLAogICAgb2JzZXJ2ZTogICAgICAgb2JzZXJ2ZSwKICAgIHN0b3BPYnNlcnZpbmc6IHN0b3BPYnNlcnZpbmcsCiAgICBvbjogICAgICAgICAgICBvbgogIH0pOwoKICBFbGVtZW50LmFkZE1ldGhvZHMoewogICAgZmlyZTogICAgICAgICAgZmlyZSwKCiAgICBvYnNlcnZlOiAgICAgICBvYnNlcnZlLAoKICAgIHN0b3BPYnNlcnZpbmc6IHN0b3BPYnNlcnZpbmcsCgogICAgb246ICAgICAgICAgICAgb24KICB9KTsKCiAgT2JqZWN0LmV4dGVuZChkb2N1bWVudCwgewogICAgZmlyZTogICAgICAgICAgZmlyZS5tZXRob2RpemUoKSwKCiAgICBvYnNlcnZlOiAgICAgICBvYnNlcnZlLm1ldGhvZGl6ZSgpLAoKICAgIHN0b3BPYnNlcnZpbmc6IHN0b3BPYnNlcnZpbmcubWV0aG9kaXplKCksCgogICAgb246ICAgICAgICAgICAgb24ubWV0aG9kaXplKCksCgogICAgbG9hZGVkOiAgICAgICAgZmFsc2UKICB9KTsKCiAgaWYgKHdpbmRvdy5FdmVudCkgT2JqZWN0LmV4dGVuZCh3aW5kb3cuRXZlbnQsIEV2ZW50KTsKICBlbHNlIHdpbmRvdy5FdmVudCA9IEV2ZW50Owp9KSgpOwoKKGZ1bmN0aW9uKCkgewogIC8qIFN1cHBvcnQgZm9yIHRoZSBET01Db250ZW50TG9hZGVkIGV2ZW50IGlzIGJhc2VkIG9uIHdvcmsgYnkgRGFuIFdlYmIsCiAgICAgTWF0dGhpYXMgTWlsbGVyLCBEZWFuIEVkd2FyZHMsIEpvaG4gUmVzaWcsIGFuZCBEaWVnbyBQZXJpbmkuICovCgogIHZhciB0aW1lcjsKCiAgZnVuY3Rpb24gZmlyZUNvbnRlbnRMb2FkZWRFdmVudCgpIHsKICAgIGlmIChkb2N1bWVudC5sb2FkZWQpIHJldHVybjsKICAgIGlmICh0aW1lcikgd2luZG93LmNsZWFyVGltZW91dCh0aW1lcik7CiAgICBkb2N1bWVudC5sb2FkZWQgPSB0cnVlOwogICAgZG9jdW1lbnQuZmlyZSgnZG9tOmxvYWRlZCcpOwogIH0KCiAgZnVuY3Rpb24gY2hlY2tSZWFkeVN0YXRlKCkgewogICAgaWYgKGRvY3VtZW50LnJlYWR5U3RhdGUgPT09ICdjb21wbGV0ZScpIHsKICAgICAgZG9jdW1lbnQuc3RvcE9ic2VydmluZygncmVhZHlzdGF0ZWNoYW5nZScsIGNoZWNrUmVhZHlTdGF0ZSk7CiAgICAgIGZpcmVDb250ZW50TG9hZGVkRXZlbnQoKTsKICAgIH0KICB9CgogIGZ1bmN0aW9uIHBvbGxEb1Njcm9sbCgpIHsKICAgIHRyeSB7IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5kb1Njcm9sbCgnbGVmdCcpOyB9CiAgICBjYXRjaChlKSB7CiAgICAgIHRpbWVyID0gcG9sbERvU2Nyb2xsLmRlZmVyKCk7CiAgICAgIHJldHVybjsKICAgIH0KICAgIGZpcmVDb250ZW50TG9hZGVkRXZlbnQoKTsKICB9CgogIGlmIChkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKSB7CiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdET01Db250ZW50TG9hZGVkJywgZmlyZUNvbnRlbnRMb2FkZWRFdmVudCwgZmFsc2UpOwogIH0gZWxzZSB7CiAgICBkb2N1bWVudC5vYnNlcnZlKCdyZWFkeXN0YXRlY2hhbmdlJywgY2hlY2tSZWFkeVN0YXRlKTsKICAgIGlmICh3aW5kb3cgPT0gdG9wKQogICAgICB0aW1lciA9IHBvbGxEb1Njcm9sbC5kZWZlcigpOwogIH0KCiAgRXZlbnQub2JzZXJ2ZSh3aW5kb3csICdsb2FkJywgZmlyZUNvbnRlbnRMb2FkZWRFdmVudCk7Cn0pKCk7CgoKRWxlbWVudC5hZGRNZXRob2RzKCk7Ci8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSBERVBSRUNBVEVEIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qLwoKSGFzaC50b1F1ZXJ5U3RyaW5nID0gT2JqZWN0LnRvUXVlcnlTdHJpbmc7Cgp2YXIgVG9nZ2xlID0geyBkaXNwbGF5OiBFbGVtZW50LnRvZ2dsZSB9OwoKRWxlbWVudC5NZXRob2RzLmNoaWxkT2YgPSBFbGVtZW50Lk1ldGhvZHMuZGVzY2VuZGFudE9mOwoKdmFyIEluc2VydGlvbiA9IHsKICBCZWZvcmU6IGZ1bmN0aW9uKGVsZW1lbnQsIGNvbnRlbnQpIHsKICAgIHJldHVybiBFbGVtZW50Lmluc2VydChlbGVtZW50LCB7YmVmb3JlOmNvbnRlbnR9KTsKICB9LAoKICBUb3A6IGZ1bmN0aW9uKGVsZW1lbnQsIGNvbnRlbnQpIHsKICAgIHJldHVybiBFbGVtZW50Lmluc2VydChlbGVtZW50LCB7dG9wOmNvbnRlbnR9KTsKICB9LAoKICBCb3R0b206IGZ1bmN0aW9uKGVsZW1lbnQsIGNvbnRlbnQpIHsKICAgIHJldHVybiBFbGVtZW50Lmluc2VydChlbGVtZW50LCB7Ym90dG9tOmNvbnRlbnR9KTsKICB9LAoKICBBZnRlcjogZnVuY3Rpb24oZWxlbWVudCwgY29udGVudCkgewogICAgcmV0dXJuIEVsZW1lbnQuaW5zZXJ0KGVsZW1lbnQsIHthZnRlcjpjb250ZW50fSk7CiAgfQp9OwoKdmFyICRjb250aW51ZSA9IG5ldyBFcnJvcignInRocm93ICRjb250aW51ZSIgaXMgZGVwcmVjYXRlZCwgdXNlICJyZXR1cm4iIGluc3RlYWQnKTsKCnZhciBQb3NpdGlvbiA9IHsKICBpbmNsdWRlU2Nyb2xsT2Zmc2V0czogZmFsc2UsCgogIHByZXBhcmU6IGZ1bmN0aW9uKCkgewogICAgdGhpcy5kZWx0YVggPSAgd2luZG93LnBhZ2VYT2Zmc2V0CiAgICAgICAgICAgICAgICB8fCBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc2Nyb2xsTGVmdAogICAgICAgICAgICAgICAgfHwgZG9jdW1lbnQuYm9keS5zY3JvbGxMZWZ0CiAgICAgICAgICAgICAgICB8fCAwOwogICAgdGhpcy5kZWx0YVkgPSAgd2luZG93LnBhZ2VZT2Zmc2V0CiAgICAgICAgICAgICAgICB8fCBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc2Nyb2xsVG9wCiAgICAgICAgICAgICAgICB8fCBkb2N1bWVudC5ib2R5LnNjcm9sbFRvcAogICAgICAgICAgICAgICAgfHwgMDsKICB9LAoKICB3aXRoaW46IGZ1bmN0aW9uKGVsZW1lbnQsIHgsIHkpIHsKICAgIGlmICh0aGlzLmluY2x1ZGVTY3JvbGxPZmZzZXRzKQogICAgICByZXR1cm4gdGhpcy53aXRoaW5JbmNsdWRpbmdTY3JvbGxvZmZzZXRzKGVsZW1lbnQsIHgsIHkpOwogICAgdGhpcy54Y29tcCA9IHg7CiAgICB0aGlzLnljb21wID0geTsKICAgIHRoaXMub2Zmc2V0ID0gRWxlbWVudC5jdW11bGF0aXZlT2Zmc2V0KGVsZW1lbnQpOwoKICAgIHJldHVybiAoeSA+PSB0aGlzLm9mZnNldFsxXSAmJgogICAgICAgICAgICB5IDwgIHRoaXMub2Zmc2V0WzFdICsgZWxlbWVudC5vZmZzZXRIZWlnaHQgJiYKICAgICAgICAgICAgeCA+PSB0aGlzLm9mZnNldFswXSAmJgogICAgICAgICAgICB4IDwgIHRoaXMub2Zmc2V0WzBdICsgZWxlbWVudC5vZmZzZXRXaWR0aCk7CiAgfSwKCiAgd2l0aGluSW5jbHVkaW5nU2Nyb2xsb2Zmc2V0czogZnVuY3Rpb24oZWxlbWVudCwgeCwgeSkgewogICAgdmFyIG9mZnNldGNhY2hlID0gRWxlbWVudC5jdW11bGF0aXZlU2Nyb2xsT2Zmc2V0KGVsZW1lbnQpOwoKICAgIHRoaXMueGNvbXAgPSB4ICsgb2Zmc2V0Y2FjaGVbMF0gLSB0aGlzLmRlbHRhWDsKICAgIHRoaXMueWNvbXAgPSB5ICsgb2Zmc2V0Y2FjaGVbMV0gLSB0aGlzLmRlbHRhWTsKICAgIHRoaXMub2Zmc2V0ID0gRWxlbWVudC5jdW11bGF0aXZlT2Zmc2V0KGVsZW1lbnQpOwoKICAgIHJldHVybiAodGhpcy55Y29tcCA+PSB0aGlzLm9mZnNldFsxXSAmJgogICAgICAgICAgICB0aGlzLnljb21wIDwgIHRoaXMub2Zmc2V0WzFdICsgZWxlbWVudC5vZmZzZXRIZWlnaHQgJiYKICAgICAgICAgICAgdGhpcy54Y29tcCA+PSB0aGlzLm9mZnNldFswXSAmJgogICAgICAgICAgICB0aGlzLnhjb21wIDwgIHRoaXMub2Zmc2V0WzBdICsgZWxlbWVudC5vZmZzZXRXaWR0aCk7CiAgfSwKCiAgb3ZlcmxhcDogZnVuY3Rpb24obW9kZSwgZWxlbWVudCkgewogICAgaWYgKCFtb2RlKSByZXR1cm4gMDsKICAgIGlmIChtb2RlID09ICd2ZXJ0aWNhbCcpCiAgICAgIHJldHVybiAoKHRoaXMub2Zmc2V0WzFdICsgZWxlbWVudC5vZmZzZXRIZWlnaHQpIC0gdGhpcy55Y29tcCkgLwogICAgICAgIGVsZW1lbnQub2Zmc2V0SGVpZ2h0OwogICAgaWYgKG1vZGUgPT0gJ2hvcml6b250YWwnKQogICAgICByZXR1cm4gKCh0aGlzLm9mZnNldFswXSArIGVsZW1lbnQub2Zmc2V0V2lkdGgpIC0gdGhpcy54Y29tcCkgLwogICAgICAgIGVsZW1lbnQub2Zmc2V0V2lkdGg7CiAgfSwKCgogIGN1bXVsYXRpdmVPZmZzZXQ6IEVsZW1lbnQuTWV0aG9kcy5jdW11bGF0aXZlT2Zmc2V0LAoKICBwb3NpdGlvbmVkT2Zmc2V0OiBFbGVtZW50Lk1ldGhvZHMucG9zaXRpb25lZE9mZnNldCwKCiAgYWJzb2x1dGl6ZTogZnVuY3Rpb24oZWxlbWVudCkgewogICAgUG9zaXRpb24ucHJlcGFyZSgpOwogICAgcmV0dXJuIEVsZW1lbnQuYWJzb2x1dGl6ZShlbGVtZW50KTsKICB9LAoKICByZWxhdGl2aXplOiBmdW5jdGlvbihlbGVtZW50KSB7CiAgICBQb3NpdGlvbi5wcmVwYXJlKCk7CiAgICByZXR1cm4gRWxlbWVudC5yZWxhdGl2aXplKGVsZW1lbnQpOwogIH0sCgogIHJlYWxPZmZzZXQ6IEVsZW1lbnQuTWV0aG9kcy5jdW11bGF0aXZlU2Nyb2xsT2Zmc2V0LAoKICBvZmZzZXRQYXJlbnQ6IEVsZW1lbnQuTWV0aG9kcy5nZXRPZmZzZXRQYXJlbnQsCgogIHBhZ2U6IEVsZW1lbnQuTWV0aG9kcy52aWV3cG9ydE9mZnNldCwKCiAgY2xvbmU6IGZ1bmN0aW9uKHNvdXJjZSwgdGFyZ2V0LCBvcHRpb25zKSB7CiAgICBvcHRpb25zID0gb3B0aW9ucyB8fCB7IH07CiAgICByZXR1cm4gRWxlbWVudC5jbG9uZVBvc2l0aW9uKHRhcmdldCwgc291cmNlLCBvcHRpb25zKTsKICB9Cn07CgovKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi8KCmlmICghZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSkgZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSA9IGZ1bmN0aW9uKGluc3RhbmNlTWV0aG9kcyl7CiAgZnVuY3Rpb24gaXRlcihuYW1lKSB7CiAgICByZXR1cm4gbmFtZS5ibGFuaygpID8gbnVsbCA6ICJbY29udGFpbnMoY29uY2F0KCcgJywgQGNsYXNzLCAnICcpLCAnICIgKyBuYW1lICsgIiAnKV0iOwogIH0KCiAgaW5zdGFuY2VNZXRob2RzLmdldEVsZW1lbnRzQnlDbGFzc05hbWUgPSBQcm90b3R5cGUuQnJvd3NlckZlYXR1cmVzLlhQYXRoID8KICBmdW5jdGlvbihlbGVtZW50LCBjbGFzc05hbWUpIHsKICAgIGNsYXNzTmFtZSA9IGNsYXNzTmFtZS50b1N0cmluZygpLnN0cmlwKCk7CiAgICB2YXIgY29uZCA9IC9ccy8udGVzdChjbGFzc05hbWUpID8gJHcoY2xhc3NOYW1lKS5tYXAoaXRlcikuam9pbignJykgOiBpdGVyKGNsYXNzTmFtZSk7CiAgICByZXR1cm4gY29uZCA/IGRvY3VtZW50Ll9nZXRFbGVtZW50c0J5WFBhdGgoJy4vLyonICsgY29uZCwgZWxlbWVudCkgOiBbXTsKICB9IDogZnVuY3Rpb24oZWxlbWVudCwgY2xhc3NOYW1lKSB7CiAgICBjbGFzc05hbWUgPSBjbGFzc05hbWUudG9TdHJpbmcoKS5zdHJpcCgpOwogICAgdmFyIGVsZW1lbnRzID0gW10sIGNsYXNzTmFtZXMgPSAoL1xzLy50ZXN0KGNsYXNzTmFtZSkgPyAkdyhjbGFzc05hbWUpIDogbnVsbCk7CiAgICBpZiAoIWNsYXNzTmFtZXMgJiYgIWNsYXNzTmFtZSkgcmV0dXJuIGVsZW1lbnRzOwoKICAgIHZhciBub2RlcyA9ICQoZWxlbWVudCkuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJyonKTsKICAgIGNsYXNzTmFtZSA9ICcgJyArIGNsYXNzTmFtZSArICcgJzsKCiAgICBmb3IgKHZhciBpID0gMCwgY2hpbGQsIGNuOyBjaGlsZCA9IG5vZGVzW2ldOyBpKyspIHsKICAgICAgaWYgKGNoaWxkLmNsYXNzTmFtZSAmJiAoY24gPSAnICcgKyBjaGlsZC5jbGFzc05hbWUgKyAnICcpICYmIChjbi5pbmNsdWRlKGNsYXNzTmFtZSkgfHwKICAgICAgICAgIChjbGFzc05hbWVzICYmIGNsYXNzTmFtZXMuYWxsKGZ1bmN0aW9uKG5hbWUpIHsKICAgICAgICAgICAgcmV0dXJuICFuYW1lLnRvU3RyaW5nKCkuYmxhbmsoKSAmJiBjbi5pbmNsdWRlKCcgJyArIG5hbWUgKyAnICcpOwogICAgICAgICAgfSkpKSkKICAgICAgICBlbGVtZW50cy5wdXNoKEVsZW1lbnQuZXh0ZW5kKGNoaWxkKSk7CiAgICB9CiAgICByZXR1cm4gZWxlbWVudHM7CiAgfTsKCiAgcmV0dXJuIGZ1bmN0aW9uKGNsYXNzTmFtZSwgcGFyZW50RWxlbWVudCkgewogICAgcmV0dXJuICQocGFyZW50RWxlbWVudCB8fCBkb2N1bWVudC5ib2R5KS5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKGNsYXNzTmFtZSk7CiAgfTsKfShFbGVtZW50Lk1ldGhvZHMpOwoKLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovCgpFbGVtZW50LkNsYXNzTmFtZXMgPSBDbGFzcy5jcmVhdGUoKTsKRWxlbWVudC5DbGFzc05hbWVzLnByb3RvdHlwZSA9IHsKICBpbml0aWFsaXplOiBmdW5jdGlvbihlbGVtZW50KSB7CiAgICB0aGlzLmVsZW1lbnQgPSAkKGVsZW1lbnQpOwogIH0sCgogIF9lYWNoOiBmdW5jdGlvbihpdGVyYXRvcikgewogICAgdGhpcy5lbGVtZW50LmNsYXNzTmFtZS5zcGxpdCgvXHMrLykuc2VsZWN0KGZ1bmN0aW9uKG5hbWUpIHsKICAgICAgcmV0dXJuIG5hbWUubGVuZ3RoID4gMDsKICAgIH0pLl9lYWNoKGl0ZXJhdG9yKTsKICB9LAoKICBzZXQ6IGZ1bmN0aW9uKGNsYXNzTmFtZSkgewogICAgdGhpcy5lbGVtZW50LmNsYXNzTmFtZSA9IGNsYXNzTmFtZTsKICB9LAoKICBhZGQ6IGZ1bmN0aW9uKGNsYXNzTmFtZVRvQWRkKSB7CiAgICBpZiAodGhpcy5pbmNsdWRlKGNsYXNzTmFtZVRvQWRkKSkgcmV0dXJuOwogICAgdGhpcy5zZXQoJEEodGhpcykuY29uY2F0KGNsYXNzTmFtZVRvQWRkKS5qb2luKCcgJykpOwogIH0sCgogIHJlbW92ZTogZnVuY3Rpb24oY2xhc3NOYW1lVG9SZW1vdmUpIHsKICAgIGlmICghdGhpcy5pbmNsdWRlKGNsYXNzTmFtZVRvUmVtb3ZlKSkgcmV0dXJuOwogICAgdGhpcy5zZXQoJEEodGhpcykud2l0aG91dChjbGFzc05hbWVUb1JlbW92ZSkuam9pbignICcpKTsKICB9LAoKICB0b1N0cmluZzogZnVuY3Rpb24oKSB7CiAgICByZXR1cm4gJEEodGhpcykuam9pbignICcpOwogIH0KfTsKCk9iamVjdC5leHRlbmQoRWxlbWVudC5DbGFzc05hbWVzLnByb3RvdHlwZSwgRW51bWVyYWJsZSk7CgovKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi8KCihmdW5jdGlvbigpIHsKICB3aW5kb3cuU2VsZWN0b3IgPSBDbGFzcy5jcmVhdGUoewogICAgaW5pdGlhbGl6ZTogZnVuY3Rpb24oZXhwcmVzc2lvbikgewogICAgICB0aGlzLmV4cHJlc3Npb24gPSBleHByZXNzaW9uLnN0cmlwKCk7CiAgICB9LAoKICAgIGZpbmRFbGVtZW50czogZnVuY3Rpb24ocm9vdEVsZW1lbnQpIHsKICAgICAgcmV0dXJuIFByb3RvdHlwZS5TZWxlY3Rvci5zZWxlY3QodGhpcy5leHByZXNzaW9uLCByb290RWxlbWVudCk7CiAgICB9LAoKICAgIG1hdGNoOiBmdW5jdGlvbihlbGVtZW50KSB7CiAgICAgIHJldHVybiBQcm90b3R5cGUuU2VsZWN0b3IubWF0Y2goZWxlbWVudCwgdGhpcy5leHByZXNzaW9uKTsKICAgIH0sCgogICAgdG9TdHJpbmc6IGZ1bmN0aW9uKCkgewogICAgICByZXR1cm4gdGhpcy5leHByZXNzaW9uOwogICAgfSwKCiAgICBpbnNwZWN0OiBmdW5jdGlvbigpIHsKICAgICAgcmV0dXJuICIjPFNlbGVjdG9yOiAiICsgdGhpcy5leHByZXNzaW9uICsgIj4iOwogICAgfQogIH0pOwoKICBPYmplY3QuZXh0ZW5kKFNlbGVjdG9yLCB7CiAgICBtYXRjaEVsZW1lbnRzOiBmdW5jdGlvbihlbGVtZW50cywgZXhwcmVzc2lvbikgewogICAgICB2YXIgbWF0Y2ggPSBQcm90b3R5cGUuU2VsZWN0b3IubWF0Y2gsCiAgICAgICAgICByZXN1bHRzID0gW107CgogICAgICBmb3IgKHZhciBpID0gMCwgbGVuZ3RoID0gZWxlbWVudHMubGVuZ3RoOyBpIDwgbGVuZ3RoOyBpKyspIHsKICAgICAgICB2YXIgZWxlbWVudCA9IGVsZW1lbnRzW2ldOwogICAgICAgIGlmIChtYXRjaChlbGVtZW50LCBleHByZXNzaW9uKSkgewogICAgICAgICAgcmVzdWx0cy5wdXNoKEVsZW1lbnQuZXh0ZW5kKGVsZW1lbnQpKTsKICAgICAgICB9CiAgICAgIH0KICAgICAgcmV0dXJuIHJlc3VsdHM7CiAgICB9LAoKICAgIGZpbmRFbGVtZW50OiBmdW5jdGlvbihlbGVtZW50cywgZXhwcmVzc2lvbiwgaW5kZXgpIHsKICAgICAgaW5kZXggPSBpbmRleCB8fCAwOwogICAgICB2YXIgbWF0Y2hJbmRleCA9IDAsIGVsZW1lbnQ7CiAgICAgIGZvciAodmFyIGkgPSAwLCBsZW5ndGggPSBlbGVtZW50cy5sZW5ndGg7IGkgPCBsZW5ndGg7IGkrKykgewogICAgICAgIGVsZW1lbnQgPSBlbGVtZW50c1tpXTsKICAgICAgICBpZiAoUHJvdG90eXBlLlNlbGVjdG9yLm1hdGNoKGVsZW1lbnQsIGV4cHJlc3Npb24pICYmIGluZGV4ID09PSBtYXRjaEluZGV4KyspIHsKICAgICAgICAgIHJldHVybiBFbGVtZW50LmV4dGVuZChlbGVtZW50KTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sCgogICAgZmluZENoaWxkRWxlbWVudHM6IGZ1bmN0aW9uKGVsZW1lbnQsIGV4cHJlc3Npb25zKSB7CiAgICAgIHZhciBzZWxlY3RvciA9IGV4cHJlc3Npb25zLnRvQXJyYXkoKS5qb2luKCcsICcpOwogICAgICByZXR1cm4gUHJvdG90eXBlLlNlbGVjdG9yLnNlbGVjdChzZWxlY3RvciwgZWxlbWVudCB8fCBkb2N1bWVudCk7CiAgICB9CiAgfSk7Cn0pKCk7Cg==
      name: Aspera Faspex - /aspera/faspex/javascripts/prototype.js
      description: 'Fetched from URL: https://69.46.153.12/aspera/faspex/javascripts/prototype.js'
      content_type: application/javascript
      server: Apache
      status_code: "200"
      headers:
        - 'Content-Length: 163312'
        - 'Content-Security-Policy: script-src ''self'' ''unsafe-inline'' ''unsafe-eval'' https://local.connectme.us https://d3gcli72yxqn2z.cloudfront.net; frame-ancestors ''none'''
        - 'X-Xss-Protection: 1; mode=block'
        - 'X-Frame-Options: SAMEORIGIN'
        - 'Last-Modified: Thu, 26 May 2022 07:08:26 GMT'
        - 'Etag: "27df0-5dfe4db292e80"'
        - 'Accept-Ranges: bytes'
        - 'Strict-Transport-Security: max-age=63072000; includeSubdomains; preload'
        - 'X-Content-Type-Options: nosniff'
      created_at: 2024-11-01T19:07:12.92197Z
      updated_at: 2024-11-01T19:07:12.921694Z
      ext_version: 0
      ext_uuid: 350d3a81-3aae-491b-a330-8f0d1b7c3065
    - id: 457
      data: 
      name: Aspera Faspex - /aspera/faspex/javascripts/utils.js
      description: 'Fetched from URL: https://69.46.153.12/aspera/faspex/javascripts/utils.js'
      content_type: application/javascript
      server: Apache
      status_code: "200"
      headers:
        - 'Strict-Transport-Security: max-age=63072000; includeSubdomains; preload'
        - 'X-Content-Type-Options: nosniff'
        - 'Last-Modified: Thu, 26 May 2022 07:08:26 GMT'
        - 'Etag: "1fc2-5dfe4db292e80"'
        - 'X-Xss-Protection: 1; mode=block'
        - 'X-Frame-Options: SAMEORIGIN'
        - 'Accept-Ranges: bytes'
        - 'Content-Length: 8130'
        - 'Content-Security-Policy: script-src ''self'' ''unsafe-inline'' ''unsafe-eval'' https://local.connectme.us https://d3gcli72yxqn2z.cloudfront.net; frame-ancestors ''none'''
      created_at: 2024-11-01T19:07:13.181373Z
      updated_at: 2024-11-01T19:07:13.181199Z
      ext_version: 0
      ext_uuid: 373fafc2-e857-451b-b535-6df5d622102d
    - id: 469
      data: I3Byb2dyZXNzIHsKICAgIHRleHQtYWxpZ246IGNlbnRlcjsKfQojYXNwZXJhX3Byb2dyZXNzX2JhciB7CiAgICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgICBtYXJnaW46IC40ZW07CiAgICBtYXJnaW4tbGVmdDogYXV0bzsKICAgIG1hcmdpbi1yaWdodDogYXV0bzsKICAgIHdpZHRoOiA3MCU7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjREREOwogICAgYm9yZGVyOiAxcHggc29saWQgI0FBQTsKICAgIGhlaWdodDogMTdweDsKfQojYXNwZXJhX3Byb2dyZXNzX2Jhcl9wZXJjZW50IHsKICAgIHBvc2l0aW9uOmFic29sdXRlOwogICAgbWFyZ2luOiAwOwogICAgcGFkZGluZzogMDsKICAgIHRvcDogMDsKICAgIGxlZnQ6IDA7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNDBCREU2OwogICAgdGV4dC1hbGlnbjogbGVmdDsKICAgIGhlaWdodDogMTdweDsKfQojYXNwZXJhX3dlYl9pbnN0YWxsIHsKICAgIGRpc3BsYXk6bm9uZTsKfQojbWFudWFsX2luc3RhbGxfb3B0aW9uIHsKICAgIHRleHQtYWxpZ246IGxlZnQ7CgkJcGFkZGluZy1sZWZ0OjEwNXB4OwogICAgZGlzcGxheTogYmxvY2s7Cn0KI21hbnVhbF9pbnN0YWxsX29wdGlvbiBhIGltZyB7CgltYXJnaW4tYm90dG9tOi04cHg7Cn0KI2F1dG9faW5zdGFsbCB7CglkaXNwbGF5OmJsb2NrOwoJcG9zaXRpb246YWJzb2x1dGU7Cglib3R0b206MjBweDsKCXJpZ2h0OjEwcHg7Cn0KCi5jb25uZWN0X2FwcGxldF9tZXNzYWdlIHsKCXBvc2l0aW9uOmFic29sdXRlOwoJdGV4dC1hbGlnbjpsZWZ0OwoJYm9yZGVyOjFweCBzb2xpZCAjOWQ5ZDlkOwoJYm9yZGVyLXJhZGl1czo2cHg7CgktbW96LWJvcmRlci1yYWRpdXM6NnB4OwoJLXdlYmtpdC1ib3JkZXItcmFkaXVzOjZweDsKCWJhY2tncm91bmQ6I2ZmZiB1cmwoLi4vaW1hZ2VzL2FzX2Nvbm5lY3Rfd2FybmluZy5naWYpIDIwcHggNDVweCBuby1yZXBlYXQ7Cgl3aWR0aDogNDMycHg7IAoJbGVmdDo1MCU7IAoJbWFyZ2luLWxlZnQ6IC0yMTBweDsKCXotaW5kZXg6MTAwMDE7CglwYWRkaW5nLWJvdHRvbToxMnB4Owp9CgouY29ubmVjdF9hcHBsZXRfbWVzc2FnZSBwIHsKCXBhZGRpbmc6IDAgMTJweCAwIDEwNXB4Owp9Cg==
      name: Aspera Faspex - /aspera/faspex/stylesheets/connect_auto_install.css
      description: 'Fetched from URL: https://69.46.153.12/aspera/faspex/stylesheets/connect_auto_install.css'
      content_type: text/css
      server: Apache
      status_code: "200"
      headers:
        - 'Strict-Transport-Security: max-age=63072000; includeSubdomains; preload'
        - 'X-Content-Type-Options: nosniff'
        - 'Last-Modified: Thu, 26 May 2022 07:08:26 GMT'
        - 'Etag: "439-5dfe4db292e80"'
        - 'X-Frame-Options: SAMEORIGIN'
        - 'Accept-Ranges: bytes'
        - 'Content-Length: 1081'
        - 'Content-Security-Policy: script-src ''self'' ''unsafe-inline'' ''unsafe-eval'' https://local.connectme.us https://d3gcli72yxqn2z.cloudfront.net; frame-ancestors ''none'''
        - 'X-Xss-Protection: 1; mode=block'
      created_at: 2024-11-01T19:07:16.233761Z
      updated_at: 2024-11-01T19:07:16.233589Z
      ext_version: 0
      ext_uuid: 02b8c6ef-25b5-4638-87ac-70965e05b0e4
    - id: 446
      data: I2xvZ2luLWNvbnRhaW5lcnsKICB3aWR0aDogMzVlbTsKICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CiAgbWFyZ2luLXJpZ2h0OiAxZW07Cn0KCkBtZWRpYSBvbmx5IHNjcmVlbgogIGFuZCAobWF4LWRldmljZS13aWR0aDogNjAwcHgpIHsKCiAgaDF7CiAgICBmb250LXNpemU6IDV2dzsKICAgIG1hcmdpbi1ib3R0b206NXZ3OwogIH0KCiAgI2xvZ2luLWNvbnRhaW5lcnsKICAgIHdpZHRoOiA5MCU7CiAgICBmb250LXNpemU6IHh4LWxhcmdlOwogIH0KCiAgLmxvZ2luLWVsZW1lbnR7CiAgICBmb250LXNpemU6IHh4LWxhcmdlOwogIH0KfQoKLmxvZ2luLXBhZ2UtaW5zdHJ1Y3Rpb25zewogIG1hcmdpbjogMCAwIDAuMzVlbSAwOwogIGZvbnQtc2l6ZTogMS4xZW07CiAgbGluZS1oZWlnaHQ6IDEuMWVtOwp9CgoubG9naW4tZWxlbWVudCwKaW5wdXQubG9naW4tZWxlbWVudHsKICBkaXNwbGF5OiBibG9jazsKICB3aWR0aDoxMDAlOwogIGhlaWdodDogMi41ZW07CiAgYm94LXNpemluZzogYm9yZGVyLWJveDsKICAtbW96LWJveC1zaXppbmc6IGJvcmRlci1ib3g7Cn0KCi5sb2dpbi1lbGVtZW50ewogIGJhY2tncm91bmQtY29sb3I6ICNiMGIwYjA7CiAgY29sb3I6IHdoaXRlOwogIGJvcmRlcjogMXB4IHNvbGlkIGRpbWdyYXk7Cn0KCmJ1dHRvbi5sb2dpbi1lbGVtZW50OmhvdmVyLAppbnB1dC5sb2dpbi1lbGVtZW50W3R5cGU9InN1Ym1pdCJdOmhvdmVyewogIGJhY2tncm91bmQtY29sb3I6ICNkMGQwZDA7Cn0KCi5sb2dpbi1zZWN0aW9uewogIHdpZHRoOjkwJTsKICBtYXJnaW46IGF1dG87CiAgd29yZC13cmFwOiBicmVhay13b3JkOwp9CgouZm9yZ290LXBhc3N3b3JkLWxpbmt7CiAgbWFyZ2luLWJvdHRvbTogMWVtOwp9CgoubG9naW4tb3B0aW9uLXNlY3Rpb257CiAgbWFyZ2luOiAwIDAgMmVtIDA7Cn0KCi5yZWdpc3RyYXRpb24taW5zdHJ1Y3Rpb25zewogIHdpZHRoOiA2MCU7Cn0KCi5sb2dpbl9hbm5vdW5jZW1lbnQgewogICNwb3NpdGlvbjogYWJzb2x1dGU7CiAgZGlzcGxheTogaW5saW5lLWJsb2NrOwogIG1hcmdpbi1sZWZ0OiAyZW07CiAgYmFja2dyb3VuZDojZmZmN2QyOwogIHBhZGRpbmc6MTZweCAxNnB4OwogIHdpZHRoOjM5N3B4ICFpbXBvcnRhbnQ7CiAgYm9yZGVyOjFweCBzb2xpZCAjZmZkMjAwOwogIHZlcnRpY2FsLWFsaWduOiB0b3A7Cn0KCiNsb2dpbi1wYWdlewogIG1hcmdpbi1sZWZ0OiAxZW07Cn0KCiNsb2dpbi1jb250YWluZXIgewogIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjAwLCAyMDAsIDIwMCwgMC4yKTsKICBib3JkZXItcmFkaXVzOjdweDsKICAtbW96LWJvcmRlci1yYWRpdXM6N3B4OwogIC13ZWJraXQtYm9yZGVyLXJhZGl1czo3cHg7CiAgYm9yZGVyOjFweCBzb2xpZCAjYzVjNWM1OwogIHBhZGRpbmc6IDFlbSAxLjVlbSAxZW0gMWVtOwogIG1hcmdpbi10b3A6IDA7CiAgbWFyZ2luLWJvdHRvbTogMWVtOwp9CgoubG9naW5fYW5ub3VuY2VtZW50IHAgewogIHBhZGRpbmctYm90dG9tOjE2cHg7Cn0KCi5sb2dpbi1zZXBlcmF0b3ItY29udGFpbmVyewogIHdpZHRoOiAxMDAlOwogIGRpc3BsYXk6dGFibGU7CiAgbWFyZ2luOiAyZW0gMDsKfQoKLmxvZ2luLXNlcGVyYXRvci1jZWxsewogIGRpc3BsYXk6dGFibGUtY2VsbDsKICB3aWR0aDozMyU7Cn0KCi5sb2dpbi1zZXBlcmF0b3J7CiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIGRpbWdyYXk7CiAgbGluZS1oZWlnaHQ6IDAuMWVtOwogIG1hcmdpbi1ib3R0b206IDVweDsKICB3aWR0aDogMTAwJTsKfQoKLmxvZ2luLXNlcGVyYXRvci10ZXh0ewogIGRpc3BsYXk6IGlubGluZS1ibG9jazsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgd2lkdGg6IDEwMCU7Cn0K
      name: Aspera Faspex - /aspera/faspex/stylesheets/login/new.css
      description: 'Fetched from URL: https://69.46.153.12/aspera/faspex/stylesheets/login/new.css'
      content_type: text/css
      server: Apache
      status_code: "200"
      headers:
        - 'X-Content-Type-Options: nosniff'
        - 'Last-Modified: Thu, 26 May 2022 07:08:26 GMT'
        - 'Etag: "72f-5dfe4db292e80"'
        - 'X-Xss-Protection: 1; mode=block'
        - 'X-Frame-Options: SAMEORIGIN'
        - 'Strict-Transport-Security: max-age=63072000; includeSubdomains; preload'
        - 'Accept-Ranges: bytes'
        - 'Content-Length: 1839'
        - 'Content-Security-Policy: script-src ''self'' ''unsafe-inline'' ''unsafe-eval'' https://local.connectme.us https://d3gcli72yxqn2z.cloudfront.net; frame-ancestors ''none'''
      created_at: 2024-11-01T19:07:09.428127Z
      updated_at: 2024-11-01T19:07:09.427958Z
      ext_version: 0
      ext_uuid: db0bfa6b-9df6-4967-9dee-19e72d70cd64
    - id: 461
      data: LyogQ3Jvc3MtQnJvd3NlciBTcGxpdCAxLjAuMQooYykgU3RldmVuIExldml0aGFuIDxzdGV2ZW5sZXZpdGhhbi5jb20+OyBNSVQgTGljZW5zZQpBbiBFQ01BLWNvbXBsaWFudCwgdW5pZm9ybSBjcm9zcy1icm93c2VyIHNwbGl0IG1ldGhvZCAqLwoKdmFyIGNiU3BsaXQ7CgovLyBhdm9pZCBydW5uaW5nIHR3aWNlLCB3aGljaCB3b3VsZCBicmVhayBgY2JTcGxpdC5fbmF0aXZlU3BsaXRgJ3MgcmVmZXJlbmNlIHRvIHRoZSBuYXRpdmUgYHNwbGl0YAppZiAoIWNiU3BsaXQpIHsKCmNiU3BsaXQgPSBmdW5jdGlvbiAoc3RyLCBzZXBhcmF0b3IsIGxpbWl0KSB7CiAgICAvLyBpZiBgc2VwYXJhdG9yYCBpcyBub3QgYSByZWdleCwgdXNlIHRoZSBuYXRpdmUgYHNwbGl0YAogICAgaWYgKE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChzZXBhcmF0b3IpICE9PSAiW29iamVjdCBSZWdFeHBdIikgewogICAgICAgIHJldHVybiBjYlNwbGl0Ll9uYXRpdmVTcGxpdC5jYWxsKHN0ciwgc2VwYXJhdG9yLCBsaW1pdCk7CiAgICB9CgogICAgdmFyIG91dHB1dCA9IFtdLAogICAgICAgIGxhc3RMYXN0SW5kZXggPSAwLAogICAgICAgIGZsYWdzID0gKHNlcGFyYXRvci5pZ25vcmVDYXNlID8gImkiIDogIiIpICsKICAgICAgICAgICAgICAgIChzZXBhcmF0b3IubXVsdGlsaW5lICA/ICJtIiA6ICIiKSArCiAgICAgICAgICAgICAgICAoc2VwYXJhdG9yLnN0aWNreSAgICAgPyAieSIgOiAiIiksCiAgICAgICAgc2VwYXJhdG9yID0gUmVnRXhwKHNlcGFyYXRvci5zb3VyY2UsIGZsYWdzICsgImciKSwgLy8gbWFrZSBgZ2xvYmFsYCBhbmQgYXZvaWQgYGxhc3RJbmRleGAgaXNzdWVzIGJ5IHdvcmtpbmcgd2l0aCBhIGNvcHkKICAgICAgICBzZXBhcmF0b3IyLCBtYXRjaCwgbGFzdEluZGV4LCBsYXN0TGVuZ3RoOwoKICAgIHN0ciA9IHN0ciArICIiOyAvLyB0eXBlIGNvbnZlcnNpb24KICAgIGlmICghY2JTcGxpdC5fY29tcGxpYW50RXhlY05wY2cpIHsKICAgICAgICBzZXBhcmF0b3IyID0gUmVnRXhwKCJeIiArIHNlcGFyYXRvci5zb3VyY2UgKyAiJCg/IVxccykiLCBmbGFncyk7IC8vIGRvZXNuJ3QgbmVlZCAvZyBvciAveSwgYnV0IHRoZXkgZG9uJ3QgaHVydAogICAgfQoKICAgIC8qIGJlaGF2aW9yIGZvciBgbGltaXRgOiBpZiBpdCdzLi4uCiAgICAtIGB1bmRlZmluZWRgOiBubyBsaW1pdC4KICAgIC0gYE5hTmAgb3IgemVybzogcmV0dXJuIGFuIGVtcHR5IGFycmF5LgogICAgLSBhIHBvc2l0aXZlIG51bWJlcjogdXNlIGBNYXRoLmZsb29yKGxpbWl0KWAuCiAgICAtIGEgbmVnYXRpdmUgbnVtYmVyOiBubyBsaW1pdC4KICAgIC0gb3RoZXI6IHR5cGUtY29udmVydCwgdGhlbiB1c2UgdGhlIGFib3ZlIHJ1bGVzLiAqLwogICAgaWYgKGxpbWl0ID09PSB1bmRlZmluZWQgfHwgK2xpbWl0IDwgMCkgewogICAgICAgIGxpbWl0ID0gSW5maW5pdHk7CiAgICB9IGVsc2UgewogICAgICAgIGxpbWl0ID0gTWF0aC5mbG9vcigrbGltaXQpOwogICAgICAgIGlmICghbGltaXQpIHsKICAgICAgICAgICAgcmV0dXJuIFtdOwogICAgICAgIH0KICAgIH0KCiAgICB3aGlsZSAobWF0Y2ggPSBzZXBhcmF0b3IuZXhlYyhzdHIpKSB7CiAgICAgICAgbGFzdEluZGV4ID0gbWF0Y2guaW5kZXggKyBtYXRjaFswXS5sZW5ndGg7IC8vIGBzZXBhcmF0b3IubGFzdEluZGV4YCBpcyBub3QgcmVsaWFibGUgY3Jvc3MtYnJvd3NlcgoKICAgICAgICBpZiAobGFzdEluZGV4ID4gbGFzdExhc3RJbmRleCkgewogICAgICAgICAgICBvdXRwdXQucHVzaChzdHIuc2xpY2UobGFzdExhc3RJbmRleCwgbWF0Y2guaW5kZXgpKTsKCiAgICAgICAgICAgIC8vIGZpeCBicm93c2VycyB3aG9zZSBgZXhlY2AgbWV0aG9kcyBkb24ndCBjb25zaXN0ZW50bHkgcmV0dXJuIGB1bmRlZmluZWRgIGZvciBub25wYXJ0aWNpcGF0aW5nIGNhcHR1cmluZyBncm91cHMKICAgICAgICAgICAgaWYgKCFjYlNwbGl0Ll9jb21wbGlhbnRFeGVjTnBjZyAmJiBtYXRjaC5sZW5ndGggPiAxKSB7CiAgICAgICAgICAgICAgICBtYXRjaFswXS5yZXBsYWNlKHNlcGFyYXRvcjIsIGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGggLSAyOyBpKyspIHsKICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGFyZ3VtZW50c1tpXSA9PT0gdW5kZWZpbmVkKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtYXRjaFtpXSA9IHVuZGVmaW5lZDsKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICB9CgogICAgICAgICAgICBpZiAobWF0Y2gubGVuZ3RoID4gMSAmJiBtYXRjaC5pbmRleCA8IHN0ci5sZW5ndGgpIHsKICAgICAgICAgICAgICAgIEFycmF5LnByb3RvdHlwZS5wdXNoLmFwcGx5KG91dHB1dCwgbWF0Y2guc2xpY2UoMSkpOwogICAgICAgICAgICB9CgogICAgICAgICAgICBsYXN0TGVuZ3RoID0gbWF0Y2hbMF0ubGVuZ3RoOwogICAgICAgICAgICBsYXN0TGFzdEluZGV4ID0gbGFzdEluZGV4OwoKICAgICAgICAgICAgaWYgKG91dHB1dC5sZW5ndGggPj0gbGltaXQpIHsKICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICBpZiAoc2VwYXJhdG9yLmxhc3RJbmRleCA9PT0gbWF0Y2guaW5kZXgpIHsKICAgICAgICAgICAgc2VwYXJhdG9yLmxhc3RJbmRleCsrOyAvLyBhdm9pZCBhbiBpbmZpbml0ZSBsb29wCiAgICAgICAgfQogICAgfQoKICAgIGlmIChsYXN0TGFzdEluZGV4ID09PSBzdHIubGVuZ3RoKSB7CiAgICAgICAgaWYgKGxhc3RMZW5ndGggfHwgIXNlcGFyYXRvci50ZXN0KCIiKSkgewogICAgICAgICAgICBvdXRwdXQucHVzaCgiIik7CiAgICAgICAgfQogICAgfSBlbHNlIHsKICAgICAgICBvdXRwdXQucHVzaChzdHIuc2xpY2UobGFzdExhc3RJbmRleCkpOwogICAgfQoKICAgIHJldHVybiBvdXRwdXQubGVuZ3RoID4gbGltaXQgPyBvdXRwdXQuc2xpY2UoMCwgbGltaXQpIDogb3V0cHV0Owp9OwoKY2JTcGxpdC5fY29tcGxpYW50RXhlY05wY2cgPSAvKCk/Py8uZXhlYygiIilbMV0gPT09IHVuZGVmaW5lZDsgLy8gTlBDRzogbm9ucGFydGljaXBhdGluZyBjYXB0dXJpbmcgZ3JvdXAKY2JTcGxpdC5fbmF0aXZlU3BsaXQgPSBTdHJpbmcucHJvdG90eXBlLnNwbGl0OwoKfSAvLyBlbmQgYGlmICghY2JTcGxpdClgCgovLyBmb3IgY29udmVuaWVuY2UuLi4KU3RyaW5nLnByb3RvdHlwZS5zcGxpdCA9IGZ1bmN0aW9uIChzZXBhcmF0b3IsIGxpbWl0KSB7CiAgICByZXR1cm4gY2JTcGxpdCh0aGlzLCBzZXBhcmF0b3IsIGxpbWl0KTsKfTsK
      name: Aspera Faspex - /aspera/faspex/javascripts/third-party/split.js
      description: 'Fetched from URL: https://69.46.153.12/aspera/faspex/javascripts/third-party/split.js'
      content_type: application/javascript
      server: Apache
      status_code: "200"
      headers:
        - 'X-Frame-Options: SAMEORIGIN'
        - 'Strict-Transport-Security: max-age=63072000; includeSubdomains; preload'
        - 'X-Xss-Protection: 1; mode=block'
        - 'X-Content-Type-Options: nosniff'
        - 'Last-Modified: Thu, 26 May 2022 07:08:26 GMT'
        - 'Etag: "d02-5dfe4db292e80"'
        - 'Accept-Ranges: bytes'
        - 'Content-Length: 3330'
        - 'Content-Security-Policy: script-src ''self'' ''unsafe-inline'' ''unsafe-eval'' https://local.connectme.us https://d3gcli72yxqn2z.cloudfront.net; frame-ancestors ''none'''
      created_at: 2024-11-01T19:07:14.204401Z
      updated_at: 2024-11-01T19:07:14.204225Z
      ext_version: 0
      ext_uuid: 4558605e-ecf9-4cfb-ba84-afef4afd8110
    - id: 463
      data: 
      name: Aspera Faspex - /aspera/faspex/javascripts/third-party/jQuery-UI-Date-Range-Picker/date.js
      description: 'Fetched from URL: https://69.46.153.12/aspera/faspex/javascripts/third-party/jQuery-UI-Date-Range-Picker/date.js'
      content_type: application/javascript
      server: Apache
      status_code: "200"
      headers:
        - 'X-Xss-Protection: 1; mode=block'
        - 'Strict-Transport-Security: max-age=63072000; includeSubdomains; preload'
        - 'X-Content-Type-Options: nosniff'
        - 'Last-Modified: Thu, 26 May 2022 07:08:26 GMT'
        - 'Etag: "81c7-5dfe4db292e80"'
        - 'Accept-Ranges: bytes'
        - 'X-Frame-Options: SAMEORIGIN'
        - 'Content-Length: 33223'
        - 'Content-Security-Policy: script-src ''self'' ''unsafe-inline'' ''unsafe-eval'' https://local.connectme.us https://d3gcli72yxqn2z.cloudfront.net; frame-ancestors ''none'''
      created_at: 2024-11-01T19:07:14.710922Z
      updated_at: 2024-11-01T19:07:14.710605Z
      ext_version: 0
      ext_uuid: 7974a46b-6274-4425-8666-acc5551c3614
    - id: 447
      data: 
      name: Aspera Faspex - /aspera/faspex/javascripts/third-party/underscore-min.js
      description: 'Fetched from URL: https://69.46.153.12/aspera/faspex/javascripts/third-party/underscore-min.js'
      content_type: application/javascript
      server: Apache
      status_code: "200"
      headers:
        - 'Content-Length: 12140'
        - 'Content-Security-Policy: script-src ''self'' ''unsafe-inline'' ''unsafe-eval'' https://local.connectme.us https://d3gcli72yxqn2z.cloudfront.net; frame-ancestors ''none'''
        - 'X-Content-Type-Options: nosniff'
        - 'Last-Modified: Thu, 26 May 2022 07:08:26 GMT'
        - 'Etag: "2f6c-5dfe4db292e80"'
        - 'Strict-Transport-Security: max-age=63072000; includeSubdomains; preload'
        - 'Accept-Ranges: bytes'
        - 'X-Xss-Protection: 1; mode=block'
        - 'X-Frame-Options: SAMEORIGIN'
      created_at: 2024-11-01T19:07:09.680537Z
      updated_at: 2024-11-01T19:07:09.680424Z
      ext_version: 0
      ext_uuid: ce7a3fef-8a38-4c8c-8c56-444eed5b5bdc
    - id: 465
      data: LyohIGh0dHA6Ly9tdGhzLmJlL3BsYWNlaG9sZGVyIHYyLjAuNyBieSBAbWF0aGlhcyAqLwo7KGZ1bmN0aW9uKGYsaCwkKXt2YXIgYT0ncGxhY2Vob2xkZXInIGluIGguY3JlYXRlRWxlbWVudCgnaW5wdXQnKSxkPSdwbGFjZWhvbGRlcicgaW4gaC5jcmVhdGVFbGVtZW50KCd0ZXh0YXJlYScpLGk9JC5mbixjPSQudmFsSG9va3MsayxqO2lmKGEmJmQpe2o9aS5wbGFjZWhvbGRlcj1mdW5jdGlvbigpe3JldHVybiB0aGlzfTtqLmlucHV0PWoudGV4dGFyZWE9dHJ1ZX1lbHNle2o9aS5wbGFjZWhvbGRlcj1mdW5jdGlvbigpe3ZhciBsPXRoaXM7bC5maWx0ZXIoKGE/J3RleHRhcmVhJzonOmlucHV0JykrJ1twbGFjZWhvbGRlcl0nKS5ub3QoJy5wbGFjZWhvbGRlcicpLmJpbmQoeydmb2N1cy5wbGFjZWhvbGRlcic6YiwnYmx1ci5wbGFjZWhvbGRlcic6ZX0pLmRhdGEoJ3BsYWNlaG9sZGVyLWVuYWJsZWQnLHRydWUpLnRyaWdnZXIoJ2JsdXIucGxhY2Vob2xkZXInKTtyZXR1cm4gbH07ai5pbnB1dD1hO2oudGV4dGFyZWE9ZDtrPXtnZXQ6ZnVuY3Rpb24obSl7dmFyIGw9JChtKTtyZXR1cm4gbC5kYXRhKCdwbGFjZWhvbGRlci1lbmFibGVkJykmJmwuaGFzQ2xhc3MoJ3BsYWNlaG9sZGVyJyk/Jyc6bS52YWx1ZX0sc2V0OmZ1bmN0aW9uKG0sbil7dmFyIGw9JChtKTtpZighbC5kYXRhKCdwbGFjZWhvbGRlci1lbmFibGVkJykpe3JldHVybiBtLnZhbHVlPW59aWYobj09Jycpe20udmFsdWU9bjtpZihtIT1oLmFjdGl2ZUVsZW1lbnQpe2UuY2FsbChtKX19ZWxzZXtpZihsLmhhc0NsYXNzKCdwbGFjZWhvbGRlcicpKXtiLmNhbGwobSx0cnVlLG4pfHwobS52YWx1ZT1uKX1lbHNle20udmFsdWU9bn19cmV0dXJuIGx9fTthfHwoYy5pbnB1dD1rKTtkfHwoYy50ZXh0YXJlYT1rKTskKGZ1bmN0aW9uKCl7JChoKS5kZWxlZ2F0ZSgnZm9ybScsJ3N1Ym1pdC5wbGFjZWhvbGRlcicsZnVuY3Rpb24oKXt2YXIgbD0kKCcucGxhY2Vob2xkZXInLHRoaXMpLmVhY2goYik7c2V0VGltZW91dChmdW5jdGlvbigpe2wuZWFjaChlKX0sMTApfSl9KTskKGYpLmJpbmQoJ2JlZm9yZXVubG9hZC5wbGFjZWhvbGRlcicsZnVuY3Rpb24oKXskKCcucGxhY2Vob2xkZXInKS5lYWNoKGZ1bmN0aW9uKCl7dGhpcy52YWx1ZT0nJ30pfSl9ZnVuY3Rpb24gZyhtKXt2YXIgbD17fSxuPS9ealF1ZXJ5XGQrJC87JC5lYWNoKG0uYXR0cmlidXRlcyxmdW5jdGlvbihwLG8pe2lmKG8uc3BlY2lmaWVkJiYhbi50ZXN0KG8ubmFtZSkpe2xbby5uYW1lXT1vLnZhbHVlfX0pO3JldHVybiBsfWZ1bmN0aW9uIGIobSxuKXt2YXIgbD10aGlzLG89JChsKTtpZihsLnZhbHVlPT1vLmF0dHIoJ3BsYWNlaG9sZGVyJykmJm8uaGFzQ2xhc3MoJ3BsYWNlaG9sZGVyJykpe2lmKG8uZGF0YSgncGxhY2Vob2xkZXItcGFzc3dvcmQnKSl7bz1vLmhpZGUoKS5uZXh0KCkuc2hvdygpLmF0dHIoJ2lkJyxvLnJlbW92ZUF0dHIoJ2lkJykuZGF0YSgncGxhY2Vob2xkZXItaWQnKSk7aWYobT09PXRydWUpe3JldHVybiBvWzBdLnZhbHVlPW59by5mb2N1cygpfWVsc2V7bC52YWx1ZT0nJztvLnJlbW92ZUNsYXNzKCdwbGFjZWhvbGRlcicpO2w9PWguYWN0aXZlRWxlbWVudCYmbC5zZWxlY3QoKX19fWZ1bmN0aW9uIGUoKXt2YXIgcSxsPXRoaXMscD0kKGwpLG09cCxvPXRoaXMuaWQ7aWYobC52YWx1ZT09Jycpe2lmKGwudHlwZT09J3Bhc3N3b3JkJyl7aWYoIXAuZGF0YSgncGxhY2Vob2xkZXItdGV4dGlucHV0Jykpe3RyeXtxPXAuY2xvbmUoKS5hdHRyKHt0eXBlOid0ZXh0J30pfWNhdGNoKG4pe3E9JCgnPGlucHV0PicpLmF0dHIoJC5leHRlbmQoZyh0aGlzKSx7dHlwZTondGV4dCd9KSl9cS5yZW1vdmVBdHRyKCduYW1lJykuZGF0YSh7J3BsYWNlaG9sZGVyLXBhc3N3b3JkJzp0cnVlLCdwbGFjZWhvbGRlci1pZCc6b30pLmJpbmQoJ2ZvY3VzLnBsYWNlaG9sZGVyJyxiKTtwLmRhdGEoeydwbGFjZWhvbGRlci10ZXh0aW5wdXQnOnEsJ3BsYWNlaG9sZGVyLWlkJzpvfSkuYmVmb3JlKHEpfXA9cC5yZW1vdmVBdHRyKCdpZCcpLmhpZGUoKS5wcmV2KCkuYXR0cignaWQnLG8pLnNob3coKX1wLmFkZENsYXNzKCdwbGFjZWhvbGRlcicpO3BbMF0udmFsdWU9cC5hdHRyKCdwbGFjZWhvbGRlcicpfWVsc2V7cC5yZW1vdmVDbGFzcygncGxhY2Vob2xkZXInKX19fSh0aGlzLGRvY3VtZW50LGpRdWVyeSkpOw==
      name: Aspera Faspex - /aspera/faspex/javascripts/third-party/jquery.placeholder.min.js
      description: 'Fetched from URL: https://69.46.153.12/aspera/faspex/javascripts/third-party/jquery.placeholder.min.js'
      content_type: application/javascript
      server: Apache
      status_code: "200"
      headers:
        - 'Strict-Transport-Security: max-age=63072000; includeSubdomains; preload'
        - 'X-Content-Type-Options: nosniff'
        - 'Last-Modified: Thu, 26 May 2022 07:08:26 GMT'
        - 'Etag: "871-5dfe4db292e80"'
        - 'Accept-Ranges: bytes'
        - 'Content-Length: 2161'
        - 'X-Frame-Options: SAMEORIGIN'
        - 'Content-Security-Policy: script-src ''self'' ''unsafe-inline'' ''unsafe-eval'' https://local.connectme.us https://d3gcli72yxqn2z.cloudfront.net; frame-ancestors ''none'''
        - 'X-Xss-Protection: 1; mode=block'
      created_at: 2024-11-01T19:07:15.224288Z
      updated_at: 2024-11-01T19:07:15.224095Z
      ext_version: 0
      ext_uuid: e20ebc53-0f5a-4fa7-8180-c73bacb00c1c
    - id: 454
      data: Ly8gVGFrZW4gZnJvbSB0d2l0dGVyCmZ1bmN0aW9uIGJ1c3QgKCkgewogIGRvY3VtZW50LndyaXRlID0gIiI7CiAgd2luZG93LnRvcC5sb2NhdGlvbiA9IHdpbmRvdy5zZWxmLmxvY2F0aW9uOwogIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7CiAgICBkb2N1bWVudC5ib2R5LmlubmVySFRNTCA9ICcnOwogICAgfSwgMCk7CiAgd2luZG93LnNlbGYub25sb2FkID0gZnVuY3Rpb24oZXZ0KSB7CiAgICBkb2N1bWVudC5ib2R5LmlubmVySFRNTCA9ICcnOwogIH07Cn0KaWYgKHdpbmRvdy50b3AgIT09IHdpbmRvdy5zZWxmKSB7IC8vIGFyZSB5b3UgdHJ5aW5nIHRvIHB1dCBzZWxmIGluIGFuIGlmcmFtZT8KICB0cnkgewogICAgaWYgKHdpbmRvdy50b3AubG9jYXRpb24uaG9zdCkgeyAvLyB0aGlzIGlzIGlsbGVnYWwgdG8gYWNjZXNzIHVubGVzcyB5b3Ugc2hhcmUgYSBub24tc3Bvb2ZhYmxlIGRvY3VtZW50IGRvbWFpbgogICAgICAvLyBmdW4gdGltZXMKICAgIH0gZWxzZSB7CiAgICAgIGJ1c3QoKTsgLy8gY2hyb21lIGV4ZWN1dGVzIHRoaXMKICAgIH0KICB9IGNhdGNoIChleCkgewogICAgYnVzdCgpOyAvLyBldmVyeW9uZSBleGVjdXRlcyB0aGlzCiAgfQp9Cg==
      name: Aspera Faspex - /aspera/faspex/javascripts/frame_bust.js
      description: 'Fetched from URL: https://69.46.153.12/aspera/faspex/javascripts/frame_bust.js'
      content_type: application/javascript
      server: Apache
      status_code: "200"
      headers:
        - 'Strict-Transport-Security: max-age=63072000; includeSubdomains; preload'
        - 'X-Content-Type-Options: nosniff'
        - 'Etag: "256-5dfe4db292e80"'
        - 'Content-Length: 598'
        - 'X-Xss-Protection: 1; mode=block'
        - 'X-Frame-Options: SAMEORIGIN'
        - 'Last-Modified: Thu, 26 May 2022 07:08:26 GMT'
        - 'Accept-Ranges: bytes'
        - 'Content-Security-Policy: script-src ''self'' ''unsafe-inline'' ''unsafe-eval'' https://local.connectme.us https://d3gcli72yxqn2z.cloudfront.net; frame-ancestors ''none'''
      created_at: 2024-11-01T19:07:11.445827Z
      updated_at: 2024-11-01T19:07:11.445666Z
      ext_version: 0
      ext_uuid: aee5fa70-efff-4a7c-beeb-b83bd897a6b7
    - id: 455
      data: 
      name: Aspera Faspex - /aspera/faspex/stylesheets/faspex.css
      description: 'Fetched from URL: https://69.46.153.12/aspera/faspex/stylesheets/faspex.css'
      content_type: text/css
      server: Apache
      status_code: "200"
      headers:
        - 'X-Frame-Options: SAMEORIGIN'
        - 'Last-Modified: Thu, 26 May 2022 07:08:26 GMT'
        - 'Accept-Ranges: bytes'
        - 'Content-Security-Policy: script-src ''self'' ''unsafe-inline'' ''unsafe-eval'' https://local.connectme.us https://d3gcli72yxqn2z.cloudfront.net; frame-ancestors ''none'''
        - 'X-Xss-Protection: 1; mode=block'
        - 'Strict-Transport-Security: max-age=63072000; includeSubdomains; preload'
        - 'X-Content-Type-Options: nosniff'
        - 'Etag: "9269-5dfe4db292e80"'
        - 'Content-Length: 37481'
      created_at: 2024-11-01T19:07:11.937357Z
      updated_at: 2024-11-01T19:07:11.937059Z
      ext_version: 0
      ext_uuid: d166ee81-26ff-4340-a2d3-df8d3de88a2d
    - id: 458
      data: Ly8gU2VsZWN0IHRleHRhcmVhIHdoZW4gY2xpY2tlZCBvbiBmaXJzdCB0aW1lIHdpdGhvdXQgZm9jdXMKCmpRdWVyeShmdW5jdGlvbigkKSB7CiAgdmFyIGNsaWNrRnVuID0gZnVuY3Rpb24oKSB7CiAgICAkKHRoaXMpLnNlbGVjdCgpOwogIH07CgogICQoJy5zZWxlY3QtYWxsLW9uLWNsaWNrJykubW91c2VlbnRlcihmdW5jdGlvbigpIHsKICAgIHZhciAkdGhpcyA9ICQodGhpcyk7CiAgICBpZiAoISR0aGlzLmlzKCc6Zm9jdXMnKSkgewogICAgICAkdGhpcy5vbmUoJ2NsaWNrJywgY2xpY2tGdW4pOwogICAgfQogIH0pLm1vdXNlbGVhdmUoZnVuY3Rpb24oKSB7CiAgICAkKHRoaXMpLm9mZignY2xpY2snLCBjbGlja0Z1bik7CiAgfSk7Cn0pOwo=
      name: Aspera Faspex - /aspera/faspex/javascripts/shared/highlight_text.js
      description: 'Fetched from URL: https://69.46.153.12/aspera/faspex/javascripts/shared/highlight_text.js'
      content_type: application/javascript
      server: Apache
      status_code: "200"
      headers:
        - 'Content-Security-Policy: script-src ''self'' ''unsafe-inline'' ''unsafe-eval'' https://local.connectme.us https://d3gcli72yxqn2z.cloudfront.net; frame-ancestors ''none'''
        - 'X-Frame-Options: SAMEORIGIN'
        - 'X-Content-Type-Options: nosniff'
        - 'Last-Modified: Thu, 26 May 2022 07:08:26 GMT'
        - 'Etag: "16d-5dfe4db292e80"'
        - 'Accept-Ranges: bytes'
        - 'Strict-Transport-Security: max-age=63072000; includeSubdomains; preload'
        - 'Content-Length: 365'
        - 'X-Xss-Protection: 1; mode=block'
      created_at: 2024-11-01T19:07:13.430679Z
      updated_at: 2024-11-01T19:07:13.430527Z
      ext_version: 0
      ext_uuid: a15304f5-033d-47d5-8d76-c7a5e5ddca43
    - id: 462
      data: alF1ZXJ5KGZ1bmN0aW9uKCQpIHsKICAkKCcjdXNlcm5hbWUnKS5mb2N1cygpOwoKCiAgJCgnI3VzZXJuYW1lJykucGxhY2Vob2xkZXIoKTsKICAkKCcjcGFzc3dvcmQnKS5wbGFjZWhvbGRlcigpOwoKICAkKCcuYnV0dG9uLWxpbmsnKS5jbGljayhmdW5jdGlvbigpewogICAgd2luZG93LmxvY2F0aW9uID0gJCh0aGlzKS5kYXRhKCdsaW5rJyk7CiAgfSk7Cn0pOwo=
      name: Aspera Faspex - /aspera/faspex/javascripts/login/new.js
      description: 'Fetched from URL: https://69.46.153.12/aspera/faspex/javascripts/login/new.js'
      content_type: application/javascript
      server: Apache
      status_code: "200"
      headers:
        - 'Strict-Transport-Security: max-age=63072000; includeSubdomains; preload'
        - 'Last-Modified: Thu, 26 May 2022 07:08:26 GMT'
        - 'Etag: "ce-5dfe4db292e80"'
        - 'Accept-Ranges: bytes'
        - 'Content-Security-Policy: script-src ''self'' ''unsafe-inline'' ''unsafe-eval'' https://local.connectme.us https://d3gcli72yxqn2z.cloudfront.net; frame-ancestors ''none'''
        - 'X-Frame-Options: SAMEORIGIN'
        - 'X-Content-Type-Options: nosniff'
        - 'Content-Length: 206'
        - 'X-Xss-Protection: 1; mode=block'
      created_at: 2024-11-01T19:07:14.457222Z
      updated_at: 2024-11-01T19:07:14.457103Z
      ext_version: 0
      ext_uuid: efe43428-eaf8-4d8c-a5e5-1b12fccb2a87
    - id: 449
      data: KGZ1bmN0aW9uKCAkICl7CiAgJC5mbi5iYXNlRGlhbG9nID0gZnVuY3Rpb24gKCBvcHRpb25zICkgewogICAgdmFyIGRlZmF1bHRzID0gewogICAgICBoZWlnaHQ6IDYxMCwKICAgICAgd2lkdGg6IDU1MCwKICAgICAgYXV0b09wZW46IGZhbHNlLAogICAgICB0aXRsZTogJ0Jhc2UgRGlhbG9nJywKICAgICAgb3BlbjogIGZ1bmN0aW9uICgpIHt9LAogICAgICBjbG9zZTogZnVuY3Rpb24gKCkgeyAkKHRoaXMpLnJlbW92ZSgpOyB9LAogICAgICBidXR0b25zOiB7fQogICAgfQoKICAgIHZhciBvcHRpb25zID0gJC5leHRlbmQoe30sIGRlZmF1bHRzLCBvcHRpb25zKTsKCiAgICByZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uICgpIHsKICAgICAgICAgICQodGhpcykuZGlhbG9nKHsKICAgICAgICAgICAgbW9kYWw6ICAgICAgdHJ1ZSwKICAgICAgICAgICAgcmVzaXplYWJsZTogZmFsc2UsCiAgICAgICAgICAgIGhlaWdodDogICAgIG9wdGlvbnMuaGVpZ2h0LAogICAgICAgICAgICB3aWR0aDogICAgICBvcHRpb25zLndpZHRoLAogICAgICAgICAgICB0aXRsZTogICAgICBvcHRpb25zLnRpdGxlLAogICAgICAgICAgICBvcGVuOiAgICAgICBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgJCh0aGlzKS5odG1sKEFwcC5zcGlubmVySW1hZ2UgKyAnIDxzcGFuPkxvYWRpbmc8L3NwYW4nKTsKICAgICAgICAgICAgICBvcHRpb25zLm9wZW4uY2FsbCh0aGlzKTsKICAgICAgICAgICAgfSwKICAgICAgICAgICAgY2xvc2U6ICAgICAgb3B0aW9ucy5jbG9zZSwKICAgICAgICAgICAgYnV0dG9uczogICAgb3B0aW9ucy5idXR0b25zCiAgICAgICAgICB9KTsKICAgIH0pOwogIH07Cn0pKCBqUXVlcnkgKTsK
      name: Aspera Faspex - /aspera/faspex/javascripts/utils/dialog.js
      description: 'Fetched from URL: https://69.46.153.12/aspera/faspex/javascripts/utils/dialog.js'
      content_type: application/javascript
      server: Apache
      status_code: "200"
      headers:
        - 'Strict-Transport-Security: max-age=63072000; includeSubdomains; preload'
        - 'X-Content-Type-Options: nosniff'
        - 'Last-Modified: Thu, 26 May 2022 07:08:26 GMT'
        - 'Accept-Ranges: bytes'
        - 'Content-Length: 846'
        - 'X-Xss-Protection: 1; mode=block'
        - 'X-Frame-Options: SAMEORIGIN'
        - 'Etag: "34e-5dfe4db292e80"'
        - 'Content-Security-Policy: script-src ''self'' ''unsafe-inline'' ''unsafe-eval'' https://local.connectme.us https://d3gcli72yxqn2z.cloudfront.net; frame-ancestors ''none'''
      created_at: 2024-11-01T19:07:10.185856Z
      updated_at: 2024-11-01T19:07:10.185736Z
      ext_version: 0
      ext_uuid: 122dbc26-90e4-4379-bdc8-0139bea54718
    - id: 450
      data: KGZ1bmN0aW9uKCl7KGZ1bmN0aW9uKCl7ZnVuY3Rpb24gZyhhKXtyZXR1cm4iIi50cmltP2EudHJpbSgpOmEucmVwbGFjZSgvXlxzKy8sIiIpLnJlcGxhY2UoL1xzKyQvLCIiKX12YXIgYj17VkVSU0lPTjoiMC4xMC4yIix0ZW1wbGF0ZXM6e30sJDoidW5kZWZpbmVkIiE9PXR5cGVvZiB3aW5kb3c/d2luZG93LmpRdWVyeXx8d2luZG93LlplcHRvfHxudWxsOm51bGwsYWRkVGVtcGxhdGU6ZnVuY3Rpb24oYSxkKXtpZigib2JqZWN0Ij09PXR5cGVvZiBhKWZvcih2YXIgZSBpbiBhKXRoaXMuYWRkVGVtcGxhdGUoZSxhW2VdKTtlbHNlIGJbYV0/Y29uc29sZS5lcnJvcigiSW52YWxpZCBuYW1lOiAiK2ErIi4iKTpiLnRlbXBsYXRlc1thXT9jb25zb2xlLmVycm9yKCdUZW1wbGF0ZSAiJythKycgICIgZXhpc3RzJyk6KGIudGVtcGxhdGVzW2FdPWQsYlthXT1mdW5jdGlvbihjLGQpe2M9Y3x8e307dmFyIGU9TXVzdGFjaGUudG9faHRtbChiLnRlbXBsYXRlc1thXSxjLGIudGVtcGxhdGVzKTtyZXR1cm4gYi4kJiYKIWQ/Yi4kKGcoZSkpOmV9KX0sY2xlYXJBbGw6ZnVuY3Rpb24oKXtmb3IodmFyIGEgaW4gYi50ZW1wbGF0ZXMpZGVsZXRlIGJbYV07Yi50ZW1wbGF0ZXM9e319LHJlZnJlc2g6ZnVuY3Rpb24oKXtiLmNsZWFyQWxsKCk7Yi5ncmFiVGVtcGxhdGVzKCl9LGdyYWJUZW1wbGF0ZXM6ZnVuY3Rpb24oKXt2YXIgYSxkLGU9ZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoInNjcmlwdCIpLGMsZj1bXTthPTA7Zm9yKGQ9ZS5sZW5ndGg7YTxkO2ErKylpZigoYz1lW2FdKSYmYy5pbm5lckhUTUwmJmMuaWQmJigidGV4dC9odG1sIj09PWMudHlwZXx8InRleHQveC1pY2FuaGF6Ij09PWMudHlwZSkpYi5hZGRUZW1wbGF0ZShjLmlkLGcoYy5pbm5lckhUTUwpKSxmLnVuc2hpZnQoYyk7YT0wO2ZvcihkPWYubGVuZ3RoO2E8ZDthKyspZlthXS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGZbYV0pfX07InVuZGVmaW5lZCIhPT10eXBlb2YgZXhwb3J0cz8oInVuZGVmaW5lZCIhPT10eXBlb2YgbW9kdWxlJiYKbW9kdWxlLmV4cG9ydHMmJihleHBvcnRzPW1vZHVsZS5leHBvcnRzPWIpLGV4cG9ydHMuaWNoPWIpOnRoaXMuaWNoPWI7InVuZGVmaW5lZCIhPT10eXBlb2YgZG9jdW1lbnQmJihiLiQ/Yi4kKGZ1bmN0aW9uKCl7Yi5ncmFiVGVtcGxhdGVzKCl9KTpkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCJET01Db250ZW50TG9hZGVkIixmdW5jdGlvbigpe2IuZ3JhYlRlbXBsYXRlcygpfSwhMCkpfSkoKX0pKCk7Cg==
      name: Aspera Faspex - /aspera/faspex/javascripts/third-party/ICanHaz.min.js
      description: 'Fetched from URL: https://69.46.153.12/aspera/faspex/javascripts/third-party/ICanHaz.min.js'
      content_type: application/javascript
      server: Apache
      status_code: "200"
      headers:
        - 'X-Frame-Options: SAMEORIGIN'
        - 'Strict-Transport-Security: max-age=63072000; includeSubdomains; preload'
        - 'X-Content-Type-Options: nosniff'
        - 'Content-Length: 1246'
        - 'Content-Security-Policy: script-src ''self'' ''unsafe-inline'' ''unsafe-eval'' https://local.connectme.us https://d3gcli72yxqn2z.cloudfront.net; frame-ancestors ''none'''
        - 'Last-Modified: Thu, 26 May 2022 07:08:26 GMT'
        - 'Etag: "4de-5dfe4db292e80"'
        - 'Accept-Ranges: bytes'
        - 'X-Xss-Protection: 1; mode=block'
      created_at: 2024-11-01T19:07:10.438825Z
      updated_at: 2024-11-01T19:07:10.438641Z
      ext_version: 0
      ext_uuid: 5174c56c-62c4-40a5-87f2-4c0babbd07ab
    - id: 451
      data: LyogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09CiAqIGJvb3RzdHJhcC1kcm9wZG93bi5qcyB2Mi4wLjIKICogaHR0cDovL3R3aXR0ZXIuZ2l0aHViLmNvbS9ib290c3RyYXAvamF2YXNjcmlwdC5odG1sI2Ryb3Bkb3ducwogKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KICogQ29weXJpZ2h0IDIwMTIgVHdpdHRlciwgSW5jLgogKgogKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxpY2Vuc2UiKTsKICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLgogKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQKICoKICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wCiAqCiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmUKICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gIkFTIElTIiBCQVNJUywKICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuCiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQKICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuCiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqLwoKCiFmdW5jdGlvbiggJCApewoKICAidXNlIHN0cmljdCIKCiAvKiBEUk9QRE9XTiBDTEFTUyBERUZJTklUSU9OCiAgKiA9PT09PT09PT09PT09PT09PT09PT09PT09ICovCgogIHZhciB0b2dnbGUgPSAnW2RhdGEtdG9nZ2xlPSJkcm9wZG93biJdJwogICAgLCBEcm9wZG93biA9IGZ1bmN0aW9uICggZWxlbWVudCApIHsKICAgICAgICB2YXIgJGVsID0gJChlbGVtZW50KS5vbignY2xpY2suZHJvcGRvd24uZGF0YS1hcGknLCB0aGlzLnRvZ2dsZSkKICAgICAgICAkKCdodG1sJykub24oJ2NsaWNrLmRyb3Bkb3duLmRhdGEtYXBpJywgZnVuY3Rpb24gKCkgewogICAgICAgICAgJGVsLnBhcmVudCgpLnJlbW92ZUNsYXNzKCdvcGVuJykKICAgICAgICB9KQogICAgICB9CgogIERyb3Bkb3duLnByb3RvdHlwZSA9IHsKCiAgICBjb25zdHJ1Y3RvcjogRHJvcGRvd24KCiAgLCB0b2dnbGU6IGZ1bmN0aW9uICggZSApIHsKICAgICAgdmFyICR0aGlzID0gJCh0aGlzKQogICAgICAgICwgc2VsZWN0b3IgPSAkdGhpcy5hdHRyKCdkYXRhLXRhcmdldCcpCiAgICAgICAgLCAkcGFyZW50CiAgICAgICAgLCBpc0FjdGl2ZQoKICAgICAgaWYgKCFzZWxlY3RvcikgewogICAgICAgIHNlbGVjdG9yID0gJHRoaXMuYXR0cignaHJlZicpCiAgICAgICAgc2VsZWN0b3IgPSBzZWxlY3RvciAmJiBzZWxlY3Rvci5yZXBsYWNlKC8uKig/PSNbXlxzXSokKS8sICcnKSAvL3N0cmlwIGZvciBpZTcKICAgICAgfQoKICAgICAgJHBhcmVudCA9ICQoc2VsZWN0b3IpCiAgICAgICRwYXJlbnQubGVuZ3RoIHx8ICgkcGFyZW50ID0gJHRoaXMucGFyZW50KCkpCgogICAgICBpc0FjdGl2ZSA9ICRwYXJlbnQuaGFzQ2xhc3MoJ29wZW4nKQoKICAgICAgY2xlYXJNZW51cygpCiAgICAgICFpc0FjdGl2ZSAmJiAkcGFyZW50LnRvZ2dsZUNsYXNzKCdvcGVuJykKCiAgICAgIHJldHVybiBmYWxzZQogICAgfQoKICB9CgogIGZ1bmN0aW9uIGNsZWFyTWVudXMoKSB7CiAgICAkKHRvZ2dsZSkucGFyZW50KCkucmVtb3ZlQ2xhc3MoJ29wZW4nKQogIH0KCgogIC8qIERST1BET1dOIFBMVUdJTiBERUZJTklUSU9OCiAgICogPT09PT09PT09PT09PT09PT09PT09PT09PT0gKi8KCiAgJC5mbi5kcm9wZG93biA9IGZ1bmN0aW9uICggb3B0aW9uICkgewogICAgcmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbiAoKSB7CiAgICAgIHZhciAkdGhpcyA9ICQodGhpcykKICAgICAgICAsIGRhdGEgPSAkdGhpcy5kYXRhKCdkcm9wZG93bicpCiAgICAgIGlmICghZGF0YSkgJHRoaXMuZGF0YSgnZHJvcGRvd24nLCAoZGF0YSA9IG5ldyBEcm9wZG93bih0aGlzKSkpCiAgICAgIGlmICh0eXBlb2Ygb3B0aW9uID09ICdzdHJpbmcnKSBkYXRhW29wdGlvbl0uY2FsbCgkdGhpcykKICAgIH0pCiAgfQoKICAkLmZuLmRyb3Bkb3duLkNvbnN0cnVjdG9yID0gRHJvcGRvd24KCgogIC8qIEFQUExZIFRPIFNUQU5EQVJEIERST1BET1dOIEVMRU1FTlRTCiAgICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi8KCiAgJChmdW5jdGlvbiAoKSB7CiAgICAkKCdodG1sJykub24oJ2NsaWNrLmRyb3Bkb3duLmRhdGEtYXBpJywgY2xlYXJNZW51cykKICAgICQoJ2JvZHknKS5vbignY2xpY2suZHJvcGRvd24uZGF0YS1hcGknLCB0b2dnbGUsIERyb3Bkb3duLnByb3RvdHlwZS50b2dnbGUpCiAgfSkKCn0oIHdpbmRvdy5qUXVlcnkgKTs=
      name: Aspera Faspex - /aspera/faspex/javascripts/third-party/bootstrap/bootstrap-dropdown.js
      description: 'Fetched from URL: https://69.46.153.12/aspera/faspex/javascripts/third-party/bootstrap/bootstrap-dropdown.js'
      content_type: application/javascript
      server: Apache
      status_code: "200"
      headers:
        - 'Last-Modified: Thu, 26 May 2022 07:08:26 GMT'
        - 'Etag: "9fe-5dfe4db292e80"'
        - 'Accept-Ranges: bytes'
        - 'Content-Security-Policy: script-src ''self'' ''unsafe-inline'' ''unsafe-eval'' https://local.connectme.us https://d3gcli72yxqn2z.cloudfront.net; frame-ancestors ''none'''
        - 'Strict-Transport-Security: max-age=63072000; includeSubdomains; preload'
        - 'X-Content-Type-Options: nosniff'
        - 'X-Frame-Options: SAMEORIGIN'
        - 'Content-Length: 2558'
        - 'X-Xss-Protection: 1; mode=block'
      created_at: 2024-11-01T19:07:10.688336Z
      updated_at: 2024-11-01T19:07:10.688148Z
      ext_version: 0
      ext_uuid: 0b4183c5-e76a-4d59-bab4-44d12ed8265f
    - id: 453
      data: Ly8galF1ZXJ5IFVJIGhhcyBhIGJ1ZyB3aGVyZSBkaWFsb2cgY29udGVudCBncm93cyBiaWdnZXIgdGhlbiB0aGUgd2lkZ2V0IG9uCi8vIHJlc2l6ZSBhdCBkb2N1bWVudCBlZGdlIChzZWUgaHR0cDovL2J1Z3MuanF1ZXJ5dWkuY29tL3RpY2tldC81NTU5KS4KLy8gQmVsb3cgaXMgYSBmaXggZm9yIHRoaXMgaXNzdWUgdGFrZW4gZnJvbSB0aGUgcGFnZSBsaXN0ZWQgYWJvdmUuCgpqUXVlcnkoZnVuY3Rpb24oJCkgewogIHZhciBwbGcgPSAkLnVpWydyZXNpemFibGUnXS5wcm90b3R5cGUucGx1Z2luczsKICAvLyAwIC0gQWxzb1Jlc2l6ZSwgMSAtIENvbnRhaW5tZW50CiAgdmFyIHRlbXA7CiAgdGVtcCA9IHBsZ1snc3RhcnQnXVswXTsKICBwbGdbJ3N0YXJ0J11bMF0gPSBwbGdbJ3N0YXJ0J11bMV07CiAgcGxnWydzdGFydCddWzFdID0gdGVtcDsKCiAgdGVtcCA9IHBsZ1sncmVzaXplJ11bMF07CiAgcGxnWydyZXNpemUnXVswXSA9IHBsZ1sncmVzaXplJ11bMV07CiAgcGxnWydyZXNpemUnXVsxXSA9IHRlbXA7CiAgLy8gMCAtIEFsc29SZXNpemUsIDIgLSBDb250YWlubWVudAogIHRlbXAgPSBwbGdbJ3N0b3AnXVswXTsKICBwbGdbJ3N0b3AnXVswXSA9IHBsZ1snc3RvcCddWzJdOwogIHBsZ1snc3RvcCddWzJdID0gdGVtcDsKfSk7Cg==
      name: Aspera Faspex - /aspera/faspex/javascripts/third-party/jquery-ui-overrides.js
      description: 'Fetched from URL: https://69.46.153.12/aspera/faspex/javascripts/third-party/jquery-ui-overrides.js'
      content_type: application/javascript
      server: Apache
      status_code: "200"
      headers:
        - 'X-Frame-Options: SAMEORIGIN'
        - 'Accept-Ranges: bytes'
        - 'Content-Length: 643'
        - 'Content-Security-Policy: script-src ''self'' ''unsafe-inline'' ''unsafe-eval'' https://local.connectme.us https://d3gcli72yxqn2z.cloudfront.net; frame-ancestors ''none'''
        - 'X-Xss-Protection: 1; mode=block'
        - 'Strict-Transport-Security: max-age=63072000; includeSubdomains; preload'
        - 'X-Content-Type-Options: nosniff'
        - 'Last-Modified: Thu, 26 May 2022 07:08:26 GMT'
        - 'Etag: "283-5dfe4db292e80"'
      created_at: 2024-11-01T19:07:11.192564Z
      updated_at: 2024-11-01T19:07:11.192381Z
      ext_version: 0
      ext_uuid: 0b6dadff-927e-4d5f-8c99-8964ebc8afd1
    - id: 467
      data: AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMjAwH3Nvb4+LhYW/lI6O/5SPjv+VkI//lpGQ/5mUk/+cmJf/oZ2c/6Ofn/99e3p/AAAAAAAAAAAAAAAAWldWj4aCgP+gnJr/qqak/62pp/+qp6b/p6Oi/6Gdm/+dmZf/oZ2b/6ejov+vrKr/lJKR/wAAAAAAAAAASEhGz359ev+Nioj/a2BZ/4VrWP+DZk//UTYj/1hEOP9sYFn/jYqI/4SDgP+GhIL/jYyK/318e/8AAAAAQUE/j29vbP95dXH/UTwv/31gSf+delr/uKOR/5NqRf9yUDP/bU00/3JaSf97d3L/dXVy/3d3dP9ubWv/HhwbH1ZTT/93c3D/Tjou/4ttU/+7pI7/xqWB/8qtjv+qfEz/mm1B/7CNaP+tlH3/a1E//3Vxbf9mY1//YV9c/z88OY9nZGD/XVJL/3peSP+3mn7/t45i/9q2iv/Or4n/yaZ9/9+9kv/Mro//upt7/4JgQ/9kVkz/ZmNf/1lWU/9PTEi/fHh0/0g2LP90VTz/q4dj/8ukef/DrJT/po98/6aPfP+/rpn/1Kx8/7iPZf+ymIH/aVE//3Zybv9aV1T/eXZy/6ikoP9IMyf/i25U/7iVcP/Qt5j/wq+f/5KNiP+SjYj/vq6f/7uql/+nmIf/lYh7/4V6cf+UkIv/e3h0/7i3tv/m5eT/SS8f/6WHbP/Do4H/0ryi/93X0f/f3tv/397b/9rV0P/Evrf/u7Oq/7Gonv+upp//4N/d/7i3tv+2tLG/6+nl/2VRRf+OcVf/tpV0/9e3kf/OxLf/39zZ/+Hd2f/KwbP/3r2U/6qFX/9tSy3/Yk5C/+ro5f+zsa6/nZuYj+ro4/+RhoD/UDUi/5l5W//Hqov/2bmT/9G6nP/Mroj/4cen/82ylf+hf1//YEUx/5CFff/q5+L/l5WSj0tLSR/Rz8r/39zX/3NZR/+bg2//jW5T/7qdgP/Bn3r/p3xQ/7+ihP+sjGv/jHJc/1I+Mv/f3Nf/zszH/0JBQB8AAAAAlJKPj+Xj3f/Mxb7/XUc5/081I/97XUX/rpN5/4FeQP90Ujb/YEQv/1E9Mf/FwLr/4+Db/5KQjI8AAAAAAAAAADs6OQ+qp6PP2tbR/9PPyf+HfHX/Wkc8/2JHNP9ELB3/V0U6/4d8df/Szsn/19TP/46MiM8AAAAAAAAAAAAAAAAAAAAANjU0D4F+e4+vrKf/xMC7/8fDvv/IxcD/yMS//8bCvf/EwLr/r6yn/399eY8oJyYPAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAODY0H3Nva4+EgHzPiIR//4iEf/+EgHzPdHFtjzg2NR8AAAAAAAAAAAAAAAAAAAAA8AAAwOAApdDAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAAwAAAAAAAAAAAgAEAAIADAADAAwAA8A8AAA==
      name: Aspera Faspex - /aspera/faspex/images/favicon.ico
      description: 'Fetched from URL: https://69.46.153.12/aspera/faspex/images/favicon.ico'
      content_type: image/x-icon
      server: Apache
      status_code: "200"
      headers:
        - 'Strict-Transport-Security: max-age=63072000; includeSubdomains; preload'
        - 'X-Content-Type-Options: nosniff'
        - 'Last-Modified: Thu, 26 May 2022 07:08:26 GMT'
        - 'Content-Length: 1150'
        - 'X-Xss-Protection: 1; mode=block'
        - 'X-Frame-Options: SAMEORIGIN'
        - 'Etag: "47e-5dfe4db292e80"'
        - 'Accept-Ranges: bytes'
        - 'Content-Security-Policy: script-src ''self'' ''unsafe-inline'' ''unsafe-eval'' https://local.connectme.us https://d3gcli72yxqn2z.cloudfront.net; frame-ancestors ''none'''
      created_at: 2024-11-01T19:07:15.730788Z
      updated_at: 2024-11-01T19:07:15.730624Z
      ext_version: 0
      ext_uuid: 10916f76-2ca9-4ee2-bddb-b1e871f069f2
